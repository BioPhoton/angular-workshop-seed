{"version":3,"sources":["packages/compiler/compiler-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","compiler","testing","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__extends","__","constructor","prototype","create","MockResourceLoader","_super","_this","apply","arguments","_expectations","_definitions","Map","_requests","get","url","request","_PendingRequest","push","getPromise","hasPendingRequests","length","expect","response","expectation","_Expectation","when","set","flush","Error","_processRequest","shift","verifyNoOutstandingExpectations","urls","i","join","remove","list","el","index","indexOf","splice","complete","has","ResourceLoader","promise","Promise","res","rej","resolve","reject","MockSchemaRegistry","existingProperties","attrPropMapping","existingElements","invalidProperties","invalidAttributes","hasProperty","tagName","property","schemas","value","hasElement","schemaMetas","toLowerCase","allKnownElementNames","keys","securityContext","selector","isAttribute","core","SecurityContext","NONE","getMappedPropName","attrName","getDefaultComponentElementName","validateProperty","name","error","msg","validateAttribute","normalizeAnimationStyleProperty","propName","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","val","toString","MockDirectiveResolver","reflector","call","_directives","type","throwIfNotFound","setDirective","metadata","DirectiveResolver","MockNgModuleResolver","_ngModules","setNgModule","NgModuleResolver","MockPipeResolver","refector","_pipes","setPipe","PipeResolver","defineProperty"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.3\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/compiler')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler/testing', ['exports', '@angular/compiler'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = global.ng.compiler || {}, global.ng.compiler.testing = {}),global.ng.compiler));\n}(this, (function (exports,compiler) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A mock implementation of {@link ResourceLoader} that allows outgoing requests to be mocked\n * and responded to within a single test, without going to the network.\n */\nvar MockResourceLoader = /** @class */ (function (_super) {\n    __extends(MockResourceLoader, _super);\n    function MockResourceLoader() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._expectations = [];\n        _this._definitions = new Map();\n        _this._requests = [];\n        return _this;\n    }\n    MockResourceLoader.prototype.get = function (url) {\n        var request = new _PendingRequest(url);\n        this._requests.push(request);\n        return request.getPromise();\n    };\n    MockResourceLoader.prototype.hasPendingRequests = function () { return !!this._requests.length; };\n    /**\n     * Add an expectation for the given URL. Incoming requests will be checked against\n     * the next expectation (in FIFO order). The `verifyNoOutstandingExpectations` method\n     * can be used to check if any expectations have not yet been met.\n     *\n     * The response given will be returned if the expectation matches.\n     */\n    /**\n       * Add an expectation for the given URL. Incoming requests will be checked against\n       * the next expectation (in FIFO order). The `verifyNoOutstandingExpectations` method\n       * can be used to check if any expectations have not yet been met.\n       *\n       * The response given will be returned if the expectation matches.\n       */\n    MockResourceLoader.prototype.expect = /**\n       * Add an expectation for the given URL. Incoming requests will be checked against\n       * the next expectation (in FIFO order). The `verifyNoOutstandingExpectations` method\n       * can be used to check if any expectations have not yet been met.\n       *\n       * The response given will be returned if the expectation matches.\n       */\n    function (url, response) {\n        var expectation = new _Expectation(url, response);\n        this._expectations.push(expectation);\n    };\n    /**\n     * Add a definition for the given URL to return the given response. Unlike expectations,\n     * definitions have no order and will satisfy any matching request at any time. Also\n     * unlike expectations, unused definitions do not cause `verifyNoOutstandingExpectations`\n     * to return an error.\n     */\n    /**\n       * Add a definition for the given URL to return the given response. Unlike expectations,\n       * definitions have no order and will satisfy any matching request at any time. Also\n       * unlike expectations, unused definitions do not cause `verifyNoOutstandingExpectations`\n       * to return an error.\n       */\n    MockResourceLoader.prototype.when = /**\n       * Add a definition for the given URL to return the given response. Unlike expectations,\n       * definitions have no order and will satisfy any matching request at any time. Also\n       * unlike expectations, unused definitions do not cause `verifyNoOutstandingExpectations`\n       * to return an error.\n       */\n    function (url, response) { this._definitions.set(url, response); };\n    /**\n     * Process pending requests and verify there are no outstanding expectations. Also fails\n     * if no requests are pending.\n     */\n    /**\n       * Process pending requests and verify there are no outstanding expectations. Also fails\n       * if no requests are pending.\n       */\n    MockResourceLoader.prototype.flush = /**\n       * Process pending requests and verify there are no outstanding expectations. Also fails\n       * if no requests are pending.\n       */\n    function () {\n        if (this._requests.length === 0) {\n            throw new Error('No pending requests to flush');\n        }\n        do {\n            this._processRequest((this._requests.shift()));\n        } while (this._requests.length > 0);\n        this.verifyNoOutstandingExpectations();\n    };\n    /**\n     * Throw an exception if any expectations have not been satisfied.\n     */\n    /**\n       * Throw an exception if any expectations have not been satisfied.\n       */\n    MockResourceLoader.prototype.verifyNoOutstandingExpectations = /**\n       * Throw an exception if any expectations have not been satisfied.\n       */\n    function () {\n        if (this._expectations.length === 0)\n            return;\n        var urls = [];\n        for (var i = 0; i < this._expectations.length; i++) {\n            var expectation = this._expectations[i];\n            urls.push(expectation.url);\n        }\n        throw new Error(\"Unsatisfied requests: \" + urls.join(', '));\n    };\n    MockResourceLoader.prototype._processRequest = function (request) {\n        var url = request.url;\n        if (this._expectations.length > 0) {\n            var expectation = this._expectations[0];\n            if (expectation.url == url) {\n                remove(this._expectations, expectation);\n                request.complete(expectation.response);\n                return;\n            }\n        }\n        if (this._definitions.has(url)) {\n            var response = this._definitions.get(url);\n            request.complete(response == null ? null : response);\n            return;\n        }\n        throw new Error(\"Unexpected request \" + url);\n    };\n    return MockResourceLoader;\n}(compiler.ResourceLoader));\nvar _PendingRequest = /** @class */ (function () {\n    function _PendingRequest(url) {\n        var _this = this;\n        this.url = url;\n        this.promise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    _PendingRequest.prototype.complete = function (response) {\n        if (response == null) {\n            this.reject(\"Failed to load \" + this.url);\n        }\n        else {\n            this.resolve(response);\n        }\n    };\n    _PendingRequest.prototype.getPromise = function () { return this.promise; };\n    return _PendingRequest;\n}());\nvar _Expectation = /** @class */ (function () {\n    function _Expectation(url, response) {\n        this.url = url;\n        this.response = response;\n    }\n    return _Expectation;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MockSchemaRegistry = /** @class */ (function () {\n    function MockSchemaRegistry(existingProperties, attrPropMapping, existingElements, invalidProperties, invalidAttributes) {\n        this.existingProperties = existingProperties;\n        this.attrPropMapping = attrPropMapping;\n        this.existingElements = existingElements;\n        this.invalidProperties = invalidProperties;\n        this.invalidAttributes = invalidAttributes;\n    }\n    MockSchemaRegistry.prototype.hasProperty = function (tagName, property, schemas) {\n        var value = this.existingProperties[property];\n        return value === void 0 ? true : value;\n    };\n    MockSchemaRegistry.prototype.hasElement = function (tagName, schemaMetas) {\n        var value = this.existingElements[tagName.toLowerCase()];\n        return value === void 0 ? true : value;\n    };\n    MockSchemaRegistry.prototype.allKnownElementNames = function () { return Object.keys(this.existingElements); };\n    MockSchemaRegistry.prototype.securityContext = function (selector, property, isAttribute) {\n        return compiler.core.SecurityContext.NONE;\n    };\n    MockSchemaRegistry.prototype.getMappedPropName = function (attrName) { return this.attrPropMapping[attrName] || attrName; };\n    MockSchemaRegistry.prototype.getDefaultComponentElementName = function () { return 'ng-component'; };\n    MockSchemaRegistry.prototype.validateProperty = function (name) {\n        if (this.invalidProperties.indexOf(name) > -1) {\n            return { error: true, msg: \"Binding to property '\" + name + \"' is disallowed for security reasons\" };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    MockSchemaRegistry.prototype.validateAttribute = function (name) {\n        if (this.invalidAttributes.indexOf(name) > -1) {\n            return {\n                error: true,\n                msg: \"Binding to attribute '\" + name + \"' is disallowed for security reasons\"\n            };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    MockSchemaRegistry.prototype.normalizeAnimationStyleProperty = function (propName) { return propName; };\n    MockSchemaRegistry.prototype.normalizeAnimationStyleValue = function (camelCaseProp, userProvidedProp, val) {\n        return { error: (null), value: val.toString() };\n    };\n    return MockSchemaRegistry;\n}());\n\n/**\n * An implementation of {@link DirectiveResolver} that allows overriding\n * various properties of directives.\n */\nvar MockDirectiveResolver = /** @class */ (function (_super) {\n    __extends(MockDirectiveResolver, _super);\n    function MockDirectiveResolver(reflector) {\n        var _this = _super.call(this, reflector) || this;\n        _this._directives = new Map();\n        return _this;\n    }\n    MockDirectiveResolver.prototype.resolve = function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        return this._directives.get(type) || _super.prototype.resolve.call(this, type, throwIfNotFound);\n    };\n    /**\n     * Overrides the {@link core.Directive} for a directive.\n     */\n    /**\n       * Overrides the {@link core.Directive} for a directive.\n       */\n    MockDirectiveResolver.prototype.setDirective = /**\n       * Overrides the {@link core.Directive} for a directive.\n       */\n    function (type, metadata) {\n        this._directives.set(type, metadata);\n    };\n    return MockDirectiveResolver;\n}(compiler.DirectiveResolver));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MockNgModuleResolver = /** @class */ (function (_super) {\n    __extends(MockNgModuleResolver, _super);\n    function MockNgModuleResolver(reflector) {\n        var _this = _super.call(this, reflector) || this;\n        _this._ngModules = new Map();\n        return _this;\n    }\n    /**\n     * Overrides the {@link NgModule} for a module.\n     */\n    /**\n       * Overrides the {@link NgModule} for a module.\n       */\n    MockNgModuleResolver.prototype.setNgModule = /**\n       * Overrides the {@link NgModule} for a module.\n       */\n    function (type, metadata) {\n        this._ngModules.set(type, metadata);\n    };\n    /**\n     * Returns the {@link NgModule} for a module:\n     * - Set the {@link NgModule} to the overridden view when it exists or fallback to the\n     * default\n     * `NgModuleResolver`, see `setNgModule`.\n     */\n    /**\n       * Returns the {@link NgModule} for a module:\n       * - Set the {@link NgModule} to the overridden view when it exists or fallback to the\n       * default\n       * `NgModuleResolver`, see `setNgModule`.\n       */\n    MockNgModuleResolver.prototype.resolve = /**\n       * Returns the {@link NgModule} for a module:\n       * - Set the {@link NgModule} to the overridden view when it exists or fallback to the\n       * default\n       * `NgModuleResolver`, see `setNgModule`.\n       */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        return this._ngModules.get(type) || (_super.prototype.resolve.call(this, type, throwIfNotFound));\n    };\n    return MockNgModuleResolver;\n}(compiler.NgModuleResolver));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MockPipeResolver = /** @class */ (function (_super) {\n    __extends(MockPipeResolver, _super);\n    function MockPipeResolver(refector) {\n        var _this = _super.call(this, refector) || this;\n        _this._pipes = new Map();\n        return _this;\n    }\n    /**\n     * Overrides the {@link Pipe} for a pipe.\n     */\n    /**\n       * Overrides the {@link Pipe} for a pipe.\n       */\n    MockPipeResolver.prototype.setPipe = /**\n       * Overrides the {@link Pipe} for a pipe.\n       */\n    function (type, metadata) { this._pipes.set(type, metadata); };\n    /**\n     * Returns the {@link Pipe} for a pipe:\n     * - Set the {@link Pipe} to the overridden view when it exists or fallback to the\n     * default\n     * `PipeResolver`, see `setPipe`.\n     */\n    /**\n       * Returns the {@link Pipe} for a pipe:\n       * - Set the {@link Pipe} to the overridden view when it exists or fallback to the\n       * default\n       * `PipeResolver`, see `setPipe`.\n       */\n    MockPipeResolver.prototype.resolve = /**\n       * Returns the {@link Pipe} for a pipe:\n       * - Set the {@link Pipe} to the overridden view when it exists or fallback to the\n       * default\n       * `PipeResolver`, see `setPipe`.\n       */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var metadata = this._pipes.get(type);\n        if (!metadata) {\n            metadata = (_super.prototype.resolve.call(this, type, throwIfNotFound));\n        }\n        return metadata;\n    };\n    return MockPipeResolver;\n}(compiler.PipeResolver));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.MockResourceLoader = MockResourceLoader;\nexports.MockSchemaRegistry = MockSchemaRegistry;\nexports.MockDirectiveResolver = MockDirectiveResolver;\nexports.MockNgModuleResolver = MockNgModuleResolver;\nexports.MockPipeResolver = MockPipeResolver;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler-testing.umd.js.map\n"]}