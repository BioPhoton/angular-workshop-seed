{"version":3,"file":"cdk-bidi.umd.js","sources":["../../src/cdk/bidi/index.ts","../../src/cdk/bidi/public_api.ts","../../src/cdk/bidi/dir.ts","../../src/cdk/bidi/directionality.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Directionality,DIRECTIONALITY_PROVIDER_FACTORY,DIRECTIONALITY_PROVIDER,DIR_DOCUMENT,Direction,Dir,BidiModule} from './public_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {Dir} from './dir';\nimport {DIR_DOCUMENT, Directionality} from './directionality';\n\nexport {\n  Directionality,\n  DIRECTIONALITY_PROVIDER_FACTORY,\n  DIRECTIONALITY_PROVIDER,\n  DIR_DOCUMENT,\n  Direction,\n} from './directionality';\nexport {Dir} from './dir';\nexport class BidiModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [Dir],\n  declarations: [Dir],\n  providers: [\n    {provide: DIR_DOCUMENT, useExisting: DOCUMENT},\n    Directionality,\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BidiModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBidiModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBidiModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  Output,\n  Input,\n  EventEmitter\n} from '@angular/core';\n\nimport {Direction, Directionality} from './directionality';\n/**\n * Directive to listen for changes of direction of part of the DOM.\n * \n * Would provide itself in case a component looks for the Directionality service\n */\nexport class Dir implements Directionality {\n/**\n * Layout direction of the element.\n */\n_dir: Direction = 'ltr';\n/**\n * Whether the `value` has been set to its initial value.\n */\nprivate _isInitialized: boolean = false;\n/**\n * Event emitted when the direction changes.\n */\nchange = new EventEmitter<void>();\n/**\n * \\@docs-private\n * @return {?}\n */\nget dir(): Direction {\n    return this._dir;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset dir(v: Direction) {\n    let /** @type {?} */ old = this._dir;\n    this._dir = v;\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit();\n    }\n  }\n/**\n * Current layout direction of the element.\n * @return {?}\n */\nget value(): Direction { return this.dir; }\n/**\n * Initialize once default value has been set.\n * @return {?}\n */\nngAfterContentInit() {\n    this._isInitialized = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dir]',\n  providers: [{provide: Directionality, useExisting: Dir}],\n  host: {'[dir]': 'dir'},\n  exportAs: 'dir',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'change': [{ type: Output, args: ['dirChange', ] },],\n'dir': [{ type: Input, args: ['dir', ] },],\n};\n}\n\nfunction Dir_tsickle_Closure_declarations() {\n/** @type {?} */\nDir.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDir.ctorParameters;\n/** @type {?} */\nDir.propDecorators;\n/**\n * Layout direction of the element.\n * @type {?}\n */\nDir.prototype._dir;\n/**\n * Whether the `value` has been set to its initial value.\n * @type {?}\n */\nDir.prototype._isInitialized;\n/**\n * Event emitted when the direction changes.\n * @type {?}\n */\nDir.prototype.change;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  EventEmitter,\n  Injectable,\n  Optional,\n  SkipSelf,\n  Inject,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\n\n\nexport type Direction = 'ltr' | 'rtl';\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n * \n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n * \n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('md-dir-doc');\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nexport class Directionality {\n  readonly value: Direction = 'ltr';\n  readonly change = new EventEmitter<void>();\n/**\n * @param {?=} _document\n */\nconstructor(  _document?: any) {\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value = (bodyDir || htmlDir || 'ltr') as Direction;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT, ] }, ]},\n];\n}\n\nfunction Directionality_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectionality.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectionality.ctorParameters;\n/** @type {?} */\nDirectionality.prototype.value;\n/** @type {?} */\nDirectionality.prototype.change;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDirectionality\n * @param {?} _document\n * @return {?}\n */\nexport function DIRECTIONALITY_PROVIDER_FACTORY(parentDirectionality, _document) {\n  return parentDirectionality || new Directionality(_document);\n}\n/**\n * \\@docs-private\n */\nexport const DIRECTIONALITY_PROVIDER = {\n  // If there is already a Directionality available, use that. Otherwise, provide a new one.\n  provide: Directionality,\n  deps: [[new Optional(), new SkipSelf(), Directionality], [new Optional(), DOCUMENT]],\n  useFactory: DIRECTIONALITY_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["DOCUMENT","Input","Output","Optional","SkipSelf","Inject","Injectable","EventEmitter"],"mappings":"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"}