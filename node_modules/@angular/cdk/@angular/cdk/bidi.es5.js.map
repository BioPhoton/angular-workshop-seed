{"version":3,"file":"bidi.es5.js","sources":["../../../src/cdk/bidi/index.ts","../../../src/cdk/bidi/public_api.ts","../../../src/cdk/bidi/dir.ts","../../../src/cdk/bidi/directionality.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Directionality,DIRECTIONALITY_PROVIDER_FACTORY,DIRECTIONALITY_PROVIDER,DIR_DOCUMENT,Direction,Dir,BidiModule} from './public_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {Dir} from './dir';\nimport {DIR_DOCUMENT, Directionality} from './directionality';\n\nexport {\n  Directionality,\n  DIRECTIONALITY_PROVIDER_FACTORY,\n  DIRECTIONALITY_PROVIDER,\n  DIR_DOCUMENT,\n  Direction,\n} from './directionality';\nexport {Dir} from './dir';\nexport class BidiModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [Dir],\n  declarations: [Dir],\n  providers: [\n    {provide: DIR_DOCUMENT, useExisting: DOCUMENT},\n    Directionality,\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BidiModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBidiModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBidiModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  Output,\n  Input,\n  EventEmitter\n} from '@angular/core';\n\nimport {Direction, Directionality} from './directionality';\n/**\n * Directive to listen for changes of direction of part of the DOM.\n * \n * Would provide itself in case a component looks for the Directionality service\n */\nexport class Dir implements Directionality {\n/**\n * Layout direction of the element.\n */\n_dir: Direction = 'ltr';\n/**\n * Whether the `value` has been set to its initial value.\n */\nprivate _isInitialized: boolean = false;\n/**\n * Event emitted when the direction changes.\n */\nchange = new EventEmitter<void>();\n/**\n * \\@docs-private\n * @return {?}\n */\nget dir(): Direction {\n    return this._dir;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset dir(v: Direction) {\n    let /** @type {?} */ old = this._dir;\n    this._dir = v;\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit();\n    }\n  }\n/**\n * Current layout direction of the element.\n * @return {?}\n */\nget value(): Direction { return this.dir; }\n/**\n * Initialize once default value has been set.\n * @return {?}\n */\nngAfterContentInit() {\n    this._isInitialized = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dir]',\n  providers: [{provide: Directionality, useExisting: Dir}],\n  host: {'[dir]': 'dir'},\n  exportAs: 'dir',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'change': [{ type: Output, args: ['dirChange', ] },],\n'dir': [{ type: Input, args: ['dir', ] },],\n};\n}\n\nfunction Dir_tsickle_Closure_declarations() {\n/** @type {?} */\nDir.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDir.ctorParameters;\n/** @type {?} */\nDir.propDecorators;\n/**\n * Layout direction of the element.\n * @type {?}\n */\nDir.prototype._dir;\n/**\n * Whether the `value` has been set to its initial value.\n * @type {?}\n */\nDir.prototype._isInitialized;\n/**\n * Event emitted when the direction changes.\n * @type {?}\n */\nDir.prototype.change;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  EventEmitter,\n  Injectable,\n  Optional,\n  SkipSelf,\n  Inject,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\n\n\nexport type Direction = 'ltr' | 'rtl';\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n * \n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n * \n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('md-dir-doc');\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nexport class Directionality {\n  readonly value: Direction = 'ltr';\n  readonly change = new EventEmitter<void>();\n/**\n * @param {?=} _document\n */\nconstructor(  _document?: any) {\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value = (bodyDir || htmlDir || 'ltr') as Direction;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT, ] }, ]},\n];\n}\n\nfunction Directionality_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectionality.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectionality.ctorParameters;\n/** @type {?} */\nDirectionality.prototype.value;\n/** @type {?} */\nDirectionality.prototype.change;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDirectionality\n * @param {?} _document\n * @return {?}\n */\nexport function DIRECTIONALITY_PROVIDER_FACTORY(parentDirectionality, _document) {\n  return parentDirectionality || new Directionality(_document);\n}\n/**\n * \\@docs-private\n */\nexport const DIRECTIONALITY_PROVIDER = {\n  // If there is already a Directionality available, use that. Otherwise, provide a new one.\n  provide: Directionality,\n  deps: [[new Optional(), new SkipSelf(), Directionality], [new Optional(), DOCUMENT]],\n  useFactory: DIRECTIONALITY_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}