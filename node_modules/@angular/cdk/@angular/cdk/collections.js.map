{"version":3,"file":"collections.js","sources":["../../../src/cdk/collections/index.ts","../../../src/cdk/collections/selection.ts","../../../src/cdk/collections/data-source.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {CollectionViewer,DataSource,SelectionModel,SelectionChange} from './public_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Subject} from 'rxjs/Subject';\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nexport class SelectionModel<T> {\n/**\n * Currently-selected values.\n */\nprivate _selection: Set<T> = new Set();\n/**\n * Keeps track of the deselected options that haven't been emitted by the change event.\n */\nprivate _deselectedToEmit: T[] = [];\n/**\n * Keeps track of the selected option that haven't been emitted by the change event.\n */\nprivate _selectedToEmit: T[] = [];\n/**\n * Cache for the array value of the selected items.\n */\nprivate _selected: T[] | null;\n/**\n * Selected value(s).\n * @return {?}\n */\nget selected(): T[] {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n\n    return this._selected;\n  }\n/**\n * Event emitted when the value has changed.\n */\nonChange: Subject<SelectionChange<T>> | null = this._emitChanges ? new Subject() : null;\n/**\n * @param {?=} _isMulti\n * @param {?=} initiallySelectedValues\n * @param {?=} _emitChanges\n */\nconstructor(\nprivate _isMulti = false,\n    initiallySelectedValues?: T[],\nprivate _emitChanges = true) {\n\n    if (initiallySelectedValues) {\n      if (_isMulti) {\n        initiallySelectedValues.forEach(value => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n/**\n * Selects a value or an array of values.\n * @param {?} value\n * @return {?}\n */\nselect(value: T): void {\n    this._markSelected(value);\n    this._emitChangeEvent();\n  }\n/**\n * Deselects a value or an array of values.\n * @param {?} value\n * @return {?}\n */\ndeselect(value: T): void {\n    this._unmarkSelected(value);\n    this._emitChangeEvent();\n  }\n/**\n * Toggles a value between selected and deselected.\n * @param {?} value\n * @return {?}\n */\ntoggle(value: T): void {\n    this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n/**\n * Clears all of the selected values.\n * @return {?}\n */\nclear(): void {\n    this._unmarkAll();\n    this._emitChangeEvent();\n  }\n/**\n * Determines whether a value is selected.\n * @param {?} value\n * @return {?}\n */\nisSelected(value: T): boolean {\n    return this._selection.has(value);\n  }\n/**\n * Determines whether the model does not have a value.\n * @return {?}\n */\nisEmpty(): boolean {\n    return this._selection.size === 0;\n  }\n/**\n * Determines whether the model has a value.\n * @return {?}\n */\nhasValue(): boolean {\n    return !this.isEmpty();\n  }\n/**\n * Sorts the selected values based on a predicate function.\n * @param {?=} predicate\n * @return {?}\n */\nsort(predicate?: (a: T, b: T) => number): void {\n    if (this._isMulti && this._selected) {\n      this._selected.sort(predicate);\n    }\n  }\n/**\n * Emits a change event and clears the records of selected and deselected values.\n * @return {?}\n */\nprivate _emitChangeEvent() {\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      let /** @type {?} */ eventData = new SelectionChange(this._selectedToEmit, this._deselectedToEmit);\n\n      if (this.onChange) {\n        this.onChange.next(eventData);\n      }\n\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n\n    this._selected = null;\n  }\n/**\n * Selects a value.\n * @param {?} value\n * @return {?}\n */\nprivate _markSelected(value: T) {\n    if (!this.isSelected(value)) {\n      if (!this._isMulti) {\n        this._unmarkAll();\n      }\n\n      this._selection.add(value);\n\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n/**\n * Deselects a value.\n * @param {?} value\n * @return {?}\n */\nprivate _unmarkSelected(value: T) {\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n/**\n * Clears out the selected values.\n * @return {?}\n */\nprivate _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach(value => this._unmarkSelected(value));\n    }\n  }\n}\n\nfunction SelectionModel_tsickle_Closure_declarations() {\n/**\n * Currently-selected values.\n * @type {?}\n */\nSelectionModel.prototype._selection;\n/**\n * Keeps track of the deselected options that haven't been emitted by the change event.\n * @type {?}\n */\nSelectionModel.prototype._deselectedToEmit;\n/**\n * Keeps track of the selected option that haven't been emitted by the change event.\n * @type {?}\n */\nSelectionModel.prototype._selectedToEmit;\n/**\n * Cache for the array value of the selected items.\n * @type {?}\n */\nSelectionModel.prototype._selected;\n/**\n * Event emitted when the value has changed.\n * @type {?}\n */\nSelectionModel.prototype.onChange;\n/** @type {?} */\nSelectionModel.prototype._isMulti;\n/** @type {?} */\nSelectionModel.prototype._emitChanges;\n}\n\n/**\n * Describes an event emitted when the value of a MdSelectionModel has changed.\n * \\@docs-private\n */\nexport class SelectionChange<T> {\n/**\n * @param {?=} added\n * @param {?=} removed\n */\nconstructor(public added?: T[],\npublic removed?: T[]) { }\n}\n\nfunction SelectionChange_tsickle_Closure_declarations() {\n/** @type {?} */\nSelectionChange.prototype.added;\n/** @type {?} */\nSelectionChange.prototype.removed;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\nimport {CollectionViewer} from './collection-viewer';\n/**\n * @abstract\n */\nexport abstract class DataSource<T> {\n/**\n * Connects a collection viewer (such as a data-table) to this data source. Note that\n * the stream provided will be accessed during change detection and should not directly change\n * values that are bound in template views.\n * @abstract\n * @param {?} collectionViewer The component that exposes a view over the data provided by this\n *     data source.\n * @return {?} Observable that emits a new value when the data changes.\n */\nconnect(collectionViewer: CollectionViewer) {}\n/**\n * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n * to perform any clean-up or tear-down operations when a view is being destroyed.\n * \n * @abstract\n * @param {?} collectionViewer The component that exposes a view over the data provided by this\n *     data source.\n * @return {?}\n */\ndisconnect(collectionViewer: CollectionViewer) {}\n}\n"],"names":[],"mappings":"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"}