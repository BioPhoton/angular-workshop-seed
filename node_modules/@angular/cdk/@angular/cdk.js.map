{"version":3,"file":"cdk.js","sources":["../../src/cdk/index.ts","../../src/cdk/observe-content/observe-content.ts","../../src/cdk/portal/portal-directives.ts","../../src/cdk/portal/dom-portal-host.ts","../../src/cdk/portal/portal.ts","../../src/cdk/portal/portal-errors.ts","../../src/cdk/table/index.ts","../../src/cdk/table/data-source.ts","../../src/cdk/table/table.ts","../../src/cdk/table/cell.ts","../../src/cdk/table/row.ts","../../src/cdk/coercion/number-property.ts","../../src/cdk/bidi/index.ts","../../src/cdk/bidi/dir.ts","../../src/cdk/bidi/directionality.ts","../../src/cdk/a11y/index.ts","../../src/cdk/a11y/focus-key-manager.ts","../../src/cdk/a11y/activedescendant-key-manager.ts","../../src/cdk/a11y/list-key-manager.ts","../../src/cdk/keyboard/keycodes.ts","../../src/cdk/a11y/fake-mousedown.ts","../../src/cdk/platform/index.ts","../../src/cdk/platform/features.ts","../../src/cdk/a11y/live-announcer.ts","../../src/cdk/a11y/focus-trap.ts","../../src/cdk/rxjs/rx-operators.ts","../../src/cdk/rxjs/rx-chain.ts","../../src/cdk/a11y/interactivity-checker.ts","../../src/cdk/platform/platform.ts","../../src/cdk/coercion/boolean-property.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {A11yModule,LIVE_ANNOUNCER_ELEMENT_TOKEN,AriaLivePoliteness,LiveAnnouncer,LIVE_ANNOUNCER_PROVIDER_FACTORY,LIVE_ANNOUNCER_PROVIDER,isFakeMousedownFromScreenReader,FocusTrap,FocusTrapFactory,FocusTrapDeprecatedDirective,FocusTrapDirective,InteractivityChecker,CanDisable,ListKeyManager,Highlightable,ActiveDescendantKeyManager,Focusable,FocusKeyManager,Directionality,DIRECTIONALITY_PROVIDER_FACTORY,DIRECTIONALITY_PROVIDER,DIR_DOCUMENT,Direction,Dir,BidiModule,coerceBooleanProperty,coerceNumberProperty,CdkTableModule,CollectionViewer,DataSource,getTableUnknownColumnError,RowPlaceholder,HeaderRowPlaceholder,CDK_TABLE_TEMPLATE,CdkTable,CdkCellDef,CdkHeaderCellDef,CdkColumnDef,CdkHeaderCell,CdkCell,CDK_ROW_TEMPLATE,BaseRowDef,CdkHeaderRowDef,CdkRowDef,CdkCellOutletRowContext,CdkCellOutlet,CdkHeaderRow,CdkRow,PlatformModule,Platform,getSupportedInputTypes,ComponentType,Portal,ComponentPortal,TemplatePortal,PortalHost,BasePortalHost,DomPortalHost,TemplatePortalDirective,PortalHostDirective,PortalModule,RxChain,StrictRxChain,FinallyBrand,CatchBrand,DoBrand,MapBrand,FilterBrand,ShareBrand,FirstBrand,SwitchMapBrand,StartWithBrand,DebounceTimeBrand,AuditTimeBrand,TakeUntilBrand,finallyOperatorType,catchOperatorType,doOperatorType,mapOperatorType,filterOperatorType,shareOperatorType,firstOperatorType,switchMapOperatorType,startWithOperatorType,debounceTimeOperatorType,auditTimeOperatorType,takeUntilOperatorType,finallyOperator,catchOperator,doOperator,map,filter,share,first,switchMap,startWith,debounceTime,auditTime,takeUntil,MdMutationObserverFactory,ObserveContent,ObserveContentModule,UP_ARROW,DOWN_ARROW,RIGHT_ARROW,LEFT_ARROW,PAGE_UP,PAGE_DOWN,HOME,END,ENTER,SPACE,TAB,ESCAPE,BACKSPACE,DELETE} from './public_api';\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ElementRef,\n  NgModule,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  AfterContentInit,\n  Injectable,\n} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {RxChain, debounceTime} from '../rxjs/index';\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nexport class MdMutationObserverFactory {\n/**\n * @param {?} callback\n * @return {?}\n */\ncreate(callback): MutationObserver | null {\n    return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdMutationObserverFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMutationObserverFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMutationObserverFactory.ctorParameters;\n}\n\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nexport class ObserveContent implements AfterContentInit, OnDestroy {\nprivate _observer: MutationObserver | null;\n/**\n * Event emitted for each change in the element's content.\n */\nevent = new EventEmitter<MutationRecord[]>();\n/**\n * Used for debouncing the emitted values to the observeContent event.\n */\nprivate _debouncer = new Subject<MutationRecord[]>();\n/**\n * Debounce interval for emitting the changes.\n */\ndebounce: number;\n/**\n * @param {?} _mutationObserverFactory\n * @param {?} _elementRef\n */\nconstructor(\nprivate _mutationObserverFactory: MdMutationObserverFactory,\nprivate _elementRef: ElementRef) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    if (this.debounce > 0) {\n      RxChain.from(this._debouncer)\n        .call(debounceTime, this.debounce)\n        .subscribe((mutations: MutationRecord[]) => this.event.emit(mutations));\n    } else {\n      this._debouncer.subscribe(mutations => this.event.emit(mutations));\n    }\n\n    this._observer = this._mutationObserverFactory.create((mutations: MutationRecord[]) => {\n      this._debouncer.next(mutations);\n    });\n\n    if (this._observer) {\n      this._observer.observe(this._elementRef.nativeElement, {\n        characterData: true,\n        childList: true,\n        subtree: true\n      });\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._debouncer.complete();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkObserveContent]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdMutationObserverFactory, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'event': [{ type: Output, args: ['cdkObserveContent', ] },],\n'debounce': [{ type: Input },],\n};\n}\n\nfunction ObserveContent_tsickle_Closure_declarations() {\n/** @type {?} */\nObserveContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserveContent.ctorParameters;\n/** @type {?} */\nObserveContent.propDecorators;\n/** @type {?} */\nObserveContent.prototype._observer;\n/**\n * Event emitted for each change in the element's content.\n * @type {?}\n */\nObserveContent.prototype.event;\n/**\n * Used for debouncing the emitted values to the observeContent event.\n * @type {?}\n */\nObserveContent.prototype._debouncer;\n/**\n * Debounce interval for emitting the changes.\n * @type {?}\n */\nObserveContent.prototype.debounce;\n/** @type {?} */\nObserveContent.prototype._mutationObserverFactory;\n/** @type {?} */\nObserveContent.prototype._elementRef;\n}\n\nexport class ObserveContentModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [ObserveContent],\n  declarations: [ObserveContent],\n  providers: [MdMutationObserverFactory]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ObserveContentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nObserveContentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nObserveContentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n    NgModule,\n    ComponentRef,\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    OnDestroy,\n    Input,\n} from '@angular/core';\nimport {Portal, TemplatePortal, ComponentPortal, BasePortalHost} from './portal';\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n * \n * Usage:\n * <ng-template portal #greeting>\n *   <p> Hello {{name}} </p>\n * </ng-template>\n */\nexport class TemplatePortalDirective extends TemplatePortal {\n/**\n * @param {?} templateRef\n * @param {?} viewContainerRef\n */\nconstructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdk-portal], [cdkPortal], [portal]',\n  exportAs: 'cdkPortal',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\n}\n\nfunction TemplatePortalDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nTemplatePortalDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTemplatePortalDirective.ctorParameters;\n}\n\n/**\n * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\n * directly attached to it, enabling declarative use.\n * \n * Usage:\n * <ng-template [cdkPortalHost]=\"greeting\"></ng-template>\n */\nexport class PortalHostDirective extends BasePortalHost implements OnDestroy {\n/**\n * The attached portal.\n */\nprivate _portal: Portal<any> | null = null;\n/**\n * @param {?} _componentFactoryResolver\n * @param {?} _viewContainerRef\n */\nconstructor(\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedPortal() { return this.portal; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedPortal(v) { this.portal = v; }\n/**\n * Portal associated with the Portal host.\n * @return {?}\n */\nget portal(): Portal<any> | null {\n    return this._portal;\n  }\n/**\n * @param {?} portal\n * @return {?}\n */\nset portal(portal: Portal<any> | null) {\n    if (this.hasAttached()) {\n      super.detach();\n    }\n\n    if (portal) {\n      super.attach(portal);\n    }\n\n    this._portal = portal;\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    super.dispose();\n    this._portal = null;\n  }\n/**\n * Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver.\n * \n * @template T\n * @param {?} portal Portal to be attached to the portal host.\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    portal.setAttachedHost(this);\n\n    // If the portal specifies an origin, use that as the logical location of the component\n    // in the application tree. Otherwise use the location of this PortalHost.\n    let /** @type {?} */ viewContainerRef = portal.viewContainerRef != null ?\n        portal.viewContainerRef :\n        this._viewContainerRef;\n\n    let /** @type {?} */ componentFactory =\n        this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let /** @type {?} */ ref = viewContainerRef.createComponent(\n        componentFactory, viewContainerRef.length,\n        portal.injector || viewContainerRef.parentInjector);\n\n    super.setDisposeFn(() => ref.destroy());\n    this._portal = portal;\n\n    return ref;\n  }\n/**\n * Attach the given TemplatePortal to this PortlHost as an embedded View.\n * @param {?} portal Portal to be attached.\n * @return {?}\n */\nattachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    portal.setAttachedHost(this);\n\n    this._viewContainerRef.createEmbeddedView(portal.templateRef);\n    super.setDisposeFn(() => this._viewContainerRef.clear());\n\n    this._portal = portal;\n\n    // TODO(jelbourn): return locals from view\n    return new Map<string, any>();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkPortalHost], [portalHost]',\n  inputs: ['portal: cdkPortalHost']\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ComponentFactoryResolver, },\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_deprecatedPortal': [{ type: Input, args: ['portalHost', ] },],\n};\n}\n\nfunction PortalHostDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nPortalHostDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPortalHostDirective.ctorParameters;\n/** @type {?} */\nPortalHostDirective.propDecorators;\n/**\n * The attached portal.\n * @type {?}\n */\nPortalHostDirective.prototype._portal;\n/** @type {?} */\nPortalHostDirective.prototype._componentFactoryResolver;\n/** @type {?} */\nPortalHostDirective.prototype._viewContainerRef;\n}\n\nexport class PortalModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [TemplatePortalDirective, PortalHostDirective],\n  declarations: [TemplatePortalDirective, PortalHostDirective],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PortalModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPortalModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPortalModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  ApplicationRef,\n  Injector,\n} from '@angular/core';\nimport {BasePortalHost, ComponentPortal, TemplatePortal} from './portal';\n/**\n * A PortalHost for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n * \n * This is the only part of the portal core that directly touches the DOM.\n */\nexport class DomPortalHost extends BasePortalHost {\n/**\n * @param {?} _hostDomElement\n * @param {?} _componentFactoryResolver\n * @param {?} _appRef\n * @param {?} _defaultInjector\n */\nconstructor(\nprivate _hostDomElement: Element,\nprivate _componentFactoryResolver: ComponentFactoryResolver,\nprivate _appRef: ApplicationRef,\nprivate _defaultInjector: Injector) {\n    super();\n  }\n/**\n * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n * @template T\n * @param {?} portal Portal to be attached\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    let /** @type {?} */ componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let /** @type {?} */ componentRef: ComponentRef<T>;\n\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n    // for the component (in terms of Angular's component tree, not rendering).\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\n    // and then manually attach the view to the application.\n    if (portal.viewContainerRef) {\n      componentRef = portal.viewContainerRef.createComponent(\n          componentFactory,\n          portal.viewContainerRef.length,\n          portal.injector || portal.viewContainerRef.parentInjector);\n\n      this.setDisposeFn(() => componentRef.destroy());\n    } else {\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n      this._appRef.attachView(componentRef.hostView);\n      this.setDisposeFn(() => {\n        this._appRef.detachView(componentRef.hostView);\n        componentRef.destroy();\n      });\n    }\n    // At this point the component has been instantiated, so we move it to the location in the DOM\n    // where we want it to be rendered.\n    this._hostDomElement.appendChild(this._getComponentRootNode(componentRef));\n\n    return componentRef;\n  }\n/**\n * Attaches a template portal to the DOM as an embedded view.\n * @param {?} portal Portal to be attached.\n * @return {?}\n */\nattachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    let /** @type {?} */ viewContainer = portal.viewContainerRef;\n    let /** @type {?} */ viewRef = viewContainer.createEmbeddedView(portal.templateRef);\n    viewRef.detectChanges();\n\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n    // But for the DomPortalHost the view can be added everywhere in the DOM (e.g Overlay Container)\n    // To move the view to the specified host element. We just re-append the existing root nodes.\n    viewRef.rootNodes.forEach(rootNode => this._hostDomElement.appendChild(rootNode));\n\n    this.setDisposeFn((() => {\n      let /** @type {?} */ index = viewContainer.indexOf(viewRef);\n      if (index !== -1) {\n        viewContainer.remove(index);\n      }\n    }));\n\n    // TODO(jelbourn): Return locals from view.\n    return new Map<string, any>();\n  }\n/**\n * Clears out a portal from the DOM.\n * @return {?}\n */\ndispose(): void {\n    super.dispose();\n    if (this._hostDomElement.parentNode != null) {\n      this._hostDomElement.parentNode.removeChild(this._hostDomElement);\n    }\n  }\n/**\n * Gets the root HTMLElement for an instantiated component.\n * @param {?} componentRef\n * @return {?}\n */\nprivate _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\n    return /** @type {?} */(( ( /** @type {?} */((componentRef.hostView as EmbeddedViewRef<any>))).rootNodes[0] as HTMLElement));\n  }\n}\n\nfunction DomPortalHost_tsickle_Closure_declarations() {\n/** @type {?} */\nDomPortalHost.prototype._hostDomElement;\n/** @type {?} */\nDomPortalHost.prototype._componentFactoryResolver;\n/** @type {?} */\nDomPortalHost.prototype._appRef;\n/** @type {?} */\nDomPortalHost.prototype._defaultInjector;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n    TemplateRef,\n    ViewContainerRef,\n    ElementRef,\n    ComponentRef,\n    Injector\n} from '@angular/core';\nimport {\n    throwNullPortalHostError,\n    throwPortalAlreadyAttachedError,\n    throwNoPortalAttachedError,\n    throwNullPortalError,\n    throwPortalHostAlreadyDisposedError,\n    throwUnknownPortalTypeError\n} from './portal-errors';\n\n\nexport interface ComponentType<T> {\n  new (...args: any[]): T;\n}\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalHost`.\n * @abstract\n */\nexport abstract class Portal<T> {\nprivate _attachedHost: PortalHost | null;\n/**\n * Attach this portal to a host.\n * @param {?} host\n * @return {?}\n */\nattach(host: PortalHost): T {\n    if (host == null) {\n      throwNullPortalHostError();\n    }\n\n    if (host.hasAttached()) {\n      throwPortalAlreadyAttachedError();\n    }\n\n    this._attachedHost = host;\n    return /** @type {?} */(( <T> host.attach(this)));\n  }\n/**\n * Detach this portal from its host\n * @return {?}\n */\ndetach(): void {\n    let /** @type {?} */ host = this._attachedHost;\n\n    if (host == null) {\n      throwNoPortalAttachedError();\n    } else {\n      this._attachedHost = null;\n      host.detach();\n    }\n  }\n/**\n * Whether this portal is attached to a host.\n * @return {?}\n */\nget isAttached(): boolean {\n    return this._attachedHost != null;\n  }\n/**\n * Sets the PortalHost reference without performing `attach()`. This is used directly by\n * the PortalHost when it is performing an `attach()` or `detach()`.\n * @param {?} host\n * @return {?}\n */\nsetAttachedHost(host: PortalHost | null) {\n    this._attachedHost = host;\n  }\n}\n\nfunction Portal_tsickle_Closure_declarations() {\n/** @type {?} */\nPortal.prototype._attachedHost;\n}\n\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n */\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\n/**\n * The type of the component that will be instantiated for attachment.\n */\ncomponent: ComponentType<T>;\n/**\n * [Optional] Where the attached component should live in Angular's *logical* component tree.\n * This is different from where the component *renders*, which is determined by the PortalHost.\n * The origin is necessary when the host is outside of the Angular application context.\n */\nviewContainerRef?: ViewContainerRef | null;\n/**\n * [Optional] Injector used for the instantiation of the component.\n */\ninjector?: Injector | null;\n/**\n * @param {?} component\n * @param {?=} viewContainerRef\n * @param {?=} injector\n */\nconstructor(\n      component: ComponentType<T>,\n      viewContainerRef?: ViewContainerRef | null,\n      injector?: Injector | null) {\n    super();\n    this.component = component;\n    this.viewContainerRef = viewContainerRef;\n    this.injector = injector;\n  }\n}\n\nfunction ComponentPortal_tsickle_Closure_declarations() {\n/**\n * The type of the component that will be instantiated for attachment.\n * @type {?}\n */\nComponentPortal.prototype.component;\n/**\n * [Optional] Where the attached component should live in Angular's *logical* component tree.\n * This is different from where the component *renders*, which is determined by the PortalHost.\n * The origin is necessary when the host is outside of the Angular application context.\n * @type {?}\n */\nComponentPortal.prototype.viewContainerRef;\n/**\n * [Optional] Injector used for the instantiation of the component.\n * @type {?}\n */\nComponentPortal.prototype.injector;\n}\n\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n */\nexport class TemplatePortal extends Portal<Map<string, any>> {\n/**\n * The embedded template that will be used to instantiate an embedded View in the host.\n */\ntemplateRef: TemplateRef<any>;\n/**\n * Reference to the ViewContainer into which the template will be stamped out.\n */\nviewContainerRef: ViewContainerRef;\n/**\n * Additional locals for the instantiated embedded view.\n * These locals can be seen as \"exports\" for the template, such as how ngFor has\n * index / event / odd.\n * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html\n */\nlocals: Map<string, any> = new Map<string, any>();\n/**\n * @param {?} template\n * @param {?} viewContainerRef\n */\nconstructor(template: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super();\n    this.templateRef = template;\n    this.viewContainerRef = viewContainerRef;\n  }\n/**\n * @return {?}\n */\nget origin(): ElementRef {\n    return this.templateRef.elementRef;\n  }\n/**\n * @param {?} host\n * @param {?=} locals\n * @return {?}\n */\nattach(host: PortalHost, locals?: Map<string, any>): Map<string, any> {\n    this.locals = locals == null ? new Map<string, any>() : locals;\n    return super.attach(host);\n  }\n/**\n * @return {?}\n */\ndetach(): void {\n    this.locals = new Map<string, any>();\n    return super.detach();\n  }\n}\n\nfunction TemplatePortal_tsickle_Closure_declarations() {\n/**\n * The embedded template that will be used to instantiate an embedded View in the host.\n * @type {?}\n */\nTemplatePortal.prototype.templateRef;\n/**\n * Reference to the ViewContainer into which the template will be stamped out.\n * @type {?}\n */\nTemplatePortal.prototype.viewContainerRef;\n/**\n * Additional locals for the instantiated embedded view.\n * These locals can be seen as \"exports\" for the template, such as how ngFor has\n * index / event / odd.\n * See https://angular.io/docs/ts/latest/api/core/EmbeddedViewRef-class.html\n * @type {?}\n */\nTemplatePortal.prototype.locals;\n}\n\n\n\n/**\n * A `PortalHost` is an space that can contain a single `Portal`.\n */\nexport interface PortalHost {\n  attach(portal: Portal<any>): any;\n\n  detach(): any;\n\n  dispose(): void;\n\n  hasAttached(): boolean;\n}\n/**\n * Partial implementation of PortalHost that only deals with attaching either a\n * ComponentPortal or a TemplatePortal.\n * @abstract\n */\nexport abstract class BasePortalHost implements PortalHost {\n/**\n * The portal currently attached to the host.\n */\nprivate _attachedPortal: Portal<any> | null;\n/**\n * A function that will permanently dispose this host.\n */\nprivate _disposeFn: (() => void) | null;\n/**\n * Whether this host has already been permanently disposed.\n */\nprivate _isDisposed: boolean = false;\n/**\n * Whether this host has an attached portal.\n * @return {?}\n */\nhasAttached(): boolean {\n    return !!this._attachedPortal;\n  }\n/**\n * @param {?} portal\n * @return {?}\n */\nattach(portal: Portal<any>): any {\n    if (!portal) {\n      throwNullPortalError();\n    }\n\n    if (this.hasAttached()) {\n      throwPortalAlreadyAttachedError();\n    }\n\n    if (this._isDisposed) {\n      throwPortalHostAlreadyDisposedError();\n    }\n\n    if (portal instanceof ComponentPortal) {\n      this._attachedPortal = portal;\n      return this.attachComponentPortal(portal);\n    } else if (portal instanceof TemplatePortal) {\n      this._attachedPortal = portal;\n      return this.attachTemplatePortal(portal);\n    }\n\n    throwUnknownPortalTypeError();\n  }\n/**\n * @abstract\n * @template T\n * @param {?} portal\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>) {}\n/**\n * @abstract\n * @param {?} portal\n * @return {?}\n */\nattachTemplatePortal(portal: TemplatePortal) {}\n/**\n * @return {?}\n */\ndetach(): void {\n    if (this._attachedPortal) {\n      this._attachedPortal.setAttachedHost(null);\n      this._attachedPortal = null;\n    }\n\n    this._invokeDisposeFn();\n  }\n/**\n * @return {?}\n */\ndispose() {\n    if (this.hasAttached()) {\n      this.detach();\n    }\n\n    this._invokeDisposeFn();\n    this._isDisposed = true;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nsetDisposeFn(fn: () => void) {\n    this._disposeFn = fn;\n  }\n/**\n * @return {?}\n */\nprivate _invokeDisposeFn() {\n    if (this._disposeFn) {\n      this._disposeFn();\n      this._disposeFn = null;\n    }\n  }\n}\n\nfunction BasePortalHost_tsickle_Closure_declarations() {\n/**\n * The portal currently attached to the host.\n * @type {?}\n */\nBasePortalHost.prototype._attachedPortal;\n/**\n * A function that will permanently dispose this host.\n * @type {?}\n */\nBasePortalHost.prototype._disposeFn;\n/**\n * Whether this host has already been permanently disposed.\n * @type {?}\n */\nBasePortalHost.prototype._isDisposed;\n}\n\n","\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nexport function throwNullPortalError() {\n  throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nexport function throwPortalAlreadyAttachedError() {\n  throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nexport function throwPortalHostAlreadyDisposedError() {\n  throw Error('This PortalHost has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nexport function throwUnknownPortalTypeError() {\n  throw Error('Attempting to attach an unknown Portal type. BasePortalHost accepts either' +\n                  'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nexport function throwNullPortalHostError() {\n  throw Error('Attempting to attach a portal to a null PortalHost');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-privatew\n * @return {?}\n */\nexport function throwNoPortalAttachedError() {\n  throw Error('Attempting to detach a portal that is not attached to a host');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {HeaderRowPlaceholder, RowPlaceholder, CdkTable} from './table';\nimport {CdkCellOutlet, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef} from './row';\nimport {CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCell, CdkCellDef} from './cell';\n\nexport {CollectionViewer,DataSource} from './data-source';\nexport {getTableUnknownColumnError,RowPlaceholder,HeaderRowPlaceholder,CDK_TABLE_TEMPLATE,CdkTable} from './table';\nexport {CdkCellDef,CdkHeaderCellDef,CdkColumnDef,CdkHeaderCell,CdkCell} from './cell';\nexport {CDK_ROW_TEMPLATE,BaseRowDef,CdkHeaderRowDef,CdkRowDef,CdkCellOutletRowContext,CdkCellOutlet,CdkHeaderRow,CdkRow} from './row';\n\nconst /** @type {?} */ EXPORTED_DECLARATIONS = [\n  CdkTable,\n  CdkRowDef,\n  CdkCellDef,\n  CdkCellOutlet,\n  CdkHeaderCellDef,\n  CdkColumnDef,\n  CdkCell,\n  CdkRow,\n  CdkHeaderCell,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  RowPlaceholder,\n  HeaderRowPlaceholder,\n];\nexport class CdkTableModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  exports: [EXPORTED_DECLARATIONS],\n  declarations: [EXPORTED_DECLARATIONS]\n\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CdkTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\n\nexport interface CollectionViewer {\n  viewChange: Observable<{start: number, end: number}>;\n}\n/**\n * @abstract\n */\nexport abstract class DataSource<T> {\n/**\n * Connects a collection viewer (such as a data-table) to this data source.\n * @abstract\n * @param {?} collectionViewer The component that exposes a view over the data provided by this\n *     data source.\n * @return {?} Observable that emits a new value when the data changes.\n */\nconnect(collectionViewer: CollectionViewer) {}\n/**\n * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n * to perform any clean-up or tear-down operations when a view is being destroyed.\n * \n * @abstract\n * @param {?} collectionViewer The component that exposes a view over the data provided by this\n *     data source.\n * @return {?}\n */\ndisconnect(collectionViewer: CollectionViewer) {}\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Input,\n  isDevMode,\n  IterableChangeRecord,\n  IterableDiffer,\n  IterableDiffers,\n  NgIterable,\n  QueryList,\n  Renderer2,\n  TrackByFunction,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport {CollectionViewer, DataSource} from './data-source';\nimport {CdkCellOutlet, CdkCellOutletRowContext, CdkHeaderRowDef, CdkRowDef} from './row';\nimport {merge} from 'rxjs/observable/merge';\nimport {takeUntil} from 'rxjs/operator/takeUntil';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Subject} from 'rxjs/Subject';\nimport {CdkCellDef, CdkColumnDef, CdkHeaderCellDef} from './cell';\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nexport function getTableUnknownColumnError(id: string) {\n  return new Error(`cdk-table: Could not find column with id \"${id}\".`);\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nexport class RowPlaceholder {\n/**\n * @param {?} viewContainer\n */\nconstructor(public viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[rowPlaceholder]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction RowPlaceholder_tsickle_Closure_declarations() {\n/** @type {?} */\nRowPlaceholder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nRowPlaceholder.ctorParameters;\n/** @type {?} */\nRowPlaceholder.prototype.viewContainer;\n}\n\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nexport class HeaderRowPlaceholder {\n/**\n * @param {?} viewContainer\n */\nconstructor(public viewContainer: ViewContainerRef) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[headerRowPlaceholder]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction HeaderRowPlaceholder_tsickle_Closure_declarations() {\n/** @type {?} */\nHeaderRowPlaceholder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nHeaderRowPlaceholder.ctorParameters;\n/** @type {?} */\nHeaderRowPlaceholder.prototype.viewContainer;\n}\n\n/**\n * The table template that can be used by the md-table. Should not be used outside of the\n * material library.\n */\nexport const CDK_TABLE_TEMPLATE = `\n  <ng-container headerRowPlaceholder></ng-container>\n  <ng-container rowPlaceholder></ng-container>`;\n/**\n * A data table that connects with a data source to retrieve data of type T and renders\n * a header row and data rows. Updates the rows when new data is provided by the data source.\n */\nexport class CdkTable<T> implements CollectionViewer {\n/**\n * Subject that emits when the component has been destroyed.\n */\nprivate _onDestroy = new Subject<void>();\n/**\n * Flag set to true after the component has been initialized.\n */\nprivate _isViewInitialized = false;\n/**\n * Latest data provided by the data source through the connect interface.\n */\nprivate _data: NgIterable<T> = [];\n/**\n * Subscription that listens for the data provided by the data source.\n */\nprivate _renderChangeSubscription: Subscription;\n/**\n * Map of all the user's defined columns identified by name.\n * Contains the header and data-cell templates.\n */\nprivate _columnDefinitionsByName = new Map<string,  CdkColumnDef>();\n/**\n * Differ used to find the changes in the data provided by the data source.\n */\nprivate _dataDiffer: IterableDiffer<T>;\n/**\n * Tracking function that will be used to check the differences in data changes. Used similarly\n * to ngFor trackBy function. Optimize row operations by identifying a row based on its data\n * relative to the function to know if a row should be added/removed/moved.\n * Accepts a function that takes two parameters, `index` and `item`.\n * @param {?} fn\n * @return {?}\n */\nset trackBy(fn: TrackByFunction<T>) {\n    if (isDevMode() &&\n        fn != null && typeof fn !== 'function' && /** @type {?} */((\n        <any>console)) && /** @type {?} */(( <any>console.warn))) {\n        console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n    this._trackByFn = fn;\n  }\n/**\n * @return {?}\n */\nget trackBy(): TrackByFunction<T> { return this._trackByFn; }\nprivate _trackByFn: TrackByFunction<T>;\n/**\n * Stream containing the latest information on what rows are being displayed on screen.\n * Can be used by the data source to as a heuristic of what data should be provided.\n */\nviewChange =\n      new BehaviorSubject<{start: number, end: number}>({start: 0, end: Number.MAX_VALUE});\n/**\n * Provides a stream containing the latest data array to render. Influenced by the table's\n * stream of view window (what rows are currently on screen).\n * @return {?}\n */\nget dataSource(): DataSource<T> { return this._dataSource; }\n/**\n * @param {?} dataSource\n * @return {?}\n */\nset dataSource(dataSource: DataSource<T>) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\nprivate _dataSource: DataSource<T>;\n\n  // Placeholders within the table's template where the header and data rows will be inserted.\n   _rowPlaceholder: RowPlaceholder;\n   _headerRowPlaceholder: HeaderRowPlaceholder;\n/**\n * The column definitions provided by the user that contain what the header and cells should\n * render for each column.\n */\n_columnDefinitions: QueryList<CdkColumnDef>;\n/**\n * Template used as the header container.\n */\n_headerDefinition: CdkHeaderRowDef;\n/**\n * Set of templates that used as the data row containers.\n */\n_rowDefinitions: QueryList<CdkRowDef>;\n/**\n * @param {?} _differs\n * @param {?} _changeDetectorRef\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} role\n */\nconstructor(private readonly _differs: IterableDiffers,\nprivate readonly _changeDetectorRef: ChangeDetectorRef,\n              elementRef: ElementRef,\n              renderer: Renderer2,\n               role: string) {\n    if (!role) {\n      renderer.setAttribute(elementRef.nativeElement, 'role', 'grid');\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n    if (this.dataSource) {\n      this.dataSource.disconnect(this);\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    // TODO(andrewseguin): Setup a listener for scroll events\n    //   and emit the calculated view to this.viewChange\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    // TODO(andrewseguin): Throw an error if two columns share the same name\n    this._columnDefinitions.forEach(columnDef => {\n      this._columnDefinitionsByName.set(columnDef.name, columnDef);\n    });\n\n    // Re-render the rows if any of their columns change.\n    // TODO(andrewseguin): Determine how to only re-render the rows that have their columns changed.\n    const /** @type {?} */ columnChangeEvents = this._rowDefinitions.map(rowDef => rowDef.columnsChange);\n\n    takeUntil.call(merge(...columnChangeEvents), this._onDestroy).subscribe(() => {\n      // Reset the data to an empty array so that renderRowChanges will re-render all new rows.\n      this._rowPlaceholder.viewContainer.clear();\n      this._dataDiffer.diff([]);\n      this._renderRowChanges();\n    });\n\n    // Re-render the header row if the columns change\n    takeUntil.call(this._headerDefinition.columnsChange, this._onDestroy).subscribe(() => {\n      this._headerRowPlaceholder.viewContainer.clear();\n      this._renderHeaderRow();\n    });\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    // Find and construct an iterable differ that can be used to find the diff in an array.\n    this._dataDiffer = this._differs.find([]).create(this._trackByFn);\n    this._isViewInitialized = true;\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    if (this._isViewInitialized && this.dataSource && !this._renderChangeSubscription) {\n      this._renderHeaderRow();\n      if (this.dataSource && !this._renderChangeSubscription) {\n        this._observeRenderChanges();\n      }\n    }\n  }\n/**\n * Switch to the provided data source by resetting the data and unsubscribing from the current\n * render change subscription if one exists. If the data source is null, interpret this by\n * clearing the row placeholder. Otherwise start listening for new data.\n * @param {?} dataSource\n * @return {?}\n */\nprivate _switchDataSource(dataSource: DataSource<T>) {\n    this._data = [];\n\n    if (this._dataSource) {\n      this.dataSource.disconnect(this);\n    }\n    this._dataSource = dataSource;\n\n    if (this._isViewInitialized) {\n      if (this._renderChangeSubscription) {\n        this._renderChangeSubscription.unsubscribe();\n      }\n\n      if (this._dataSource) {\n        this._observeRenderChanges();\n      } else {\n        this._rowPlaceholder.viewContainer.clear();\n      }\n    }\n  }\n/**\n * Set up a subscription for the data provided by the data source.\n * @return {?}\n */\nprivate _observeRenderChanges() {\n    this._renderChangeSubscription = takeUntil.call(this.dataSource.connect(this), this._onDestroy)\n      .subscribe(data => {\n        this._data = data;\n        this._renderRowChanges();\n      });\n  }\n/**\n * Create the embedded view for the header template and place it in the header row view container.\n * @return {?}\n */\nprivate _renderHeaderRow() {\n    const /** @type {?} */ cells = this._getHeaderCellTemplatesForRow(this._headerDefinition);\n    if (!cells.length) { return; }\n\n    // TODO(andrewseguin): add some code to enforce that exactly\n    //   one CdkCellOutlet was instantiated as a result\n    //   of `createEmbeddedView`.\n    this._headerRowPlaceholder.viewContainer\n        .createEmbeddedView(this._headerDefinition.template, {cells});\n\n    cells.forEach(cell => {\n      CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cell.template, {});\n    });\n\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Check for changes made in the data and render each change (row added/removed/moved).\n * @return {?}\n */\nprivate _renderRowChanges() {\n    const /** @type {?} */ changes = this._dataDiffer.diff(this._data);\n    if (!changes) { return; }\n\n    const /** @type {?} */ viewContainer = this._rowPlaceholder.viewContainer;\n    changes.forEachOperation(\n        (item: IterableChangeRecord<any>, adjustedPreviousIndex: number, currentIndex: number) => {\n          if (item.previousIndex == null) {\n            this._insertRow(this._data[currentIndex], currentIndex);\n          } else if (currentIndex == null) {\n            viewContainer.remove(adjustedPreviousIndex);\n          } else {\n            const /** @type {?} */ view = viewContainer.get(adjustedPreviousIndex);\n            viewContainer.move( /** @type {?} */((view)), currentIndex);\n          }\n        });\n\n    this._updateRowContext();\n  }\n/**\n * Create the embedded view for the data row template and place it in the correct index location\n * within the data row view container.\n * @param {?} rowData\n * @param {?} index\n * @return {?}\n */\nprivate _insertRow(rowData: T, index: number) {\n    // TODO(andrewseguin): Add when predicates to the row definitions\n    //   to find the right template to used based on\n    //   the data rather than choosing the first row definition.\n    const /** @type {?} */ row = this._rowDefinitions.first;\n\n    // Row context that will be provided to both the created embedded row view and its cells.\n    const /** @type {?} */ context: CdkCellOutletRowContext<T> = {$implicit: rowData};\n\n    // TODO(andrewseguin): add some code to enforce that exactly one\n    //   CdkCellOutlet was instantiated as a result  of `createEmbeddedView`.\n    this._rowPlaceholder.viewContainer.createEmbeddedView(row.template, context, index);\n\n    // Insert empty cells if there is no data to improve rendering time.\n    const /** @type {?} */ cells = rowData ? this._getCellTemplatesForRow(row) : [];\n\n    cells.forEach(cell => {\n      CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cell.template, context);\n    });\n\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Updates the context for each row to reflect any data changes that may have caused\n * rows to be added, removed, or moved. The view container contains the same context\n * that was provided to each of its cells.\n * @return {?}\n */\nprivate _updateRowContext() {\n    const /** @type {?} */ viewContainer = this._rowPlaceholder.viewContainer;\n    for (let /** @type {?} */ index = 0, /** @type {?} */ count = viewContainer.length; index < count; index++) {\n      const /** @type {?} */ viewRef = /** @type {?} */(( viewContainer.get(index) as EmbeddedViewRef<CdkCellOutletRowContext<T>>));\n      viewRef.context.index = index;\n      viewRef.context.count = count;\n      viewRef.context.first = index === 0;\n      viewRef.context.last = index === count - 1;\n      viewRef.context.even = index % 2 === 0;\n      viewRef.context.odd = index % 2 !== 0;\n    }\n  }\n/**\n * Returns the cell template definitions to insert into the header\n * as defined by its list of columns to display.\n * @param {?} headerDef\n * @return {?}\n */\nprivate _getHeaderCellTemplatesForRow(headerDef: CdkHeaderRowDef): CdkHeaderCellDef[] {\n    if (!headerDef.columns) { return []; }\n    return headerDef.columns.map(columnId => {\n      const /** @type {?} */ column = this._columnDefinitionsByName.get(columnId);\n\n      if (!column) {\n        throw getTableUnknownColumnError(columnId);\n      }\n\n      return column.headerCell;\n    });\n  }\n/**\n * Returns the cell template definitions to insert in the provided row\n * as defined by its list of columns to display.\n * @param {?} rowDef\n * @return {?}\n */\nprivate _getCellTemplatesForRow(rowDef: CdkRowDef): CdkCellDef[] {\n    if (!rowDef.columns) { return []; }\n    return rowDef.columns.map(columnId => {\n      const /** @type {?} */ column = this._columnDefinitionsByName.get(columnId);\n\n      if (!column) {\n        throw getTableUnknownColumnError(columnId);\n      }\n\n      return column.cell;\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cdk-table',\n  template: CDK_TABLE_TEMPLATE,\n  host: {\n    'class': 'cdk-table',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IterableDiffers, },\n{type: ChangeDetectorRef, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: undefined, decorators: [{ type: Attribute, args: ['role', ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trackBy': [{ type: Input },],\n'dataSource': [{ type: Input },],\n'_rowPlaceholder': [{ type: ViewChild, args: [RowPlaceholder, ] },],\n'_headerRowPlaceholder': [{ type: ViewChild, args: [HeaderRowPlaceholder, ] },],\n'_columnDefinitions': [{ type: ContentChildren, args: [CdkColumnDef, ] },],\n'_headerDefinition': [{ type: ContentChild, args: [CdkHeaderRowDef, ] },],\n'_rowDefinitions': [{ type: ContentChildren, args: [CdkRowDef, ] },],\n};\n}\n\nfunction CdkTable_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkTable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkTable.ctorParameters;\n/** @type {?} */\nCdkTable.propDecorators;\n/**\n * Subject that emits when the component has been destroyed.\n * @type {?}\n */\nCdkTable.prototype._onDestroy;\n/**\n * Flag set to true after the component has been initialized.\n * @type {?}\n */\nCdkTable.prototype._isViewInitialized;\n/**\n * Latest data provided by the data source through the connect interface.\n * @type {?}\n */\nCdkTable.prototype._data;\n/**\n * Subscription that listens for the data provided by the data source.\n * @type {?}\n */\nCdkTable.prototype._renderChangeSubscription;\n/**\n * Map of all the user's defined columns identified by name.\n * Contains the header and data-cell templates.\n * @type {?}\n */\nCdkTable.prototype._columnDefinitionsByName;\n/**\n * Differ used to find the changes in the data provided by the data source.\n * @type {?}\n */\nCdkTable.prototype._dataDiffer;\n/** @type {?} */\nCdkTable.prototype._trackByFn;\n/**\n * Stream containing the latest information on what rows are being displayed on screen.\n * Can be used by the data source to as a heuristic of what data should be provided.\n * @type {?}\n */\nCdkTable.prototype.viewChange;\n/** @type {?} */\nCdkTable.prototype._dataSource;\n/** @type {?} */\nCdkTable.prototype._rowPlaceholder;\n/** @type {?} */\nCdkTable.prototype._headerRowPlaceholder;\n/**\n * The column definitions provided by the user that contain what the header and cells should\n * render for each column.\n * @type {?}\n */\nCdkTable.prototype._columnDefinitions;\n/**\n * Template used as the header container.\n * @type {?}\n */\nCdkTable.prototype._headerDefinition;\n/**\n * Set of templates that used as the data row containers.\n * @type {?}\n */\nCdkTable.prototype._rowDefinitions;\n/** @type {?} */\nCdkTable.prototype._differs;\n/** @type {?} */\nCdkTable.prototype._changeDetectorRef;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ContentChild, Directive, ElementRef, Input, Renderer2, TemplateRef} from '@angular/core';\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nexport class CdkCellDef {\n/**\n * @param {?} template\n */\nconstructor(public template: TemplateRef<any>) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[cdkCellDef]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction CdkCellDef_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkCellDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkCellDef.ctorParameters;\n/** @type {?} */\nCdkCellDef.prototype.template;\n}\n\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nexport class CdkHeaderCellDef {\n/**\n * @param {?} template\n */\nconstructor(public template: TemplateRef<any>) { }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[cdkHeaderCellDef]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n];\n}\n\nfunction CdkHeaderCellDef_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkHeaderCellDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkHeaderCellDef.ctorParameters;\n/** @type {?} */\nCdkHeaderCellDef.prototype.template;\n}\n\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nexport class CdkColumnDef {\n/**\n * Unique name for this column.\n */\nname: string;\n/**\n * \\@docs-private\n */\ncell: CdkCellDef;\n/**\n * \\@docs-private\n */\nheaderCell: CdkHeaderCellDef;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[cdkColumnDef]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['cdkColumnDef', ] },],\n'cell': [{ type: ContentChild, args: [CdkCellDef, ] },],\n'headerCell': [{ type: ContentChild, args: [CdkHeaderCellDef, ] },],\n};\n}\n\nfunction CdkColumnDef_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkColumnDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkColumnDef.ctorParameters;\n/** @type {?} */\nCdkColumnDef.propDecorators;\n/**\n * Unique name for this column.\n * @type {?}\n */\nCdkColumnDef.prototype.name;\n/**\n * \\@docs-private\n * @type {?}\n */\nCdkColumnDef.prototype.cell;\n/**\n * \\@docs-private\n * @type {?}\n */\nCdkColumnDef.prototype.headerCell;\n}\n\n/**\n * Header cell template container that adds the right classes and role.\n */\nexport class CdkHeaderCell {\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(private columnDef: CdkColumnDef,\nprivate elementRef: ElementRef,\nprivate renderer: Renderer2) {\n    this.renderer.addClass(elementRef.nativeElement, `cdk-column-${columnDef.name}`);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'cdk-header-cell',\n  host: {\n    'class': 'cdk-header-cell',\n    'role': 'columnheader',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\n}\n\nfunction CdkHeaderCell_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkHeaderCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkHeaderCell.ctorParameters;\n/** @type {?} */\nCdkHeaderCell.prototype.columnDef;\n/** @type {?} */\nCdkHeaderCell.prototype.elementRef;\n/** @type {?} */\nCdkHeaderCell.prototype.renderer;\n}\n\n/**\n * Cell template container that adds the right classes and role.\n */\nexport class CdkCell {\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(private columnDef: CdkColumnDef,\nprivate elementRef: ElementRef,\nprivate renderer: Renderer2) {\n    this.renderer.addClass(elementRef.nativeElement, `cdk-column-${columnDef.name}`);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'cdk-cell',\n  host: {\n    'class': 'cdk-cell',\n    'role': 'gridcell',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\n}\n\nfunction CdkCell_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkCell.ctorParameters;\n/** @type {?} */\nCdkCell.prototype.columnDef;\n/** @type {?} */\nCdkCell.prototype.elementRef;\n/** @type {?} */\nCdkCell.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  IterableDiffer,\n  IterableDiffers,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport {CdkCellDef} from './cell';\nimport {Subject} from 'rxjs/Subject';\n/**\n * The row template that can be used by the md-table. Should not be used outside of the\n * material library.\n */\nexport const CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nexport abstract class BaseRowDef {\n/**\n * The columns to be displayed on this row.\n */\ncolumns: string[];\n/**\n * Event stream that emits when changes are made to the columns.\n */\ncolumnsChange: Subject<void> = new Subject<void>();\n/**\n * Differ used to check if any changes were made to the columns.\n */\nprotected _columnsDiffer: IterableDiffer<any>;\nprivate viewInitialized = false;\n/**\n * @param {?} template\n * @param {?} _differs\n */\nconstructor(public template: TemplateRef<any>,\n              protected _differs: IterableDiffers) { }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this.viewInitialized = true;\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges): void {\n    // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n    // of the columns property.\n    if (!this._columnsDiffer && changes['columns'].currentValue) {\n      this._columnsDiffer = this._differs.find(changes['columns'].currentValue).create();\n    }\n  }\n/**\n * @return {?}\n */\nngDoCheck(): void {\n    if (!this.viewInitialized || !this._columnsDiffer || !this.columns) { return; }\n\n    // Notify the table if there are any changes to the columns.\n    const /** @type {?} */ changes = this._columnsDiffer.diff(this.columns);\n    if (changes) { this.columnsChange.next(); }\n  }\n}\n\nfunction BaseRowDef_tsickle_Closure_declarations() {\n/**\n * The columns to be displayed on this row.\n * @type {?}\n */\nBaseRowDef.prototype.columns;\n/**\n * Event stream that emits when changes are made to the columns.\n * @type {?}\n */\nBaseRowDef.prototype.columnsChange;\n/**\n * Differ used to check if any changes were made to the columns.\n * @type {?}\n */\nBaseRowDef.prototype._columnsDiffer;\n/** @type {?} */\nBaseRowDef.prototype.viewInitialized;\n/** @type {?} */\nBaseRowDef.prototype.template;\n/** @type {?} */\nBaseRowDef.prototype._differs;\n}\n\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nexport class CdkHeaderRowDef extends BaseRowDef {\n/**\n * @param {?} template\n * @param {?} _differs\n */\nconstructor(template: TemplateRef<any>, _differs: IterableDiffers) {\n    super(template, _differs);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkHeaderRowDef]',\n  inputs: ['columns: cdkHeaderRowDef'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: IterableDiffers, },\n];\n}\n\nfunction CdkHeaderRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkHeaderRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkHeaderRowDef.ctorParameters;\n}\n\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display.\n */\nexport class CdkRowDef extends BaseRowDef {\n/**\n * @param {?} template\n * @param {?} _differs\n */\nconstructor(template: TemplateRef<any>, _differs: IterableDiffers) {\n    super(template, _differs);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkRowDef]',\n  inputs: ['columns: cdkRowDefColumns'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: IterableDiffers, },\n];\n}\n\nfunction CdkRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkRowDef.ctorParameters;\n}\n\n\n/** Context provided to the row cells */\nexport interface CdkCellOutletRowContext<T> {\n  /** Data for the row that this cell is located within. */\n  $implicit: T;\n\n  /** Index location of the row that this cell is located within. */\n  index?: number;\n\n  /** Length of the number of total rows. */\n  count?: number;\n\n  /** True if this cell is contained in the first row. */\n  first?: boolean;\n\n  /** True if this cell is contained in the last row. */\n  last?: boolean;\n\n  /** True if this cell is contained in a row with an even-numbered index. */\n  even?: boolean;\n\n  /** True if this cell is contained in a row with an odd-numbered index. */\n  odd?: boolean;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nexport class CdkCellOutlet {\n/**\n * The ordered list of cells to render within this outlet's view container\n */\ncells: CdkCellDef[];\n/**\n * The data context to be provided to each cell\n */\ncontext: any;\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nstatic mostRecentCellOutlet: CdkCellOutlet;\n/**\n * @param {?} _viewContainer\n */\nconstructor(public _viewContainer: ViewContainerRef) {\n    CdkCellOutlet.mostRecentCellOutlet = this;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[cdkCellOutlet]'}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\n}\n\nfunction CdkCellOutlet_tsickle_Closure_declarations() {\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n * @type {?}\n */\nCdkCellOutlet.mostRecentCellOutlet;\n/** @type {?} */\nCdkCellOutlet.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkCellOutlet.ctorParameters;\n/**\n * The ordered list of cells to render within this outlet's view container\n * @type {?}\n */\nCdkCellOutlet.prototype.cells;\n/**\n * The data context to be provided to each cell\n * @type {?}\n */\nCdkCellOutlet.prototype.context;\n/** @type {?} */\nCdkCellOutlet.prototype._viewContainer;\n}\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nexport class CdkHeaderRow { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cdk-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'cdk-header-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CdkHeaderRow_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkHeaderRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkHeaderRow.ctorParameters;\n}\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nexport class CdkRow { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'cdk-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'cdk-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CdkRow_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkRow.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Coerces a data-bound value (typically a string) to a number.\n * @param {?} value\n * @param {?=} fallbackValue\n * @return {?}\n */\nexport function coerceNumberProperty(value: any, fallbackValue = 0) {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return isNaN(parseFloat( /** @type {?} */((value as any)))) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {Dir} from './dir';\nimport {DIR_DOCUMENT, Directionality, DIRECTIONALITY_PROVIDER} from './directionality';\n\nexport {\n  Directionality,\n  DIRECTIONALITY_PROVIDER_FACTORY,\n  DIRECTIONALITY_PROVIDER,\n  DIR_DOCUMENT,\n  Direction,\n} from './directionality';\nexport {Dir} from './dir';\nexport class BidiModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [Dir],\n  declarations: [Dir],\n  providers: [\n    {provide: DIR_DOCUMENT, useExisting: DOCUMENT},\n    Directionality,\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction BidiModule_tsickle_Closure_declarations() {\n/** @type {?} */\nBidiModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBidiModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  HostBinding,\n  Output,\n  Input,\n  EventEmitter\n} from '@angular/core';\n\nimport {Direction, Directionality} from './directionality';\n/**\n * Directive to listen for changes of direction of part of the DOM.\n * \n * Would provide itself in case a component looks for the Directionality service\n */\nexport class Dir implements Directionality {\n/**\n * Layout direction of the element.\n */\n_dir: Direction = 'ltr';\n/**\n * Whether the `value` has been set to its initial value.\n */\nprivate _isInitialized: boolean = false;\n/**\n * Event emitted when the direction changes.\n */\nchange = new EventEmitter<void>();\n/**\n * \\@docs-private\n * @return {?}\n */\nget dir(): Direction {\n    return this._dir;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset dir(v: Direction) {\n    let /** @type {?} */ old = this._dir;\n    this._dir = v;\n    if (old !== this._dir && this._isInitialized) {\n      this.change.emit();\n    }\n  }\n/**\n * Current layout direction of the element.\n * @return {?}\n */\nget value(): Direction { return this.dir; }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: Direction) { this.dir = v; }\n/**\n * Initialize once default value has been set.\n * @return {?}\n */\nngAfterContentInit() {\n    this._isInitialized = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dir]',\n  // TODO(hansl): maybe `$implicit` isn't the best option here, but for now that's the best we got.\n  exportAs: '$implicit',\n  providers: [\n    {provide: Directionality, useExisting: Dir}\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'change': [{ type: Output, args: ['dirChange', ] },],\n'dir': [{ type: HostBinding, args: ['attr.dir', ] },{ type: Input, args: ['dir', ] },],\n};\n}\n\nfunction Dir_tsickle_Closure_declarations() {\n/** @type {?} */\nDir.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDir.ctorParameters;\n/** @type {?} */\nDir.propDecorators;\n/**\n * Layout direction of the element.\n * @type {?}\n */\nDir.prototype._dir;\n/**\n * Whether the `value` has been set to its initial value.\n * @type {?}\n */\nDir.prototype._isInitialized;\n/**\n * Event emitted when the direction changes.\n * @type {?}\n */\nDir.prototype.change;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  EventEmitter,\n  Injectable,\n  Optional,\n  SkipSelf,\n  Inject,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\n\n\nexport type Direction = 'ltr' | 'rtl';\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n * \n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n * \n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n */\nexport const DIR_DOCUMENT = new InjectionToken<Document>('md-dir-doc');\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nexport class Directionality {\n  value: Direction = 'ltr';\n  change = new EventEmitter<void>();\n/**\n * @param {?=} _document\n */\nconstructor(  _document?: any) {\n    if (_document) {\n      // TODO: handle 'auto' value -\n      // We still need to account for dir=\"auto\".\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n      const bodyDir = _document.body ? _document.body.dir : null;\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n      this.value = (bodyDir || htmlDir || 'ltr') as Direction;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT, ] }, ]},\n];\n}\n\nfunction Directionality_tsickle_Closure_declarations() {\n/** @type {?} */\nDirectionality.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDirectionality.ctorParameters;\n/** @type {?} */\nDirectionality.prototype.value;\n/** @type {?} */\nDirectionality.prototype.change;\n}\n\n/**\n * @param {?} parentDirectionality\n * @param {?} _document\n * @return {?}\n */\nexport function DIRECTIONALITY_PROVIDER_FACTORY(parentDirectionality, _document) {\n  return parentDirectionality || new Directionality(_document);\n}\n\nexport const /** @type {?} */ DIRECTIONALITY_PROVIDER = {\n  // If there is already a Directionality available, use that. Otherwise, provide a new one.\n  provide: Directionality,\n  deps: [[new Optional(), new SkipSelf(), Directionality], [new Optional(), DOCUMENT]],\n  useFactory: DIRECTIONALITY_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {FocusTrapDirective, FocusTrapDeprecatedDirective, FocusTrapFactory} from './focus-trap';\nimport {LIVE_ANNOUNCER_PROVIDER} from './live-announcer';\nimport {InteractivityChecker} from './interactivity-checker';\nimport {CommonModule} from '@angular/common';\nimport {PlatformModule} from '../platform/index';\nexport class A11yModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, PlatformModule],\n  declarations: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n  exports: [FocusTrapDirective, FocusTrapDeprecatedDirective],\n  providers: [InteractivityChecker, FocusTrapFactory, LIVE_ANNOUNCER_PROVIDER]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction A11yModule_tsickle_Closure_declarations() {\n/** @type {?} */\nA11yModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nA11yModule.ctorParameters;\n}\n\n\nexport {LIVE_ANNOUNCER_ELEMENT_TOKEN,AriaLivePoliteness,LiveAnnouncer,LIVE_ANNOUNCER_PROVIDER_FACTORY,LIVE_ANNOUNCER_PROVIDER} from './live-announcer';\nexport {isFakeMousedownFromScreenReader} from './fake-mousedown';\nexport {FocusTrap,FocusTrapFactory,FocusTrapDeprecatedDirective,FocusTrapDirective} from './focus-trap';\nexport {InteractivityChecker} from './interactivity-checker';\nexport {CanDisable,ListKeyManager} from './list-key-manager';\nexport {Highlightable,ActiveDescendantKeyManager} from './activedescendant-key-manager';\nexport {Focusable,FocusKeyManager} from './focus-key-manager';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {QueryList} from '@angular/core';\nimport {ListKeyManager, CanDisable} from './list-key-manager';\n\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself and whether or not it is currently disabled.\n */\nexport interface Focusable extends CanDisable {\n  focus(): void;\n}\nexport class FocusKeyManager extends ListKeyManager<Focusable> {\n/**\n * @param {?} items\n */\nconstructor(items: QueryList<Focusable>) {\n    super(items);\n  }\n/**\n * This method sets the active item to the item at the specified index.\n * It also adds focuses the newly active item.\n * @param {?} index\n * @return {?}\n */\nsetActiveItem(index: number): void {\n    super.setActiveItem(index);\n\n    if (this.activeItem) {\n      this.activeItem.focus();\n    }\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {QueryList} from '@angular/core';\nimport {ListKeyManager, CanDisable} from './list-key-manager';\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\nexport interface Highlightable extends CanDisable {\n  setActiveStyles(): void;\n  setInactiveStyles(): void;\n}\nexport class ActiveDescendantKeyManager extends ListKeyManager<Highlightable> {\n/**\n * This method sets the active item to the item at the specified index.\n * It also adds active styles to the newly active item and removes active\n * styles from the previously active item.\n * @param {?} index\n * @return {?}\n */\nsetActiveItem(index: number): void {\n    Promise.resolve().then(() => {\n      if (this.activeItem) {\n        this.activeItem.setInactiveStyles();\n      }\n      super.setActiveItem(index);\n      if (this.activeItem) {\n        this.activeItem.setActiveStyles();\n      }\n    });\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {QueryList} from '@angular/core';\nimport {UP_ARROW, DOWN_ARROW, TAB} from '../keyboard/keycodes';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\n\n/**\n * This interface is for items that can be disabled. The type passed into\n * ListKeyManager must extend this interface.\n */\nexport interface CanDisable {\n  disabled?: boolean;\n}\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nexport class ListKeyManager<T extends CanDisable> {\nprivate _activeItemIndex: number = -1;\nprivate _activeItem: T;\nprivate _tabOut = new Subject<void>();\nprivate _wrap: boolean = false;\n/**\n * @param {?} _items\n */\nconstructor(private _items: QueryList<T>) { }\n/**\n * Turns on wrapping mode, which ensures that the active item will wrap to\n * the other end of list when there are no more items in the given direction.\n * \n * @return {?} The ListKeyManager that the method was called on.\n */\nwithWrap(): this {\n    this._wrap = true;\n    return this;\n  }\n/**\n * Sets the active item to the item at the index specified.\n * \n * @param {?} index The index of the item to be set as active.\n * @return {?}\n */\nsetActiveItem(index: number): void {\n    this._activeItemIndex = index;\n    this._activeItem = this._items.toArray()[index];\n  }\n/**\n * Sets the active item depending on the key event passed in.\n * @param {?} event Keyboard event to be used for determining which element should be active.\n * @return {?}\n */\nonKeydown(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case DOWN_ARROW:\n        this.setNextItemActive();\n        break;\n      case UP_ARROW:\n        this.setPreviousItemActive();\n        break;\n      case TAB:\n        // Note that we shouldn't prevent the default action on tab.\n        this._tabOut.next();\n        return;\n      default:\n        return;\n    }\n\n    event.preventDefault();\n  }\n/**\n * Index of the currently active item.\n * @return {?}\n */\nget activeItemIndex(): number | null {\n    return this._activeItemIndex;\n  }\n/**\n * The active item.\n * @return {?}\n */\nget activeItem(): T | null {\n    return this._activeItem;\n  }\n/**\n * Sets the active item to the first enabled item in the list.\n * @return {?}\n */\nsetFirstItemActive(): void {\n    this._setActiveItemByIndex(0, 1);\n  }\n/**\n * Sets the active item to the last enabled item in the list.\n * @return {?}\n */\nsetLastItemActive(): void {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n/**\n * Sets the active item to the next enabled item in the list.\n * @return {?}\n */\nsetNextItemActive(): void {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n/**\n * Sets the active item to a previous enabled item in the list.\n * @return {?}\n */\nsetPreviousItemActive(): void {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n                                            : this._setActiveItemByDelta(-1);\n  }\n/**\n * Allows setting of the activeItemIndex without any other effects.\n * @param {?} index The new activeItemIndex.\n * @return {?}\n */\nupdateActiveItemIndex(index: number) {\n    this._activeItemIndex = index;\n  }\n/**\n * Observable that emits any time the TAB key is pressed, so components can react\n * when focus is shifted off of the list.\n * @return {?}\n */\nget tabOut(): Observable<void> {\n    return this._tabOut.asObservable();\n  }\n/**\n * This method sets the active item, given a list of items and the delta between the\n * currently active item and the new active item. It will calculate differently\n * depending on whether wrap mode is turned on.\n * @param {?} delta\n * @param {?=} items\n * @return {?}\n */\nprivate _setActiveItemByDelta(delta: number, items = this._items.toArray()): void {\n    this._wrap ? this._setActiveInWrapMode(delta, items)\n               : this._setActiveInDefaultMode(delta, items);\n  }\n/**\n * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n * down the list until it finds an item that is not disabled, and it will wrap if it\n * encounters either end of the list.\n * @param {?} delta\n * @param {?} items\n * @return {?}\n */\nprivate _setActiveInWrapMode(delta: number, items: T[]): void {\n    // when active item would leave menu, wrap to beginning or end\n    this._activeItemIndex =\n      (this._activeItemIndex + delta + items.length) % items.length;\n\n    // skip all disabled menu items recursively until an enabled one is reached\n    if (items[this._activeItemIndex].disabled) {\n      this._setActiveInWrapMode(delta, items);\n    } else {\n      this.setActiveItem(this._activeItemIndex);\n    }\n  }\n/**\n * Sets the active item properly given the default mode. In other words, it will\n * continue to move down the list until it finds an item that is not disabled. If\n * it encounters either end of the list, it will stop and not wrap.\n * @param {?} delta\n * @param {?} items\n * @return {?}\n */\nprivate _setActiveInDefaultMode(delta: number, items: T[]): void {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta, items);\n  }\n/**\n * Sets the active item to the first enabled item starting at the index specified. If the\n * item is disabled, it will move in the fallbackDelta direction until it either\n * finds an enabled item or encounters the end of the list.\n * @param {?} index\n * @param {?} fallbackDelta\n * @param {?=} items\n * @return {?}\n */\nprivate _setActiveItemByIndex(index: number, fallbackDelta: number,\n                                  items = this._items.toArray()): void {\n    if (!items[index]) { return; }\n    while (items[index].disabled) {\n      index += fallbackDelta;\n      if (!items[index]) { return; }\n    }\n    this.setActiveItem(index);\n  }\n\n}\n\nfunction ListKeyManager_tsickle_Closure_declarations() {\n/** @type {?} */\nListKeyManager.prototype._activeItemIndex;\n/** @type {?} */\nListKeyManager.prototype._activeItem;\n/** @type {?} */\nListKeyManager.prototype._tabOut;\n/** @type {?} */\nListKeyManager.prototype._wrap;\n/** @type {?} */\nListKeyManager.prototype._items;\n}\n\n","\n/**\n * @license \n * Copyright Google Inc. All Rights Reserved.\n * \n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const UP_ARROW = 38;\nexport const /** @type {?} */ DOWN_ARROW = 40;\nexport const /** @type {?} */ RIGHT_ARROW = 39;\nexport const /** @type {?} */ LEFT_ARROW = 37;\nexport const /** @type {?} */ PAGE_UP = 33;\nexport const /** @type {?} */ PAGE_DOWN = 34;\nexport const /** @type {?} */ HOME = 36;\nexport const /** @type {?} */ END = 35;\nexport const /** @type {?} */ ENTER = 13;\nexport const /** @type {?} */ SPACE = 32;\nexport const /** @type {?} */ TAB = 9;\nexport const /** @type {?} */ ESCAPE = 27;\nexport const /** @type {?} */ BACKSPACE = 8;\nexport const /** @type {?} */ DELETE = 46;\n","\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nexport function isFakeMousedownFromScreenReader(event: MouseEvent): boolean {\n  return event.buttons === 0;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {Platform} from './platform';\nexport class PlatformModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [Platform]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction PlatformModule_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatformModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatformModule.ctorParameters;\n}\n\n\n\nexport {Platform} from './platform';\nexport {getSupportedInputTypes} from './features';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Cached result Set of input types support by the current browser.\n */\nlet supportedInputTypes: Set<string>;\n/**\n * Types of <input> that *might* be supported.\n */\nconst candidateInputTypes = [\n  // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n  // first changing it to something else:\n  // The specified value \"\" does not conform to the required format.\n  // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n  'color',\n  'button',\n  'checkbox',\n  'date',\n  'datetime-local',\n  'email',\n  'file',\n  'hidden',\n  'image',\n  'month',\n  'number',\n  'password',\n  'radio',\n  'range',\n  'reset',\n  'search',\n  'submit',\n  'tel',\n  'text',\n  'time',\n  'url',\n  'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nexport function getSupportedInputTypes(): Set<string> {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n\n  let /** @type {?} */ featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n\n  return supportedInputTypes;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Injectable,\n  InjectionToken,\n  Optional,\n  Inject,\n  SkipSelf,\n} from '@angular/core';\nimport {Platform} from '../platform/platform';\n\n\nexport const /** @type {?} */ LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken<HTMLElement>('liveAnnouncerElement');\n\n/** Possible politeness levels. */\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\nexport class LiveAnnouncer {\nprivate _liveElement: Element;\n/**\n * @param {?} elementToken\n * @param {?} platform\n */\nconstructor(\n        elementToken: any,\n      platform: Platform) {\n    // Only do anything if we're on the browser platform.\n    if (platform.isBrowser) {\n      // We inject the live element as `any` because the constructor signature cannot reference\n      // browser globals (HTMLElement) on non-browser environments, since having a class decorator\n      // causes TypeScript to preserve the constructor signature types.\n      this._liveElement = elementToken || this._createLiveElement();\n    }\n  }\n/**\n * Announces a message to screenreaders.\n * @param {?} message Message to be announced to the screenreader\n * @param {?=} politeness The politeness of the announcer element\n * @return {?}\n */\nannounce(message: string, politeness: AriaLivePoliteness = 'polite'): void {\n    this._liveElement.textContent = '';\n\n    // TODO: ensure changing the politeness works on all environments we support.\n    this._liveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    setTimeout(() => this._liveElement.textContent = message, 100);\n  }\n/**\n * Removes the aria-live element from the DOM.\n * @return {?}\n */\n_removeLiveElement() {\n    if (this._liveElement && this._liveElement.parentNode) {\n      this._liveElement.parentNode.removeChild(this._liveElement);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _createLiveElement(): Element {\n    let /** @type {?} */ liveEl = document.createElement('div');\n\n    liveEl.classList.add('cdk-visually-hidden');\n    liveEl.setAttribute('aria-atomic', 'true');\n    liveEl.setAttribute('aria-live', 'polite');\n\n    document.body.appendChild(liveEl);\n\n    return liveEl;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN, ] }, ]},\n{type: Platform, },\n];\n}\n\nfunction LiveAnnouncer_tsickle_Closure_declarations() {\n/** @type {?} */\nLiveAnnouncer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLiveAnnouncer.ctorParameters;\n/** @type {?} */\nLiveAnnouncer.prototype._liveElement;\n}\n\n/**\n * @param {?} parentDispatcher\n * @param {?} liveElement\n * @param {?} platform\n * @return {?}\n */\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(\n    parentDispatcher: LiveAnnouncer, liveElement: any, platform: Platform) {\n  return parentDispatcher || new LiveAnnouncer(liveElement, platform);\n}\n\nexport const /** @type {?} */ LIVE_ANNOUNCER_PROVIDER = {\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\n  provide: LiveAnnouncer,\n  deps: [\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\n    Platform,\n  ],\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  NgZone,\n  OnDestroy,\n  AfterContentInit,\n  Injectable,\n} from '@angular/core';\nimport {coerceBooleanProperty} from '../coercion/boolean-property';\nimport {InteractivityChecker} from './interactivity-checker';\nimport {Platform} from '../platform/platform';\nimport {first} from '../rxjs/index';\n/**\n * Class that allows for trapping focus within a DOM element.\n * \n * NOTE: This class currently uses a very simple (naive) approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like tabIndex > 0, flex `order`, and shadow roots can cause to two to misalign.\n * This will be replaced with a more intelligent solution before the library is considered stable.\n */\nexport class FocusTrap {\nprivate _startAnchor: HTMLElement | null;\nprivate _endAnchor: HTMLElement | null;\n/**\n * Whether the focus trap is active.\n * @return {?}\n */\nget enabled(): boolean { return this._enabled; }\n/**\n * @param {?} val\n * @return {?}\n */\nset enabled(val: boolean) {\n    this._enabled = val;\n\n    if (this._startAnchor && this._endAnchor) {\n      this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\n    }\n  }\nprivate _enabled: boolean = true;\n/**\n * @param {?} _element\n * @param {?} _platform\n * @param {?} _checker\n * @param {?} _ngZone\n * @param {?=} deferAnchors\n */\nconstructor(\nprivate _element: HTMLElement,\nprivate _platform: Platform,\nprivate _checker: InteractivityChecker,\nprivate _ngZone: NgZone,\n    deferAnchors = false) {\n\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n/**\n * Destroys the focus trap by cleaning up the anchors.\n * @return {?}\n */\ndestroy() {\n    if (this._startAnchor && this._startAnchor.parentNode) {\n      this._startAnchor.parentNode.removeChild(this._startAnchor);\n    }\n\n    if (this._endAnchor && this._endAnchor.parentNode) {\n      this._endAnchor.parentNode.removeChild(this._endAnchor);\n    }\n\n    this._startAnchor = this._endAnchor = null;\n  }\n/**\n * Inserts the anchors into the DOM. This is usually done automatically\n * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n * @return {?}\n */\nattachAnchors(): void {\n    // If we're not on the browser, there can be no focus to trap.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n\n    if (!this._startAnchor) {\n      this._startAnchor = this._createAnchor();\n    }\n\n    if (!this._endAnchor) {\n      this._endAnchor = this._createAnchor();\n    }\n\n    this._ngZone.runOutsideAngular(() => { /** @type {?} */((\n      this._startAnchor)).addEventListener('focus', () => this.focusLastTabbableElement()); /** @type {?} */((\n      this._endAnchor)).addEventListener('focus', () => this.focusFirstTabbableElement());\n\n      if (this._element.parentNode) {\n        this._element.parentNode.insertBefore( /** @type {?} */((this._startAnchor)), this._element);\n        this._element.parentNode.insertBefore( /** @type {?} */((this._endAnchor)), this._element.nextSibling);\n      }\n    });\n  }\n/**\n * Waits for the zone to stabilize, then either focuses the first element that the\n * user specified, or the first tabbable element..\n * @return {?}\n */\nfocusInitialElementWhenReady() {\n    this._executeOnStable(() => this.focusInitialElement());\n  }\n/**\n * Waits for the zone to stabilize, then focuses\n * the first tabbable element within the focus trap region.\n * @return {?}\n */\nfocusFirstTabbableElementWhenReady() {\n    this._executeOnStable(() => this.focusFirstTabbableElement());\n  }\n/**\n * Waits for the zone to stabilize, then focuses\n * the last tabbable element within the focus trap region.\n * @return {?}\n */\nfocusLastTabbableElementWhenReady() {\n    this._executeOnStable(() => this.focusLastTabbableElement());\n  }\n/**\n * Get the specified boundary element of the trapped region.\n * @param {?} bound The boundary to get (start or end of trapped region).\n * @return {?} The boundary element.\n */\nprivate _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    let /** @type {?} */ markers = /** @type {?} */(( this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n                                                 `[cdk-focus-${bound}]`) as NodeListOf<HTMLElement>));\n\n    for (let /** @type {?} */ i = 0; i < markers.length; i++) {\n      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}',` +\n                     ` use 'cdk-focus-region-${bound}' instead.`, markers[i]);\n      }\n    }\n\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ?\n        markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n/**\n * Focuses the element that should be focused when the focus trap is initialized.\n * @return {?}\n */\nfocusInitialElement() {\n    let /** @type {?} */ redirectToElement = /** @type {?} */(( this._element.querySelector('[cdk-focus-initial]') as HTMLElement));\n    if (redirectToElement) {\n      redirectToElement.focus();\n    } else {\n      this.focusFirstTabbableElement();\n    }\n  }\n/**\n * Focuses the first tabbable element within the focus trap region.\n * @return {?}\n */\nfocusFirstTabbableElement() {\n    let /** @type {?} */ redirectToElement = this._getRegionBoundary('start');\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n  }\n/**\n * Focuses the last tabbable element within the focus trap region.\n * @return {?}\n */\nfocusLastTabbableElement() {\n    let /** @type {?} */ redirectToElement = this._getRegionBoundary('end');\n    if (redirectToElement) {\n      redirectToElement.focus();\n    }\n  }\n/**\n * Get the first tabbable element from a DOM subtree (inclusive).\n * @param {?} root\n * @return {?}\n */\nprivate _getFirstTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n    // back to `childNodes` which includes text nodes, comments etc.\n    let /** @type {?} */ children = root.children || root.childNodes;\n\n    for (let /** @type {?} */ i = 0; i < children.length; i++) {\n      let /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n        this._getFirstTabbableElement( /** @type {?} */((children[i] as HTMLElement))) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n/**\n * Get the last tabbable element from a DOM subtree (inclusive).\n * @param {?} root\n * @return {?}\n */\nprivate _getLastTabbableElement(root: HTMLElement): HTMLElement | null {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n\n    // Iterate in reverse DOM order.\n    let /** @type {?} */ children = root.children || root.childNodes;\n\n    for (let /** @type {?} */ i = children.length - 1; i >= 0; i--) {\n      let /** @type {?} */ tabbableChild = children[i].nodeType === Node.ELEMENT_NODE ?\n        this._getLastTabbableElement( /** @type {?} */((children[i] as HTMLElement))) :\n        null;\n\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n\n    return null;\n  }\n/**\n * Creates an anchor element.\n * @return {?}\n */\nprivate _createAnchor(): HTMLElement {\n    let /** @type {?} */ anchor = document.createElement('div');\n    anchor.tabIndex = this._enabled ? 0 : -1;\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    return anchor;\n  }\n/**\n * Executes a function when the zone is stable.\n * @param {?} fn\n * @return {?}\n */\nprivate _executeOnStable(fn: () => any): void {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      first.call(this._ngZone.onStable).subscribe(fn);\n    }\n  }\n}\n\nfunction FocusTrap_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrap.prototype._startAnchor;\n/** @type {?} */\nFocusTrap.prototype._endAnchor;\n/** @type {?} */\nFocusTrap.prototype._enabled;\n/** @type {?} */\nFocusTrap.prototype._element;\n/** @type {?} */\nFocusTrap.prototype._platform;\n/** @type {?} */\nFocusTrap.prototype._checker;\n/** @type {?} */\nFocusTrap.prototype._ngZone;\n}\n\n/**\n * Factory that allows easy instantiation of focus traps.\n */\nexport class FocusTrapFactory {\n/**\n * @param {?} _checker\n * @param {?} _platform\n * @param {?} _ngZone\n */\nconstructor(\nprivate _checker: InteractivityChecker,\nprivate _platform: Platform,\nprivate _ngZone: NgZone) { }\n/**\n * @param {?} element\n * @param {?=} deferAnchors\n * @return {?}\n */\ncreate(element: HTMLElement, deferAnchors = false): FocusTrap {\n    return new FocusTrap(element, this._platform, this._checker, this._ngZone, deferAnchors);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: InteractivityChecker, },\n{type: Platform, },\n{type: NgZone, },\n];\n}\n\nfunction FocusTrapFactory_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrapFactory.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusTrapFactory.ctorParameters;\n/** @type {?} */\nFocusTrapFactory.prototype._checker;\n/** @type {?} */\nFocusTrapFactory.prototype._platform;\n/** @type {?} */\nFocusTrapFactory.prototype._ngZone;\n}\n\n/**\n * Directive for trapping focus within a region.\n * @deprecated\n */\nexport class FocusTrapDeprecatedDirective implements OnDestroy, AfterContentInit {\n  focusTrap: FocusTrap;\n/**\n * Whether the focus trap is active.\n * @return {?}\n */\nget disabled(): boolean { return !this.focusTrap.enabled; }\n/**\n * @param {?} val\n * @return {?}\n */\nset disabled(val: boolean) {\n    this.focusTrap.enabled = !coerceBooleanProperty(val);\n  }\n/**\n * @param {?} _elementRef\n * @param {?} _focusTrapFactory\n */\nconstructor(private _elementRef: ElementRef,\nprivate _focusTrapFactory: FocusTrapFactory) {\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.focusTrap.destroy();\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'cdk-focus-trap',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: FocusTrapFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n};\n}\n\nfunction FocusTrapDeprecatedDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrapDeprecatedDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusTrapDeprecatedDirective.ctorParameters;\n/** @type {?} */\nFocusTrapDeprecatedDirective.propDecorators;\n/** @type {?} */\nFocusTrapDeprecatedDirective.prototype.focusTrap;\n/** @type {?} */\nFocusTrapDeprecatedDirective.prototype._elementRef;\n/** @type {?} */\nFocusTrapDeprecatedDirective.prototype._focusTrapFactory;\n}\n\n/**\n * Directive for trapping focus within a region.\n */\nexport class FocusTrapDirective implements OnDestroy, AfterContentInit {\n  focusTrap: FocusTrap;\n/**\n * Whether the focus trap is active.\n * @return {?}\n */\nget enabled(): boolean { return this.focusTrap.enabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset enabled(value: boolean) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n/**\n * @param {?} _elementRef\n * @param {?} _focusTrapFactory\n */\nconstructor(private _elementRef: ElementRef,\nprivate _focusTrapFactory: FocusTrapFactory) {\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.focusTrap.destroy();\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this.focusTrap.attachAnchors();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkTrapFocus]',\n  exportAs: 'cdkTrapFocus',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: FocusTrapFactory, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'enabled': [{ type: Input, args: ['cdkTrapFocus', ] },],\n};\n}\n\nfunction FocusTrapDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusTrapDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusTrapDirective.ctorParameters;\n/** @type {?} */\nFocusTrapDirective.propDecorators;\n/** @type {?} */\nFocusTrapDirective.prototype.focusTrap;\n/** @type {?} */\nFocusTrapDirective.prototype._elementRef;\n/** @type {?} */\nFocusTrapDirective.prototype._focusTrapFactory;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable, ObservableInput} from 'rxjs/Observable';\nimport {PartialObserver} from 'rxjs/Observer';\nimport {Subscription} from 'rxjs/Subscription';\nimport {IScheduler} from 'rxjs/Scheduler';\nimport {_finally as _finallyOperator} from 'rxjs/operator/finally';\nimport {_catch as _catchOperator} from 'rxjs/operator/catch';\nimport {_do as _doOperator} from 'rxjs/operator/do';\nimport {map as mapOperator} from 'rxjs/operator/map';\nimport {filter as filterOperator} from 'rxjs/operator/filter';\nimport {share as shareOperator} from 'rxjs/operator/share';\nimport {first as firstOperator} from 'rxjs/operator/first';\nimport {switchMap as switchMapOperator} from 'rxjs/operator/switchMap';\nimport {startWith as startWithOperator} from 'rxjs/operator/startWith';\nimport {debounceTime as debounceTimeOperator} from 'rxjs/operator/debounceTime';\nimport {auditTime as auditTimeOperator} from 'rxjs/operator/auditTime';\nimport {takeUntil as takeUntilOperator} from 'rxjs/operator/takeUntil';\n\n/**\n * Represents a strongly-typed chain of RxJS operators.\n *\n * We achieve strict type enforcement on the chained operators by creating types that\n * *unambiguously* match specific rxjs operators. These unambiguous types are created by\n * intersecting a \"brand\" to the `typeof` the existing operator. The brand (a class with a private\n * member) effectively forces nominal typing for the operators. This allows typescript to understand\n * that, for example, `filter` is *`filter`* and not, say, a map of T => boolean.\n *\n * The downside to this approach is that operators must be imported in their type-coerced form\n * rather than from the normal rxjs location.\n */\nexport interface StrictRxChain<T> {\n  call<R>(operator: mapOperatorType<T, R>,\n      project: (value: T, index: number) => R, thisArg?: any): StrictRxChain<R>;\n\n  call<R>(operator: switchMapOperatorType<T, R>,\n      project: (value: T, index: number) => ObservableInput<R>): StrictRxChain<R>;\n\n  call<R>(operator: catchOperatorType<T, R>,\n      selector: (err: any, caught: Observable<T>) => ObservableInput<R>): StrictRxChain<T | R>;\n\n  call(operator: filterOperatorType<T>,\n      predicate: (value: T, index: number) => boolean, thisArg?: any): StrictRxChain<T>;\n\n  call(operator: shareOperatorType<T>): StrictRxChain<T>;\n\n  call(operator: finallyOperatorType<T>, action: () => void): StrictRxChain<T>;\n\n  call(operator: doOperatorType<T>, next: (x: T) => void, error?:\n      (e: any) => void, complete?: () => void): StrictRxChain<T>;\n\n  call(operator: doOperatorType<T>, observer: PartialObserver<T>): StrictRxChain<T>;\n\n  call(operator: firstOperatorType<T>, thisArg?: any, defaultValue?: any): StrictRxChain<T>;\n\n  call(operator: firstOperatorType<T>, predicate: (value: T) => boolean): StrictRxChain<T>;\n\n  call(operator: startWithOperatorType<T>, ...args: any[]): StrictRxChain<T>;\n\n  call(operator: debounceTimeOperatorType<T>, dueTime: number,\n      scheduler?: IScheduler): StrictRxChain<T>;\n\n  call(operator: auditTimeOperatorType<T>, duration: number,\n      scheduler?: IScheduler): StrictRxChain<T>;\n\n  call(operator: takeUntilOperatorType<T>, notifier: Observable<any>): StrictRxChain<T>;\n\n  subscribe(fn: (t: T) => void): Subscription;\n\n  result(): Observable<T>;\n}\nexport class FinallyBrand {\nprivate _; }\n\nfunction FinallyBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nFinallyBrand.prototype._;\n}\n\nexport class CatchBrand {\nprivate _; }\n\nfunction CatchBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nCatchBrand.prototype._;\n}\n\nexport class DoBrand {\nprivate _; }\n\nfunction DoBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nDoBrand.prototype._;\n}\n\nexport class MapBrand {\nprivate _; }\n\nfunction MapBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nMapBrand.prototype._;\n}\n\nexport class FilterBrand {\nprivate _; }\n\nfunction FilterBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nFilterBrand.prototype._;\n}\n\nexport class ShareBrand {\nprivate _; }\n\nfunction ShareBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nShareBrand.prototype._;\n}\n\nexport class FirstBrand {\nprivate _; }\n\nfunction FirstBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nFirstBrand.prototype._;\n}\n\nexport class SwitchMapBrand {\nprivate _; }\n\nfunction SwitchMapBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nSwitchMapBrand.prototype._;\n}\n\nexport class StartWithBrand {\nprivate _; }\n\nfunction StartWithBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nStartWithBrand.prototype._;\n}\n\nexport class DebounceTimeBrand {\nprivate _; }\n\nfunction DebounceTimeBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nDebounceTimeBrand.prototype._;\n}\n\nexport class AuditTimeBrand {\nprivate _; }\n\nfunction AuditTimeBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nAuditTimeBrand.prototype._;\n}\n\nexport class TakeUntilBrand {\nprivate _; }\n\nfunction TakeUntilBrand_tsickle_Closure_declarations() {\n/** @type {?} */\nTakeUntilBrand.prototype._;\n}\n\n\n\nexport type finallyOperatorType<T> = typeof _finallyOperator & FinallyBrand;\nexport type catchOperatorType<T, R> = typeof _catchOperator & CatchBrand;\nexport type doOperatorType<T> = typeof _doOperator & DoBrand;\nexport type mapOperatorType<T, R> = typeof mapOperator & MapBrand;\nexport type filterOperatorType<T> = typeof filterOperator & FilterBrand;\nexport type shareOperatorType<T> = typeof shareOperator & ShareBrand;\nexport type firstOperatorType<T> = typeof firstOperator & FirstBrand;\nexport type switchMapOperatorType<T, R> = typeof switchMapOperator & SwitchMapBrand;\nexport type startWithOperatorType<T> = typeof startWithOperator & StartWithBrand;\nexport type debounceTimeOperatorType<T> = typeof debounceTimeOperator & DebounceTimeBrand;\nexport type auditTimeOperatorType<T> = typeof auditTimeOperator & AuditTimeBrand;\nexport type takeUntilOperatorType<T> = typeof takeUntilOperator & TakeUntilBrand;\n\n// We add `Function` to the type intersection to make this nomically different from\n// `finallyOperatorType` while still being structurally the same. Without this, TypeScript tries to\n// reduce `typeof _finallyOperator & FinallyBrand` to `finallyOperatorType<T>` and then fails\n// because `T` isn't known.\nexport const /** @type {?} */ finallyOperator = /** @type {?} */((\n    _finallyOperator as typeof _finallyOperator & FinallyBrand & Function));\nexport const /** @type {?} */ catchOperator = /** @type {?} */(( _catchOperator as typeof _catchOperator & CatchBrand & Function));\nexport const /** @type {?} */ doOperator = /** @type {?} */(( _doOperator as typeof _doOperator & DoBrand & Function));\nexport const /** @type {?} */ map = /** @type {?} */(( mapOperator as typeof mapOperator & MapBrand & Function));\nexport const /** @type {?} */ filter = /** @type {?} */(( filterOperator as typeof filterOperator & FilterBrand & Function));\nexport const /** @type {?} */ share = /** @type {?} */(( shareOperator as typeof shareOperator & ShareBrand & Function));\nexport const /** @type {?} */ first = /** @type {?} */(( firstOperator as typeof firstOperator & FirstBrand & Function));\nexport const /** @type {?} */ switchMap = /** @type {?} */(( switchMapOperator as typeof switchMapOperator & SwitchMapBrand & Function));\nexport const /** @type {?} */ startWith = /** @type {?} */(( startWithOperator as typeof startWithOperator & StartWithBrand & Function));\nexport const /** @type {?} */ debounceTime = /** @type {?} */((\n    debounceTimeOperator as typeof debounceTimeOperator & DebounceTimeBrand & Function));\nexport const /** @type {?} */ auditTime = /** @type {?} */(( auditTimeOperator as typeof auditTimeOperator & AuditTimeBrand & Function));\nexport const /** @type {?} */ takeUntil = /** @type {?} */(( takeUntilOperator as typeof takeUntilOperator & TakeUntilBrand & Function));\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {StrictRxChain} from './rx-operators';\n/**\n * Utility class used to chain RxJS operators.\n * \n * This class is the concrete implementation, but the type used by the user when chaining\n * is StrictRxChain. The strict chain enforces types on the operators to the same level as\n * the prototype-added equivalents.\n */\nexport class RxChain<T> {\n/**\n * @param {?} _context\n */\nprivate constructor(private _context: Observable<T>) { }\n/**\n * Starts a new chain and specifies the initial `this` value.\n * @template T\n * @param {?} context Initial `this` value for the chain.\n * @return {?}\n */\nstatic from<T>(context: Observable<T>): StrictRxChain<T> {\n    return new RxChain(context);\n  }\n/**\n * Invokes an RxJS operator as a part of the chain.\n * @param {?} operator Operator to be invoked.\n * @param {...?} args Arguments to be passed to the operator.\n * @return {?}\n */\ncall(operator: Function, ...args: any[]): RxChain<any> {\n    this._context = operator.call(this._context, ...args);\n    return this;\n  }\n/**\n * Subscribes to the result of the chain.\n * @param {?} fn Callback to be invoked when the result emits a value.\n * @return {?}\n */\nsubscribe(fn: (t: T) => void): Subscription {\n    return this._context.subscribe(fn);\n  }\n/**\n * Returns the result of the chain.\n * @return {?}\n */\nresult(): Observable<T> {\n    return this._context;\n  }\n}\n\nfunction RxChain_tsickle_Closure_declarations() {\n/** @type {?} */\nRxChain.prototype._context;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Platform} from '../platform/platform';\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nexport class InteractivityChecker {\n/**\n * @param {?} _platform\n */\nconstructor(private _platform: Platform) {}\n/**\n * Gets whether an element is disabled.\n * \n * @param {?} element Element to be checked.\n * @return {?} Whether the element is disabled.\n */\nisDisabled(element: HTMLElement): boolean {\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\n    // a form control inside of a disabled form, but should capture the most common cases.\n    return element.hasAttribute('disabled');\n  }\n/**\n * Gets whether an element is visible for the purposes of interactivity.\n * \n * This will capture states like `display: none` and `visibility: hidden`, but not things like\n * being clipped by an `overflow: hidden` parent or being outside the viewport.\n * \n * @param {?} element\n * @return {?} Whether the element is visible.\n */\nisVisible(element: HTMLElement): boolean {\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n  }\n/**\n * Gets whether an element can be reached via Tab key.\n * Assumes that the element has already been checked with isFocusable.\n * \n * @param {?} element Element to be checked.\n * @return {?} Whether the element is tabbable.\n */\nisTabbable(element: HTMLElement): boolean {\n    // Nothing is tabbable on the the server 😎\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    let /** @type {?} */ frameElement = /** @type {?} */(( getWindow(element).frameElement as HTMLElement));\n\n    if (frameElement) {\n\n      let /** @type {?} */ frameType = frameElement && frameElement.nodeName.toLowerCase();\n\n      // Frame elements inherit their tabindex onto all child elements.\n      if (getTabIndexValue(frameElement) === -1) {\n        return false;\n      }\n\n      // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n        return false;\n      }\n\n      // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n      if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n        return false;\n      }\n\n    }\n\n    let /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n    let /** @type {?} */ tabIndexValue = getTabIndexValue(element);\n\n    if (element.hasAttribute('contenteditable')) {\n      return tabIndexValue !== -1;\n    }\n\n    if (nodeName === 'iframe') {\n      // The frames may be tabbable depending on content, but it's not possibly to reliably\n      // investigate the content of the frames.\n      return false;\n    }\n\n    if (nodeName === 'audio') {\n      if (!element.hasAttribute('controls')) {\n        // By default an <audio> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK) {\n        // In Blink <audio controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'video') {\n      if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n        // In Trident a <video> element without the controls enabled is not tabbable.\n        return false;\n      } else if (this._platform.BLINK || this._platform.FIREFOX) {\n        // In Chrome and Firefox <video controls> elements are always tabbable.\n        return true;\n      }\n    }\n\n    if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n      // In all Blink and WebKit based browsers <object> elements are never tabbable.\n      return false;\n    }\n\n    // In iOS the browser only considers some specific elements as tabbable.\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n      return false;\n    }\n\n    return element.tabIndex >= 0;\n  }\n/**\n * Gets whether an element can be focused by the user.\n * \n * @param {?} element Element to be checked.\n * @return {?} Whether the element is focusable.\n */\nisFocusable(element: HTMLElement): boolean {\n    // Perform checks in order of left to most expensive.\n    // Again, naive approach that does not capture many edge cases and browser quirks.\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Platform, },\n];\n}\n\nfunction InteractivityChecker_tsickle_Closure_declarations() {\n/** @type {?} */\nInteractivityChecker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInteractivityChecker.ctorParameters;\n/** @type {?} */\nInteractivityChecker.prototype._platform;\n}\n\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element: HTMLElement): boolean {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element: Node) {\n  let /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' ||\n      nodeName === 'select' ||\n      nodeName === 'button' ||\n      nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an <input type=\"hidden\">.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element: HTMLElement): boolean {\n  return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element: HTMLElement): boolean {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element: HTMLElement): element is HTMLInputElement {\n  return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element: HTMLElement): element is HTMLAnchorElement {\n  return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element: HTMLElement): boolean {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n\n  let /** @type {?} */ tabIndex = element.getAttribute('tabindex');\n\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\n  if (tabIndex == '-32768') {\n    return false;\n  }\n\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element: HTMLElement): number | null {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const /** @type {?} */ tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element: HTMLElement): boolean {\n  let /** @type {?} */ nodeName = element.nodeName.toLowerCase();\n  let /** @type {?} */ inputType = nodeName === 'input' && ( /** @type {?} */((element as HTMLInputElement))).type;\n\n  return inputType === 'text'\n      || inputType === 'password'\n      || nodeName === 'select'\n      || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element: HTMLElement): boolean {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n\n  return isNativeFormElement(element) ||\n      isAnchorWithHref(element) ||\n      element.hasAttribute('contenteditable') ||\n      hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node: HTMLElement): Window {\n  return node.ownerDocument.defaultView || window;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nconst /** @type {?} */ hasV8BreakIterator = (typeof(Intl) !== 'undefined' && ( /** @type {?} */((Intl as any))).v8BreakIterator);\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n * \\@docs-private\n */\nexport class Platform {\n  isBrowser: boolean = typeof document === 'object' && !!document;\n/**\n * Layout Engines\n */\nEDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n  TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  BLINK = this.isBrowser &&\n      (!!(( /** @type {?} */((window as any))).chrome || hasV8BreakIterator) && !!CSS && !this.EDGE && !this.TRIDENT);\n\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  WEBKIT = this.isBrowser &&\n      /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n/**\n * Browsers and Platform Types\n */\nIOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !(window as any).MSStream;\n\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Platform_tsickle_Closure_declarations() {\n/** @type {?} */\nPlatform.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPlatform.ctorParameters;\n/** @type {?} */\nPlatform.prototype.isBrowser;\n/**\n * Layout Engines\n * @type {?}\n */\nPlatform.prototype.EDGE;\n/** @type {?} */\nPlatform.prototype.TRIDENT;\n/** @type {?} */\nPlatform.prototype.BLINK;\n/** @type {?} */\nPlatform.prototype.WEBKIT;\n/**\n * Browsers and Platform Types\n * @type {?}\n */\nPlatform.prototype.IOS;\n/** @type {?} */\nPlatform.prototype.FIREFOX;\n/** @type {?} */\nPlatform.prototype.ANDROID;\n/** @type {?} */\nPlatform.prototype.SAFARI;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Coerces a data-bound value (typically a string) to a boolean.\n * @param {?} value\n * @return {?}\n */\nexport function coerceBooleanProperty(value: any): boolean {\n  return value != null && `${value}` !== 'false';\n}\n"],"names":["debounceTime","first","takeUntil","takeUntilOperator","auditTime","auditTimeOperator","debounceTimeOperator","startWith","startWithOperator","switchMap","switchMapOperator","firstOperator","share","shareOperator","filter","filterOperator","map","mapOperator","_doOperator","_catchOperator","_finallyOperator"],"mappings":"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"}