{"version":3,"sources":["../../../../src/lib/utils/layout-validator.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AANH,AAQA;;;;;;GAFG,CAEH,MAAM,CAAC,IAAM,aAAa,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;AAEhF;;GAEG;AACH,MAAM,yBAAyB,KAAa;IACtC,IAAA,yBAAwC,EAAvC,iBAAS,EAAE,YAAI,CAAyB;IAC7C,MAAM,CAAE,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACnC,CAAC;AAEF;;;IAGI;AACJ,uBAAuB,KAAa;IAClC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC;IACrC,IAAA,qBAAoC,EAAnC,iBAAS,EAAE,YAAI,CAAqB;IACzC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,SAAS,EAAf,CAAe,CAAC,CAAC,CAAC,CAAC;QAC9C,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IACD,MAAM,CAAC,CAAC,SAAS,EAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9C,CAAC;AAGD;;GAEG;AACH,MAAM,4BAA4B,KAAK;IACrC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACZ,MAAM,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YAC5B,KAAK,SAAS,CAAC;YACf,KAAK,cAAc,CAAC;YACpB,KAAK,cAAc;gBACjB,KAAK,GAAG,cAAc,CAAC;gBACvB,KAAK,CAAC;YAER,KAAK,IAAI,CAAC;YACV,KAAK,MAAM,CAAC;YACZ,KAAK,QAAQ;gBACX,KAAK,GAAG,QAAQ,CAAC;gBACjB,KAAK,CAAC;YAER,sCAAsC;YACtC;gBACE,KAAK,GAAG,MAAM,CAAC;gBACf,KAAK,CAAC;QACV,CAAC;IACH,CAAC;IACD,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AAID;;;;;;;;GAQG;AACH,kBAAkB,SAAS,EAAE,IAAW;IAAX,qBAAA,EAAA,WAAW;IACtC,MAAM,CAAC;QACL,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,YAAY;QAC1B,gBAAgB,EAAE,SAAS;QAC3B,WAAW,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI;KAClC,CAAC;AACJ,CAAC","file":"layout-validator.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|\"direction wrap\" value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap] = validateValue(value);\n  return  buildCSS(direction, wrap);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of \"row\"\n  */\nfunction validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap] = value.split(\" \");\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n  return [direction, validateWrapValue(wrap)];\n}\n\n\n/**\n * Convert layout-wrap=\"<value>\" to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to \"wrap\"\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container wonâ€™t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null) {\n  return {\n    'display': 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n"]}