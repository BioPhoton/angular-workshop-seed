{"version":3,"sources":["../../../../../src/lib/utils/testing/dom-tools.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;;GAEG;AAVH,AAWA;;;;;;GALG,CAKH,MAAM,CAAC,IAAM,IAAI,GAAG;IAClB,QAAQ,UAAA;IACR,mBAAmB,qBAAA;IACnB,aAAa,eAAA;IACb,OAAO,SAAA;IACP,QAAQ,UAAA;IACR,UAAU,YAAA;IACV,gBAAgB,kBAAA;IAChB,QAAQ,UAAA;IACR,aAAa,eAAA;IACb,aAAa,eAAA;IACb,aAAa,eAAA;IACb,SAAS,WAAA;IACT,YAAY,cAAA;IACZ,OAAO,SAAA;CACR,CAAC;AAEF,6FAA6F;AAC7F,kCAAkC;AAClC,qEAAqE;AACrE,0EAA0E;AAC1E,6FAA6F;AAE7F,kBAAkB,OAAY,EAAE,SAAiB;IAC/C,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;AAClC,CAAC;AAED,kBAAkB,OAAY,EAAE,SAAiB,EAAE,UAAyB;IAAzB,2BAAA,EAAA,iBAAyB;IAC1E,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC;IACtD,MAAM,CAAC,UAAU,GAAG,KAAK,IAAI,UAAU,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7D,CAAC;AAED,6BAA6B,EAAe;IAC1C,MAAM,CAAO,EAAG,CAAC,mBAAmB,EAAE,CAAC;AACzC,CAAC;AAED,uBAAuB,EAAe;IACpC,MAAM,CAAO,EAAG,CAAC,UAAU,CAAC;AAC9B,CAAC;AAED,iBAAiB,EAAQ;IACvB,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC;AACxB,CAAC;AAED,0BAA0B,EAAQ;IAChC,IAAM,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC;IACjC,IAAM,GAAG,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACzC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IACD,MAAM,CAAC,GAAG,CAAC;AACb,CAAC;AAED,kBAAkB,OAAY,EAAE,SAAiB;IAC/C,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC/C,CAAC;AAED,oBAAoB,EAAO;IACzB,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC;AACvB,CAAC;AAED,uBAAuB,IAAS;IAC9B,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,YAAY,WAAW,CAAC;AACnE,CAAC;AAED,uBAAuB,IAAU;IAC/B,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC;AAC7C,CAAC;AAED,uBAAuB,IAAU;IAC/B,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,CAAC;AAC7C,CAAC;AAED,sBAAsB,IAAS;IAC7B,MAAM,CAAC,IAAI,YAAY,gBAAgB,CAAC;AAC1C,CAAC;AAED,mBAAmB,GAAQ;IACzB,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC;AACrB,CAAC;AACD,iBAAiB,OAAY;IAC3B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;AACzB,CAAC","file":"dom-tools.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Exported DOM accessor utility functions\n */\nexport const _dom = {\n  hasStyle,\n  getDistributedNodes,\n  getShadowRoot,\n  getText,\n  getStyle,\n  childNodes,\n  childNodesAsList,\n  hasClass,\n  hasShadowRoot,\n  isCommentNode,\n  isElementNode,\n  isPresent,\n  isShadowRoot,\n  tagName\n};\n\n// ******************************************************************************************\n// These functions are cloned from\n//  *  @angular/platform-browser/src/browser/GenericBrowserDomAdapter\n// and are to be used ONLY internally in custom-matchers.ts and Unit Tests\n// ******************************************************************************************\n\nfunction getStyle(element: any, stylename: string): string {\n  return element.style[stylename];\n}\n\nfunction hasStyle(element: any, styleName: string, styleValue: string = null): boolean {\n  const value = this.getStyle(element, styleName) || '';\n  return styleValue ? value == styleValue : value.length > 0;\n}\n\nfunction getDistributedNodes(el: HTMLElement): Node[] {\n  return (<any>el).getDistributedNodes();\n}\n\nfunction getShadowRoot(el: HTMLElement): DocumentFragment {\n  return (<any>el).shadowRoot;\n}\n\nfunction getText(el: Node): string {\n  return el.textContent;\n}\n\nfunction childNodesAsList(el: Node): any[] {\n  const childNodes = el.childNodes;\n  const res = new Array(childNodes.length);\n  for (let i = 0; i < childNodes.length; i++) {\n    res[i] = childNodes[i];\n  }\n  return res;\n}\n\nfunction hasClass(element: any, className: string): boolean {\n  return element.classList.contains(className);\n}\n\nfunction childNodes(el: any): Node[] {\n  return el.childNodes;\n}\n\nfunction hasShadowRoot(node: any): boolean {\n  return isPresent(node.shadowRoot) && node instanceof HTMLElement;\n}\n\nfunction isCommentNode(node: Node): boolean {\n  return node.nodeType === Node.COMMENT_NODE;\n}\n\nfunction isElementNode(node: Node): boolean {\n  return node.nodeType === Node.ELEMENT_NODE;\n}\n\nfunction isShadowRoot(node: any): boolean {\n  return node instanceof DocumentFragment;\n}\n\nfunction isPresent(obj: any): boolean {\n  return obj != null;\n}\nfunction tagName(element: any): string {\n  return element.tagName;\n}\n"]}