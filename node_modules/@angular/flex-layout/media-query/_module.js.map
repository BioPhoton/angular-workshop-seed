{"version":3,"sources":["../../../../src/lib/media-query/_module.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,EAAA,QAAE,EAAQ,MAAM,eAAA,CAAgB;AAEvC,OAAO,EAAA,UAAE,EAAU,MAAM,eAAA,CAAgB;AACzC,OAAO,EAAA,YAAE,EAAY,MAAM,iBAAA,CAAkB;AAC7C,OAAO,EAAA,yBAAE,EAAyB,MAAM,6BAAA,CAA8B;AACtE,OAAO,EAAA,4BAAE,EAA4B,MAAM,qCAAA,CAAsC;AACjF,OAAO,EAAA,kBAAE,EAAkB,MAAM,oCAAA,CAAqC;AAEtE;;;;GAIG;AAGH;IAAA;IAeA,CAAC;IAAD,yBAAC;AAAD,CAfA,AAeC;;AAdM,6BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,SAAS,EAAE;oBACT,4BAA4B;oBAC5B,kBAAkB;oBAClB,UAAU;oBACV,YAAY;oBACZ,yBAAyB,CAAE,8DAA8D;iBAC1F;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,iCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"_module.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MatchMedia} from './match-media';\nimport {MediaMonitor} from './media-monitor';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media-provider';\nimport {DEFAULT_BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n\nexport class MediaQueriesModule {\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    DEFAULT_BREAKPOINTS_PROVIDER,  // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MatchMedia,              // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER  // easy subscription injectable `media$` matchMedia observable\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}