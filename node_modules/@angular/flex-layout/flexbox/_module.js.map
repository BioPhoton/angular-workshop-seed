{"version":3,"sources":["../../../../src/lib/flexbox/_module.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AACH,OAAO,0BAAA,CAA2B;AAClC,OAAO,uBAAA,CAAwB;AAE/B,OAAO,EAAsB,QAAA,EAAS,MAAM,eAAA,CAAgB;AAC5D,OAAO,EAAA,kBAAE,EAAkB,MAAM,wBAAA,CAAyB;AAG1D,OAAO,EAEL,4BAA4B,EAC5B,mCAAmC,EACpC,MAAM,kDAAA,CAAmD;AAC1D,OAAO,EAAA,sBAAE,EAAsB,MAAM,uCAAA,CAAwC;AAC7E,OAAO,EAAA,yBAAE,EAAyB,MAAM,0CAAA,CAA2C;AAEnF,OAAO,EAAA,aAAE,EAAa,MAAM,YAAA,CAAa;AACzC,OAAO,EAAA,eAAE,EAAe,MAAM,cAAA,CAAe;AAC7C,OAAO,EAAA,iBAAE,EAAiB,MAAM,iBAAA,CAAkB;AAClD,OAAO,EAAA,kBAAE,EAAkB,MAAM,kBAAA,CAAmB;AACpD,OAAO,EAAA,iBAAE,EAAiB,MAAM,iBAAA,CAAkB;AAClD,OAAO,EAAA,mBAAE,EAAmB,MAAM,mBAAA,CAAoB;AACtD,OAAO,EAAA,kBAAE,EAAkB,MAAM,kBAAA,CAAmB;AACpD,OAAO,EAAA,oBAAE,EAAoB,MAAM,oBAAA,CAAqB;AACxD,OAAO,EAAA,mBAAE,EAAmB,MAAM,mBAAA,CAAoB;AACtD,OAAO,EAAA,kBAAE,EAAkB,MAAM,kBAAA,CAAmB;AACpD,OAAO,EAAA,cAAE,EAAc,MAAM,aAAA,CAAc;AAC3C,OAAO,EAAA,cAAE,EAAc,MAAM,aAAA,CAAc;AAE3C;;;;;;GAMG;AAEH,IAAM,cAAA,GAAiB;IACrB,eAAe;IACf,mBAAmB;IACnB,kBAAkB;IAClB,oBAAoB;IACpB,aAAa;IACb,kBAAkB;IAClB,mBAAmB;IACnB,iBAAiB;IACjB,kBAAkB;IAClB,iBAAiB;IACjB,cAAc;IACd,cAAc;CACf,CAAC;AAEF;;GAEG;AAEH;IAAA;IAgCA,CAAC;IA/BC;;;;;;OAMG;IACI,mCAAkB,GAAzB,UAA0B,WAAyB,EACzB,OAAoC;QAC5D,MAAM,CAAC;YACL,QAAQ,EAAE,gBAAgB;YAC1B,SAAS,EAAE;gBACT,mCAAmC,CAAC,WAAW,EAAE,OAAO,IAAI,EAAC,YAAY,EAAE,KAAK,EAAC,CAAC;aACnF;SACF,CAAC;IACJ,CAAC;IAgBH,uBAAC;AAAD,CAhCA,AAgCC;;AAfM,2BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,YAAY,EAAE,cAAc;gBAC5B,OAAO,EAAE,CAAC,kBAAkB,CAAC;gBAC7B,OAAO,GAAG,kBAAkB,SAAK,cAAc,CAAC;gBAChD,SAAS,EAAE;oBACT,sBAAsB;oBACtB,4BAA4B;oBAC5B,yBAAyB;iBAC1B;aACF,EAAG,EAAE;CACL,CAAC;AACF,kBAAkB;AACX,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC","file":"_module.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/map';\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {MediaQueriesModule} from '../media-query/_module';\n\nimport {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {\n  BreakPointProviderOptions,\n  DEFAULT_BREAKPOINTS_PROVIDER,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY\n} from '../media-query/breakpoints/break-points-provider';\nimport {MEDIA_MONITOR_PROVIDER} from '../media-query/media-monitor-provider';\nimport {OBSERVABLE_MEDIA_PROVIDER} from '../media-query/observable-media-provider';\n\nimport {FlexDirective} from './api/flex';\nimport {LayoutDirective} from './api/layout';\nimport {ShowHideDirective} from './api/show-hide';\nimport {FlexAlignDirective} from './api/flex-align';\nimport {FlexFillDirective} from './api/flex-fill';\nimport {FlexOffsetDirective} from './api/flex-offset';\nimport {FlexOrderDirective} from './api/flex-order';\nimport {LayoutAlignDirective} from './api/layout-align';\nimport {LayoutWrapDirective} from './api/layout-wrap';\nimport {LayoutGapDirective} from './api/layout-gap';\nimport {ClassDirective} from './api/class';\nimport {StyleDirective} from './api/style';\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './api/layout-padding';\n *  import {LayoutMarginDirective} from './api/layout-margin';\n */\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutWrapDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective,\n];\n\n/**\n *\n */\n\nexport class FlexLayoutModule {\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options ?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: ALL_DIRECTIVES,\n  imports: [MediaQueriesModule],\n  exports: [MediaQueriesModule, ...ALL_DIRECTIVES],\n  providers: [\n    MEDIA_MONITOR_PROVIDER,\n    DEFAULT_BREAKPOINTS_PROVIDER,   // Extend defaults with internal custom breakpoints\n    OBSERVABLE_MEDIA_PROVIDER\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}