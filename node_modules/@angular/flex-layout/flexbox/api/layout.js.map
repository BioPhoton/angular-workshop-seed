{"version":3,"sources":["../../../../../src/lib/flexbox/api/layout.ts"],"names":[],"mappings":"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","file":"layout.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: BehaviorSubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent \"layout\" direction changes\n   */\n  public layout$: Observable<string>;\n\n  /* tslint:disable */\n         set layout(val)     { this._cacheInput(\"layout\", val); };\n      set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n      set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n      set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n      set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n      set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n   set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n   set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n   set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n   set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n   set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n   set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n   set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n   set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n    this._announcer = new BehaviorSubject<string>(\"row\");\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput(\"layout\") || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(value);\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n\n\n\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaMonitor, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'layout': [{ type: Input, args: ['fxLayout', ] },],\n'layoutXs': [{ type: Input, args: ['fxLayout.xs', ] },],\n'layoutSm': [{ type: Input, args: ['fxLayout.sm', ] },],\n'layoutMd': [{ type: Input, args: ['fxLayout.md', ] },],\n'layoutLg': [{ type: Input, args: ['fxLayout.lg', ] },],\n'layoutXl': [{ type: Input, args: ['fxLayout.xl', ] },],\n'layoutGtXs': [{ type: Input, args: ['fxLayout.gt-xs', ] },],\n'layoutGtSm': [{ type: Input, args: ['fxLayout.gt-sm', ] },],\n'layoutGtMd': [{ type: Input, args: ['fxLayout.gt-md', ] },],\n'layoutGtLg': [{ type: Input, args: ['fxLayout.gt-lg', ] },],\n'layoutLtSm': [{ type: Input, args: ['fxLayout.lt-sm', ] },],\n'layoutLtMd': [{ type: Input, args: ['fxLayout.lt-md', ] },],\n'layoutLtLg': [{ type: Input, args: ['fxLayout.lt-lg', ] },],\n'layoutLtXl': [{ type: Input, args: ['fxLayout.lt-xl', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}