{"version":3,"sources":["../../../../../src/lib/flexbox/api/layout-gap.ts"],"names":[],"mappings":"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","file":"layout-gap.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n\nexport class LayoutGapDirective extends BaseFxDirective implements AfterContentInit, OnChanges,\n    OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n\n  /* tslint:disable */\n         set gap(val) { this._cacheInput('gap', val); }\n      set gapXs(val) { this._cacheInput('gapXs', val); }\n      set gapSm(val) { this._cacheInput('gapSm', val); };\n      set gapMd(val) { this._cacheInput('gapMd', val); };\n      set gapLg(val) { this._cacheInput('gapLg', val); };\n      set gapXl(val) { this._cacheInput('gapXl', val); };\n\n   set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n   set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n   set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n   set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n   set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n   set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n   set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n   set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n                container: LayoutDirective) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    let onMutationCallback = (mutations) => {\n      let validatedChanges = (it: MutationRecord) => {\n        return (it.addedNodes && it.addedNodes.length) ||\n            (it.removedNodes && it.removedNodes.length);\n      };\n\n      // update gap styles only for child 'added' or 'removed' events\n      if (mutations.filter(validatedChanges).length) {\n        this._updateWithValue();\n      }\n    };\n\n    this._observer = new MutationObserver(onMutationCallback);\n    this._observer.observe(this._elementRef.nativeElement, {childList: true});\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput(\"gap\") || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    let items = this.childrenNodes\n        .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != \"none\");\n    let numItems = items.length;\n\n    if (numItems > 1) {\n      let lastItem = items[numItems - 1];\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      items = items.filter((el, j) => j < numItems - 1);\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case \"row\" :\n      case 'row-reverse':\n      default :\n        key = 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaMonitor, },\n{type: ElementRef, },\n{type: Renderer2, },\n{type: LayoutDirective, decorators: [{ type: Optional }, { type: Self }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'gap': [{ type: Input, args: ['fxLayoutGap', ] },],\n'gapXs': [{ type: Input, args: ['fxLayoutGap.xs', ] },],\n'gapSm': [{ type: Input, args: ['fxLayoutGap.sm', ] },],\n'gapMd': [{ type: Input, args: ['fxLayoutGap.md', ] },],\n'gapLg': [{ type: Input, args: ['fxLayoutGap.lg', ] },],\n'gapXl': [{ type: Input, args: ['fxLayoutGap.xl', ] },],\n'gapGtXs': [{ type: Input, args: ['fxLayoutGap.gt-xs', ] },],\n'gapGtSm': [{ type: Input, args: ['fxLayoutGap.gt-sm', ] },],\n'gapGtMd': [{ type: Input, args: ['fxLayoutGap.gt-md', ] },],\n'gapGtLg': [{ type: Input, args: ['fxLayoutGap.gt-lg', ] },],\n'gapLtSm': [{ type: Input, args: ['fxLayoutGap.lt-sm', ] },],\n'gapLtMd': [{ type: Input, args: ['fxLayoutGap.lt-md', ] },],\n'gapLtLg': [{ type: Input, args: ['fxLayoutGap.lt-lg', ] },],\n'gapLtXl': [{ type: Input, args: ['fxLayoutGap.lt-xl', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}