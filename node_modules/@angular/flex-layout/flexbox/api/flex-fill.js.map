{"version":3,"sources":["../../../../../src/lib/flexbox/api/flex-fill.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;;;GAMG;AACH,OAAO,EAAA,SAAE,EAAU,UAAA,EAAY,SAAA,EAAU,MAAM,eAAA,CAAgB;AAE/D,OAAO,EAAA,YAAE,EAAY,MAAM,iCAAA,CAAkC;AAC7D,OAAO,EAAA,eAAE,EAAe,MAAM,QAAA,CAAS;AAEvC,IAAM,aAAA,GAAgB;IACpB,QAAQ,EAAE,CAAA;IACV,OAAO,EAAE,MAAA;IACT,QAAQ,EAAE,MAAA;IACV,WAAW,EAAE,MAAA;IACb,YAAY,EAAE,MAAA;CACf,CAAC;AAEF;;;;;GAKG;AAEH;IAAuC,qCAAe;IACpD,2BAAY,OAAqB,EAAS,KAAiB,EAAS,QAAmB;QAAvF,YACE,kBAAM,OAAO,EAAE,KAAK,EAAE,QAAQ,CAAC,SAEhC;QAHyC,WAAK,GAAL,KAAK,CAAY;QAAS,cAAQ,GAAR,QAAQ,CAAW;QAErF,KAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;;IAC3C,CAAC;IAaH,wBAAC;AAAD,CAjBA,AAiBC,CAjBsC,eAAe;;AAK/C,4BAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAC,QAAQ,EAAE,iCAGpC,EAAC,EAAG,EAAE;CACN,CAAC;AACF,kBAAkB;AACX,gCAAc,GAAmE,cAAM,OAAA;IAC9F,EAAC,IAAI,EAAE,YAAY,GAAG;IACtB,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;CAClB,EAJ6F,CAI7F,CAAC","file":"flex-fill.js","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Renderer2} from '@angular/core';\n\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {BaseFxDirective} from './base';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor, public elRef: ElementRef, public renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: `\n  [fxFill],\n  [fxFlexFill]\n`}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MediaMonitor, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}