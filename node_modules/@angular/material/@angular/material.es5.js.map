{"version":3,"file":"material.es5.js","sources":["../../src/lib/index.ts","../../src/lib/module.ts","../../src/lib/paginator/index.ts","../../src/lib/paginator/paginator.ts","../../src/lib/paginator/paginator-intl.ts","../../src/lib/sort/index.ts","../../src/lib/sort/sort-header.ts","../../src/lib/sort/sort-header-intl.ts","../../src/lib/sort/sort.ts","../../src/lib/sort/sort-errors.ts","../../src/lib/table/index.ts","../../src/lib/table/row.ts","../../src/lib/table/cell.ts","../../src/lib/table/table.ts","../../src/lib/expansion/index.ts","../../src/lib/expansion/expansion-panel-header.ts","../../src/lib/expansion/expansion-panel.ts","../../src/lib/expansion/accordion-item.ts","../../src/lib/expansion/accordion.ts","../../src/lib/datepicker/index.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/autocomplete/index.ts","../../src/lib/autocomplete/autocomplete-trigger.ts","../../src/lib/autocomplete/autocomplete.ts","../../src/lib/dialog/index.ts","../../src/lib/dialog/dialog-content-directives.ts","../../src/lib/dialog/dialog.ts","../../src/lib/dialog/dialog-container.ts","../../src/lib/dialog/dialog-ref.ts","../../src/lib/dialog/dialog-config.ts","../../src/lib/menu/index.ts","../../src/lib/menu/menu-trigger.ts","../../src/lib/menu/menu-directive.ts","../../src/lib/menu/menu-animations.ts","../../src/lib/menu/menu-item.ts","../../src/lib/menu/menu-errors.ts","../../src/lib/tooltip/index.ts","../../src/lib/tooltip/tooltip.ts","../../src/lib/toolbar/index.ts","../../src/lib/toolbar/toolbar.ts","../../src/lib/tabs/index.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/ink-bar.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/snack-bar/index.ts","../../src/lib/snack-bar/snack-bar.ts","../../src/lib/snack-bar/simple-snack-bar.ts","../../src/lib/snack-bar/snack-bar-container.ts","../../src/lib/snack-bar/snack-bar-ref.ts","../../src/lib/snack-bar/snack-bar-config.ts","../../src/lib/core/portal/portal-injector.ts","../../src/lib/input/index.ts","../../src/lib/input/autosize.ts","../../src/lib/input/input.ts","../../src/lib/form-field/index.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/placeholder.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/form-field/error.ts","../../src/lib/input/input-errors.ts","../../src/lib/progress-bar/index.ts","../../src/lib/progress-bar/progress-bar.ts","../../src/lib/progress-spinner/index.ts","../../src/lib/progress-spinner/progress-spinner.ts","../../src/lib/icon/index.ts","../../src/lib/icon/icon.ts","../../src/lib/icon/icon-registry.ts","../../src/lib/chips/index.ts","../../src/lib/chips/chip-input.ts","../../src/lib/chips/chip-list.ts","../../src/lib/chips/chip.ts","../../src/lib/card/index.ts","../../src/lib/card/card.ts","../../src/lib/grid-list/index.ts","../../src/lib/grid-list/grid-list.ts","../../src/lib/grid-list/tile-styler.ts","../../src/lib/grid-list/tile-coordinator.ts","../../src/lib/grid-list/grid-tile.ts","../../src/lib/grid-list/grid-list-measure.ts","../../src/lib/list/index.ts","../../src/lib/list/selection-list.ts","../../src/lib/list/list.ts","../../src/lib/sidenav/index.ts","../../src/lib/sidenav/sidenav.ts","../../src/lib/sidenav/drawer.ts","../../src/lib/slider/index.ts","../../src/lib/slider/slider.ts","../../src/lib/slide-toggle/index.ts","../../src/lib/slide-toggle/slide-toggle.ts","../../src/lib/select/index.ts","../../src/lib/select/select.ts","../../src/lib/select/select-errors.ts","../../src/lib/select/select-animations.ts","../../src/lib/radio/index.ts","../../src/lib/radio/radio.ts","../../src/lib/checkbox/index.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/button/index.ts","../../src/lib/button/button.ts","../../src/lib/core/common-behaviors/disable-ripple.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/button-toggle/index.ts","../../src/lib/button-toggle/button-toggle.ts","../../src/lib/core/core.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/placeholder/placeholder-options.ts","../../src/lib/core/datetime/index.ts","../../src/lib/core/datetime/native-date-formats.ts","../../src/lib/core/datetime/date-formats.ts","../../src/lib/core/datetime/native-date-adapter.ts","../../src/lib/core/util/object-extend.ts","../../src/lib/core/datetime/date-adapter.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/style/index.ts","../../src/lib/core/style/apply-transform.ts","../../src/lib/core/style/focus-origin-monitor.ts","../../src/lib/core/coordination/unique-selection-dispatcher.ts","../../src/lib/core/gestures/gesture-config.ts","../../src/lib/core/option/index.ts","../../src/lib/core/option/option.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/ripple/index.ts","../../src/lib/core/ripple/ripple.ts","../../src/lib/core/ripple/ripple-renderer.ts","../../src/lib/core/ripple/ripple-ref.ts","../../src/lib/core/line/line.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/compatibility/compatibility.ts","../../src/lib/version.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {VERSION,coerceBooleanProperty,coerceNumberProperty,ObserversModule,ObserveContent,SelectionModel,Dir,Direction,Directionality,BidiModule,Portal,PortalHost,BasePortalHost,ComponentPortal,TemplatePortal,PortalHostDirective,TemplatePortalDirective,PortalModule,DomPortalHost,GestureConfig,HammerInput,HammerManager,AriaLivePoliteness,LiveAnnouncer,LIVE_ANNOUNCER_ELEMENT_TOKEN,LIVE_ANNOUNCER_PROVIDER,InteractivityChecker,FocusTrap,FocusTrapFactory,FocusTrapDeprecatedDirective,FocusTrapDirective,isFakeMousedownFromScreenReader,A11yModule,UniqueSelectionDispatcher,UniqueSelectionDispatcherListener,UNIQUE_SELECTION_DISPATCHER_PROVIDER,MdLineModule,MdLine,MdLineSetter,CompatibilityModule,NoConflictStyleCompatibilityMode,MdCommonModule,MATERIAL_SANITY_CHECKS,FloatPlaceholderType,PlaceholderOptions,MD_PLACEHOLDER_GLOBAL_OPTIONS,ErrorStateMatcher,ErrorOptions,MD_ERROR_GLOBAL_OPTIONS,defaultErrorStateMatcher,showOnDirtyErrorStateMatcher,MdCoreModule,MdOptionModule,MdOptionSelectionChange,MdOption,MdOptgroupBase,_MdOptgroupMixinBase,MdOptgroup,PlatformModule,Platform,getSupportedInputTypes,OVERLAY_PROVIDERS,OverlayModule,Overlay,OverlayContainer,FullscreenOverlayContainer,OverlayRef,OverlayState,ConnectedOverlayDirective,OverlayOrigin,ViewportRuler,ComponentType,PositionStrategy,GlobalPositionStrategy,ConnectedPositionStrategy,VIEWPORT_RULER_PROVIDER,HorizontalConnectionPos,VerticalConnectionPos,OriginConnectionPosition,OverlayConnectionPosition,ConnectionPositionPair,ScrollingVisibility,ConnectedOverlayPositionChange,Scrollable,ScrollDispatcher,ScrollStrategy,ScrollStrategyOptions,RepositionScrollStrategy,CloseScrollStrategy,NoopScrollStrategy,BlockScrollStrategy,MdRipple,RippleGlobalOptions,MD_RIPPLE_GLOBAL_OPTIONS,RippleRef,RippleState,RippleConfig,RIPPLE_FADE_IN_DURATION,RIPPLE_FADE_OUT_DURATION,MdRippleModule,StyleModule,TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER,applyCssTransform,UP_ARROW,DOWN_ARROW,RIGHT_ARROW,LEFT_ARROW,PAGE_UP,PAGE_DOWN,HOME,END,ENTER,SPACE,TAB,ESCAPE,BACKSPACE,DELETE,A,Z,MATERIAL_COMPATIBILITY_MODE,getMdCompatibilityInvalidPrefixError,MAT_ELEMENTS_SELECTOR,MD_ELEMENTS_SELECTOR,MatPrefixRejector,MdPrefixRejector,AnimationCurves,AnimationDurations,MdPseudoCheckboxModule,MdPseudoCheckboxState,MdPseudoCheckbox,NativeDateModule,MdNativeDateModule,DateAdapter,MdDateFormats,MD_DATE_FORMATS,NativeDateAdapter,MD_NATIVE_DATE_FORMATS,MaterialModule,MdAutocompleteModule,MdAutocompleteSelectedEvent,MdAutocomplete,AUTOCOMPLETE_OPTION_HEIGHT,AUTOCOMPLETE_PANEL_HEIGHT,MD_AUTOCOMPLETE_SCROLL_STRATEGY,MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER,MD_AUTOCOMPLETE_VALUE_ACCESSOR,getMdAutocompleteMissingPanelError,MdAutocompleteTrigger,MdButtonModule,MdButtonCssMatStyler,MdRaisedButtonCssMatStyler,MdIconButtonCssMatStyler,MdFab,MdMiniFab,MdButtonBase,_MdButtonMixinBase,MdButton,MdAnchor,MdButtonToggleModule,ToggleType,MdButtonToggleGroupBase,_MdButtonToggleGroupMixinBase,MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,MdButtonToggleChange,MdButtonToggleGroup,MdButtonToggleGroupMultiple,MdButtonToggle,MdCardModule,MdCardContent,MdCardTitle,MdCardSubtitle,MdCardActions,MdCardFooter,MdCardImage,MdCardSmImage,MdCardMdImage,MdCardLgImage,MdCardXlImage,MdCardAvatar,MdCard,MdCardHeader,MdCardTitleGroup,MdChipsModule,MdChipList,MdChipEvent,MdChipBase,_MdChipMixinBase,MdBasicChip,MdChip,MdChipRemove,MdChipInputEvent,MdChipInput,MdCheckboxModule,MD_CHECKBOX_CONTROL_VALUE_ACCESSOR,TransitionCheckState,MdCheckboxChange,MdCheckboxBase,_MdCheckboxMixinBase,MdCheckbox,_MdCheckboxRequiredValidator,MD_CHECKBOX_REQUIRED_VALIDATOR,MdCheckboxRequiredValidator,MdDatepickerModule,MdCalendar,MdCalendarCell,MdCalendarBody,MD_DATEPICKER_SCROLL_STRATEGY,MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER,MdDatepickerContent,MdDatepicker,MD_DATEPICKER_VALUE_ACCESSOR,MD_DATEPICKER_VALIDATORS,MdDatepickerInputEvent,MdDatepickerInput,MdDatepickerIntl,MdDatepickerToggle,MdMonthView,MdYearView,MdDialogModule,MD_DIALOG_DATA,MD_DIALOG_SCROLL_STRATEGY,MD_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_DIALOG_SCROLL_STRATEGY_PROVIDER,MdDialog,throwMdDialogContentAlreadyAttachedError,MdDialogContainer,MdDialogClose,MdDialogTitle,MdDialogContent,MdDialogActions,DialogRole,DialogPosition,MdDialogConfig,MdDialogRef,MdExpansionModule,CdkAccordion,MdAccordion,MdAccordionDisplayMode,AccordionItem,MdExpansionPanel,MdExpansionPanelState,MdExpansionPanelActionRow,MdExpansionPanelHeader,MdExpansionPanelDescription,MdExpansionPanelTitle,MdFormFieldModule,MdError,MdFormField,MdFormFieldControl,getMdFormFieldPlaceholderConflictError,getMdFormFieldDuplicatedHintError,getMdFormFieldMissingControlError,MdHint,MdPlaceholder,MdPrefix,MdSuffix,MdGridListModule,MdGridTile,MdGridList,MdIconModule,MdIconBase,_MdIconMixinBase,MdIcon,getMdIconNameNotFoundError,getMdIconNoHttpProviderError,getMdIconFailedToSanitizeError,MdIconRegistry,ICON_REGISTRY_PROVIDER_FACTORY,ICON_REGISTRY_PROVIDER,MdInputModule,MdTextareaAutosize,MdInput,getMdInputUnsupportedTypeError,MdListModule,MdListBase,_MdListMixinBase,MdListItemBase,_MdListItemMixinBase,MdListDivider,MdList,MdListCssMatStyler,MdNavListCssMatStyler,MdDividerCssMatStyler,MdListAvatarCssMatStyler,MdListIconCssMatStyler,MdListSubheaderCssMatStyler,MdListItem,MdSelectionListBase,_MdSelectionListMixinBase,MdSelectionListOptionEvent,MdListOption,MdSelectionList,MdMenuModule,fadeInItems,transformMenu,MdMenu,MdMenuDefaultOptions,MD_MENU_DEFAULT_OPTIONS,MdMenuItem,MdMenuTrigger,MdMenuPanel,MenuPositionX,MenuPositionY,MdPaginatorModule,PageEvent,MdPaginator,MdPaginatorIntl,MdProgressBarModule,MdProgressBar,MdProgressSpinnerModule,PROGRESS_SPINNER_STROKE_WIDTH,ProgressSpinnerMode,MdProgressSpinnerCssMatStyler,MdProgressSpinnerBase,_MdProgressSpinnerMixinBase,MdProgressSpinner,MdSpinner,MdRadioModule,MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,MdRadioChange,MdRadioGroupBase,_MdRadioGroupMixinBase,MdRadioGroup,MdRadioButtonBase,_MdRadioButtonMixinBase,MdRadioButton,MdSelectModule,fadeInContent,transformPanel,transformPlaceholder,SELECT_ITEM_HEIGHT,SELECT_PANEL_MAX_HEIGHT,SELECT_MAX_OPTIONS_DISPLAYED,SELECT_TRIGGER_HEIGHT,SELECT_OPTION_HEIGHT_ADJUSTMENT,SELECT_PANEL_PADDING_X,SELECT_PANEL_INDENT_PADDING_X,SELECT_MULTIPLE_PANEL_PADDING_X,SELECT_PANEL_PADDING_Y,SELECT_PANEL_VIEWPORT_PADDING,MD_SELECT_SCROLL_STRATEGY,MD_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_SELECT_SCROLL_STRATEGY_PROVIDER,MdSelectChange,MdSelectBase,_MdSelectMixinBase,MdSelectTrigger,MdSelect,MdSidenavModule,throwMdDuplicatedDrawerError,MdDrawerToggleResult,MdDrawer,MdDrawerContainer,MdSidenav,MdSidenavContainer,MdSliderModule,MD_SLIDER_VALUE_ACCESSOR,MdSliderChange,MdSliderBase,_MdSliderMixinBase,MdSlider,MdSlideToggleModule,MD_SLIDE_TOGGLE_VALUE_ACCESSOR,MdSlideToggleChange,MdSlideToggleBase,_MdSlideToggleMixinBase,MdSlideToggle,MdSnackBarModule,MdSnackBar,SnackBarState,SHOW_ANIMATION,HIDE_ANIMATION,MdSnackBarContainer,MD_SNACK_BAR_DATA,MdSnackBarConfig,MdSnackBarRef,SimpleSnackBar,MdSortModule,SortDirection,MdSortHeader,MdSortHeaderIntl,MdSortable,Sort,MdSort,MdTableModule,_MdCellDef,_MdHeaderCellDef,_MdColumnDef,_MdHeaderCell,_MdCell,MdCellDef,MdHeaderCellDef,MdColumnDef,MdHeaderCell,MdCell,_MdTable,MdTable,_MdHeaderRowDef,_MdCdkRowDef,_MdHeaderRow,_MdRow,MdHeaderRowDef,MatHeaderRowDef,MdRowDef,MatRowDef,MdHeaderRow,MdRow,MdTabsModule,MdInkBar,MdTabBody,MdTabBodyOriginState,MdTabBodyPositionState,MdTabHeader,ScrollDirection,MdTabLabelWrapper,MdTab,MdTabLabel,MdTabNav,MdTabLink,MdTabChangeEvent,MdTabHeaderPosition,MdTabGroupBase,_MdTabGroupMixinBase,MdTabGroup,MdTabNavBase,_MdTabNavMixinBase,MdTabLinkBase,_MdTabLinkMixinBase,MdToolbarModule,MdToolbarRow,MdToolbarBase,_MdToolbarMixinBase,MdToolbar,MdTooltipModule,TooltipPosition,TOUCHEND_HIDE_DELAY,SCROLL_THROTTLE_MS,TOOLTIP_PANEL_CLASS,getMdTooltipInvalidPositionError,MD_TOOLTIP_SCROLL_STRATEGY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER,MdTooltip,TooltipVisibility,TooltipComponent} from './public_api';\n\nexport {mixinColor as ɵv} from './core/common-behaviors/color';\nexport {mixinDisableRipple as ɵw} from './core/common-behaviors/disable-ripple';\nexport {mixinDisabled as ɵu} from './core/common-behaviors/disabled';\nexport {UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY as ɵb} from './core/coordination/unique-selection-dispatcher';\nexport {MdDateFormats as ɵx} from './core/datetime/date-formats';\nexport {RippleRenderer as ɵa} from './core/ripple/ripple-renderer';\nexport {AccordionItemBase as ɵc,_AccordionItemMixinBase as ɵd} from './expansion/accordion-item';\nexport {EXPANSION_PANEL_ANIMATION_TIMING as ɵe} from './expansion/expansion-panel';\nexport {MdGridAvatarCssMatStyler as ɵg,MdGridTileFooterCssMatStyler as ɵi,MdGridTileHeaderCssMatStyler as ɵh,MdGridTileText as ɵf} from './grid-list/grid-tile';\nexport {MdMenuItemBase as ɵj,_MdMenuItemMixinBase as ɵk} from './menu/menu-item';\nexport {MD_MENU_SCROLL_STRATEGY as ɵl,MD_MENU_SCROLL_STRATEGY_PROVIDER as ɵn,MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵm} from './menu/menu-trigger';\nexport {MdTabBase as ɵs,_MdTabMixinBase as ɵt} from './tabs/tab';\nexport {MdTabHeaderBase as ɵo,_MdTabHeaderMixinBase as ɵp} from './tabs/tab-header';\nexport {MdTabLabelWrapperBase as ɵq,_MdTabLabelWrapperMixinBase as ɵr} from './tabs/tab-label-wrapper';","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\n\nimport {MdCommonModule, MdRippleModule} from './core';\nimport {MdButtonToggleModule} from './button-toggle/index';\nimport {MdButtonModule} from './button/index';\nimport {MdCheckboxModule} from './checkbox/index';\nimport {MdRadioModule} from './radio/index';\nimport {MdSelectModule} from './select/index';\nimport {MdSlideToggleModule} from './slide-toggle/index';\nimport {MdSliderModule} from './slider/index';\nimport {MdSidenavModule} from './sidenav/index';\nimport {MdListModule} from './list/index';\nimport {MdGridListModule} from './grid-list/index';\nimport {MdCardModule} from './card/index';\nimport {MdChipsModule} from './chips/index';\nimport {MdIconModule} from './icon/index';\nimport {MdProgressSpinnerModule} from './progress-spinner/index';\nimport {MdProgressBarModule} from './progress-bar/index';\nimport {MdInputModule} from './input/index';\nimport {MdSnackBarModule} from './snack-bar/index';\nimport {MdTabsModule} from './tabs/index';\nimport {MdToolbarModule} from './toolbar/index';\nimport {MdTooltipModule} from './tooltip/index';\nimport {MdMenuModule} from './menu/index';\nimport {MdDialogModule} from './dialog/index';\nimport {PlatformModule} from './core/platform/index';\nimport {MdAutocompleteModule} from './autocomplete/index';\nimport {StyleModule} from './core/style/index';\nimport {MdDatepickerModule} from './datepicker/index';\nimport {MdExpansionModule} from './expansion/index';\nimport {MdTableModule} from './table/index';\nimport {MdSortModule} from './sort/index';\nimport {MdPaginatorModule} from './paginator/index';\nimport {MdFormFieldModule} from './form-field/index';\n\nconst /** @type {?} */ MATERIAL_MODULES = [\n  MdAutocompleteModule,\n  MdButtonModule,\n  MdButtonToggleModule,\n  MdCardModule,\n  MdChipsModule,\n  MdCheckboxModule,\n  MdDatepickerModule,\n  MdTableModule,\n  MdDialogModule,\n  MdExpansionModule,\n  MdFormFieldModule,\n  MdGridListModule,\n  MdIconModule,\n  MdInputModule,\n  MdListModule,\n  MdMenuModule,\n  MdPaginatorModule,\n  MdProgressBarModule,\n  MdProgressSpinnerModule,\n  MdRadioModule,\n  MdRippleModule,\n  MdSelectModule,\n  MdSidenavModule,\n  MdSliderModule,\n  MdSlideToggleModule,\n  MdSnackBarModule,\n  MdSortModule,\n  MdTabsModule,\n  MdToolbarModule,\n  MdTooltipModule,\n  OverlayModule,\n  PortalModule,\n  BidiModule,\n  StyleModule,\n  A11yModule,\n  PlatformModule,\n  MdCommonModule,\n  ObserversModule\n];\n/**\n * @deprecated\n */\nexport class MaterialModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: MATERIAL_MODULES,\n  exports: MATERIAL_MODULES,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MaterialModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMaterialModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMaterialModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdButtonModule} from '../button/index';\nimport {MdSelectModule} from '../select/index';\nimport {MdPaginator} from './paginator';\nimport {MdPaginatorIntl} from './paginator-intl';\nimport {MdTooltipModule} from '../tooltip/index';\nexport class MdPaginatorModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    MdButtonModule,\n    MdSelectModule,\n    MdTooltipModule,\n  ],\n  exports: [MdPaginator],\n  declarations: [MdPaginator],\n  providers: [MdPaginatorIntl],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdPaginatorModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPaginatorModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPaginatorModule.ctorParameters;\n}\n\n\n\nexport {PageEvent,MdPaginator} from './paginator';\nexport {MdPaginatorIntl} from './paginator-intl';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {MdPaginatorIntl} from './paginator-intl';\nimport {MATERIAL_COMPATIBILITY_MODE} from '../core';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * The default page size if there is no page size and there are no provided page size options.\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nexport class PageEvent {\n/**\n * The current page index.\n */\npageIndex: number;\n/**\n * The current page size\n */\npageSize: number;\n/**\n * The current total number of items being paged\n */\nlength: number;\n}\n\nfunction PageEvent_tsickle_Closure_declarations() {\n/**\n * The current page index.\n * @type {?}\n */\nPageEvent.prototype.pageIndex;\n/**\n * The current page size\n * @type {?}\n */\nPageEvent.prototype.pageSize;\n/**\n * The current total number of items being paged\n * @type {?}\n */\nPageEvent.prototype.length;\n}\n\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nexport class MdPaginator implements OnInit, OnDestroy {\nprivate _initialized: boolean;\nprivate _intlChanges: Subscription;\n/**\n * The zero-based page index of the displayed list of items. Defaulted to 0.\n * @return {?}\n */\nget pageIndex(): number { return this._pageIndex; }\n/**\n * @param {?} pageIndex\n * @return {?}\n */\nset pageIndex(pageIndex: number) {\n    this._pageIndex = pageIndex;\n    this._changeDetectorRef.markForCheck();\n  }\n  _pageIndex: number = 0;\n/**\n * The length of the total number of items that are being paginated. Defaulted to 0.\n * @return {?}\n */\nget length(): number { return this._length; }\n/**\n * @param {?} length\n * @return {?}\n */\nset length(length: number) {\n    this._length = length;\n    this._changeDetectorRef.markForCheck();\n  }\n  _length: number = 0;\n/**\n * Number of items to display on a page. By default set to 50.\n * @return {?}\n */\nget pageSize(): number { return this._pageSize; }\n/**\n * @param {?} pageSize\n * @return {?}\n */\nset pageSize(pageSize: number) {\n    this._pageSize = pageSize;\n    this._updateDisplayedPageSizeOptions();\n  }\nprivate _pageSize: number;\n/**\n * The set of provided page size options to display to the user.\n * @return {?}\n */\nget pageSizeOptions(): number[] { return this._pageSizeOptions; }\n/**\n * @param {?} pageSizeOptions\n * @return {?}\n */\nset pageSizeOptions(pageSizeOptions: number[]) {\n    this._pageSizeOptions = pageSizeOptions;\n    this._updateDisplayedPageSizeOptions();\n  }\nprivate _pageSizeOptions: number[] = [];\n/**\n * Event emitted when the paginator changes the page size or page index.\n */\npage = new EventEmitter<PageEvent>();\n/**\n * Displayed set of page size options. Will be sorted and include current page size.\n */\n_displayedPageSizeOptions: number[];\n/**\n * @param {?} _intl\n * @param {?} _changeDetectorRef\n */\nconstructor(public _intl: MdPaginatorIntl,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._initialized = true;\n    this._updateDisplayedPageSizeOptions();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n/**\n * Advances to the next page if it exists.\n * @return {?}\n */\nnextPage() {\n    if (!this.hasNextPage()) { return; }\n    this.pageIndex++;\n    this._emitPageEvent();\n  }\n/**\n * Move back to the previous page if it exists.\n * @return {?}\n */\npreviousPage() {\n    if (!this.hasPreviousPage()) { return; }\n    this.pageIndex--;\n    this._emitPageEvent();\n  }\n/**\n * Whether there is a previous page.\n * @return {?}\n */\nhasPreviousPage() {\n    return this.pageIndex >= 1 && this.pageSize != 0;\n  }\n/**\n * Whether there is a next page.\n * @return {?}\n */\nhasNextPage() {\n    const /** @type {?} */ numberOfPages = Math.ceil(this.length / this.pageSize) - 1;\n    return this.pageIndex < numberOfPages && this.pageSize != 0;\n  }\n/**\n * Changes the page size so that the first item displayed on the page will still be\n * displayed using the new page size.\n * \n * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n * switching so that the page size is 5 will set the third page as the current page so\n * that the 10th item will still be displayed.\n * @param {?} pageSize\n * @return {?}\n */\n_changePageSize(pageSize: number) {\n    // Current page needs to be updated to reflect the new page size. Navigate to the page\n    // containing the previous page's first item.\n    const /** @type {?} */ startIndex = this.pageIndex * this.pageSize;\n    this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n\n    this.pageSize = pageSize;\n    this._emitPageEvent();\n  }\n/**\n * Updates the list of page size options to display to the user. Includes making sure that\n * the page size is an option and that the list is sorted.\n * @return {?}\n */\nprivate _updateDisplayedPageSizeOptions() {\n    if (!this._initialized) { return; }\n\n    // If no page size is provided, use the first page size option or the default page size.\n    if (!this.pageSize) {\n      this._pageSize = this.pageSizeOptions.length != 0 ?\n          this.pageSizeOptions[0] :\n          DEFAULT_PAGE_SIZE;\n    }\n\n    this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n    if (this._displayedPageSizeOptions.indexOf(this.pageSize) == -1) {\n      this._displayedPageSizeOptions.push(this.pageSize);\n    }\n\n    // Sort the numbers using a number-specific sort function.\n    this._displayedPageSizeOptions.sort((a, b) => a - b);\n\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Emits an event notifying that a change of the paginator's properties has been triggered.\n * @return {?}\n */\nprivate _emitPageEvent() {\n    this.page.next({\n      pageIndex: this.pageIndex,\n      pageSize: this.pageSize,\n      length: this.length\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-paginator, mat-paginator',\n  templateUrl: 'paginator.html',\n  styleUrls: ['paginator.css'],\n  host: {\n    'class': 'mat-paginator',\n  },\n  providers: [\n    {provide: MATERIAL_COMPATIBILITY_MODE, useValue: false}\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdPaginatorIntl, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'pageIndex': [{ type: Input },],\n'length': [{ type: Input },],\n'pageSize': [{ type: Input },],\n'pageSizeOptions': [{ type: Input },],\n'page': [{ type: Output },],\n};\n}\n\nfunction MdPaginator_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPaginator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPaginator.ctorParameters;\n/** @type {?} */\nMdPaginator.propDecorators;\n/** @type {?} */\nMdPaginator.prototype._initialized;\n/** @type {?} */\nMdPaginator.prototype._intlChanges;\n/** @type {?} */\nMdPaginator.prototype._pageIndex;\n/** @type {?} */\nMdPaginator.prototype._length;\n/** @type {?} */\nMdPaginator.prototype._pageSize;\n/** @type {?} */\nMdPaginator.prototype._pageSizeOptions;\n/**\n * Event emitted when the paginator changes the page size or page index.\n * @type {?}\n */\nMdPaginator.prototype.page;\n/**\n * Displayed set of page size options. Will be sorted and include current page size.\n * @type {?}\n */\nMdPaginator.prototype._displayedPageSizeOptions;\n/** @type {?} */\nMdPaginator.prototype._intl;\n/** @type {?} */\nMdPaginator.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\n/**\n * To modify the labels and text displayed, create a new instance of MdPaginatorIntl and\n * include it in a custom provider\n */\nexport class MdPaginatorIntl {\n/**\n * Stream that emits whenever the labels here are changed. Use this to notify\n * components if the labels have changed after initialization.\n */\nchanges: Subject<void> = new Subject<void>();\n/**\n * A label for the page size selector.\n */\nitemsPerPageLabel = 'Items per page:';\n/**\n * A label for the button that increments the current page.\n */\nnextPageLabel = 'Next page';\n/**\n * A label for the button that decrements the current page.\n */\npreviousPageLabel = 'Previous page';\n/**\n * A label for the range of items within the current page and the length of the whole list.\n */\ngetRangeLabel = (page: number, pageSize: number, length: number) => {\n    if (length == 0 || pageSize == 0) { return `0 of ${length}`; }\n\n    length = Math.max(length, 0);\n\n    const startIndex = page * pageSize;\n\n    // If the start index exceeds the list length, do not try and fix the end index to the end.\n    const endIndex = startIndex < length ?\n        Math.min(startIndex + pageSize, length) :\n        startIndex + pageSize;\n\n    return `${startIndex + 1} - ${endIndex} of ${length}`;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdPaginatorIntl_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPaginatorIntl.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPaginatorIntl.ctorParameters;\n/**\n * Stream that emits whenever the labels here are changed. Use this to notify\n * components if the labels have changed after initialization.\n * @type {?}\n */\nMdPaginatorIntl.prototype.changes;\n/**\n * A label for the page size selector.\n * @type {?}\n */\nMdPaginatorIntl.prototype.itemsPerPageLabel;\n/**\n * A label for the button that increments the current page.\n * @type {?}\n */\nMdPaginatorIntl.prototype.nextPageLabel;\n/**\n * A label for the button that decrements the current page.\n * @type {?}\n */\nMdPaginatorIntl.prototype.previousPageLabel;\n/**\n * A label for the range of items within the current page and the length of the whole list.\n * @type {?}\n */\nMdPaginatorIntl.prototype.getRangeLabel;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdSortHeader} from './sort-header';\nimport {MdSort} from './sort';\nimport {MdSortHeaderIntl} from './sort-header-intl';\nimport {CommonModule} from '@angular/common';\n\nexport {SortDirection} from './sort-direction';\nexport {MdSortHeader} from './sort-header';\nexport {MdSortHeaderIntl} from './sort-header-intl';\nexport {MdSortable,Sort,MdSort} from './sort';\nexport class MdSortModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  exports: [MdSort, MdSortHeader],\n  declarations: [MdSort, MdSortHeader],\n  providers: [MdSortHeaderIntl]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSortModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSortModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSortModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CdkColumnDef} from '@angular/cdk/table';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {MdSort, MdSortable} from './sort';\nimport {MdSortHeaderIntl} from './sort-header-intl';\nimport {getMdSortHeaderNotContainedWithinMdSortError} from './sort-errors';\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n * \n * Must be provided with an id and contained within a parent MdSort directive.\n * \n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nexport class MdSortHeader implements MdSortable {\nprivate _rerenderSubscription: Subscription;\n/**\n * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n * the column's name.\n */\nid: string;\n/**\n * Sets the position of the arrow that displays when sorted.\n */\narrowPosition: 'before' | 'after' = 'after';\n/**\n * Overrides the sort start value of the containing MdSort for this MdSortable.\n */\nstart: 'asc' | 'desc';\n/**\n * Overrides the disable clear value of the containing MdSort for this MdSortable.\n * @return {?}\n */\nget disableClear() { return this._disableClear; }\n/**\n * @param {?} v\n * @return {?}\n */\nset disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\nprivate _disableClear: boolean;\n/**\n * @return {?}\n */\nget _id() { return this.id; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _id(v: string) { this.id = v; }\n/**\n * @param {?} _intl\n * @param {?} changeDetectorRef\n * @param {?} _sort\n * @param {?} _cdkColumnDef\n */\nconstructor(public _intl: MdSortHeaderIntl,\n              changeDetectorRef: ChangeDetectorRef,\npublic _sort: MdSort,\npublic _cdkColumnDef: CdkColumnDef) {\n    if (!_sort) {\n      throw getMdSortHeaderNotContainedWithinMdSortError();\n    }\n\n    this._rerenderSubscription = merge(_sort.mdSortChange, _intl.changes).subscribe(() => {\n      changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._sort.deregister(this);\n    this._rerenderSubscription.unsubscribe();\n  }\n/**\n * Whether this MdSortHeader is currently sorted in either ascending or descending order.\n * @return {?}\n */\n_isSorted() {\n    return this._sort.active == this.id && this._sort.direction;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-sort-header], [mat-sort-header]',\n  templateUrl: 'sort-header.html',\n  styleUrls: ['sort-header.css'],\n  host: {\n    '(click)': '_sort.sort(this)',\n    '[class.mat-sort-header-sorted]': '_isSorted()',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdSortHeaderIntl, },\n{type: ChangeDetectorRef, },\n{type: MdSort, decorators: [{ type: Optional }, ]},\n{type: CdkColumnDef, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input, args: ['md-sort-header', ] },],\n'arrowPosition': [{ type: Input },],\n'start': [{ type: Input, args: ['start', ] },],\n'disableClear': [{ type: Input },],\n'_id': [{ type: Input, args: ['mat-sort-header', ] },],\n};\n}\n\nfunction MdSortHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSortHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSortHeader.ctorParameters;\n/** @type {?} */\nMdSortHeader.propDecorators;\n/** @type {?} */\nMdSortHeader.prototype._rerenderSubscription;\n/**\n * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n * the column's name.\n * @type {?}\n */\nMdSortHeader.prototype.id;\n/**\n * Sets the position of the arrow that displays when sorted.\n * @type {?}\n */\nMdSortHeader.prototype.arrowPosition;\n/**\n * Overrides the sort start value of the containing MdSort for this MdSortable.\n * @type {?}\n */\nMdSortHeader.prototype.start;\n/** @type {?} */\nMdSortHeader.prototype._disableClear;\n/** @type {?} */\nMdSortHeader.prototype._intl;\n/** @type {?} */\nMdSortHeader.prototype._sort;\n/** @type {?} */\nMdSortHeader.prototype._cdkColumnDef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {SortDirection} from './sort-direction';\n/**\n * To modify the labels and text displayed, create a new instance of MdSortHeaderIntl and\n * include it in a custom provider.\n */\nexport class MdSortHeaderIntl {\n/**\n * Stream that emits whenever the labels here are changed. Use this to notify\n * components if the labels have changed after initialization.\n */\nchanges: Subject<void> = new Subject<void>();\n/**\n * ARIA label for the sorting button.\n */\nsortButtonLabel = (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n/**\n * A label to describe the current sort (visible only to screenreaders).\n */\nsortDescriptionLabel = (id: string, direction: SortDirection) => {\n    return `Sorted by ${id} ${direction == 'asc' ? 'ascending' : 'descending'}`;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSortHeaderIntl_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSortHeaderIntl.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSortHeaderIntl.ctorParameters;\n/**\n * Stream that emits whenever the labels here are changed. Use this to notify\n * components if the labels have changed after initialization.\n * @type {?}\n */\nMdSortHeaderIntl.prototype.changes;\n/**\n * ARIA label for the sorting button.\n * @type {?}\n */\nMdSortHeaderIntl.prototype.sortButtonLabel;\n/**\n * A label to describe the current sort (visible only to screenreaders).\n * @type {?}\n */\nMdSortHeaderIntl.prototype.sortDescriptionLabel;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, EventEmitter, Input, Output} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SortDirection} from './sort-direction';\nimport {getMdSortDuplicateMdSortableIdError, getMdSortHeaderMissingIdError} from './sort-errors';\n\nexport interface MdSortable {\n  id: string;\n  start: 'asc' | 'desc';\n  disableClear: boolean;\n}\n\nexport interface Sort {\n  active: string;\n  direction: SortDirection;\n}\n/**\n * Container for MdSortables to manage the sort state and provide default sort parameters.\n */\nexport class MdSort {\n/**\n * Collection of all registered sortables that this directive manages.\n */\nsortables = new Map<string, MdSortable>();\n/**\n * The id of the most recently sorted MdSortable.\n */\nactive: string;\n/**\n * The direction to set when an MdSortable is initially sorted.\n * May be overriden by the MdSortable's sort start.\n */\nstart: 'asc' | 'desc' = 'asc';\n/**\n * The sort direction of the currently active MdSortable.\n */\ndirection: SortDirection = '';\n/**\n * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n * May be overriden by the MdSortable's disable clear input.\n * @return {?}\n */\nget disableClear() { return this._disableClear; }\n/**\n * @param {?} v\n * @return {?}\n */\nset disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\nprivate _disableClear: boolean;\n/**\n * @return {?}\n */\nget _matSortActive() { return this.active; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matSortActive(v) { this.active = v; }\n/**\n * @return {?}\n */\nget _matSortStart() { return this.start; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matSortStart(v) { this.start = v; }\n/**\n * @return {?}\n */\nget _matSortDirection() { return this.direction; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matSortDirection(v) { this.direction = v; }\n/**\n * @return {?}\n */\nget _matSortDisableClear() { return this.disableClear; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matSortDisableClear(v) { this.disableClear = v; }\n/**\n * Event emitted when the user changes either the active sort or sort direction.\n */\nmdSortChange = new EventEmitter<Sort>();\n/**\n * Register function to be used by the contained MdSortables. Adds the MdSortable to the\n * collection of MdSortables.\n * @param {?} sortable\n * @return {?}\n */\nregister(sortable: MdSortable) {\n    if (!sortable.id) {\n      throw getMdSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id)) {\n      throw getMdSortDuplicateMdSortableIdError(sortable.id);\n    }\n    this.sortables.set(sortable.id, sortable);\n  }\n/**\n * Unregister function to be used by the contained MdSortables. Removes the MdSortable from the\n * collection of contained MdSortables.\n * @param {?} sortable\n * @return {?}\n */\nderegister(sortable: MdSortable) {\n    this.sortables.delete(sortable.id);\n  }\n/**\n * Sets the active sort id and determines the new sort direction.\n * @param {?} sortable\n * @return {?}\n */\nsort(sortable: MdSortable) {\n    if (this.active != sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.mdSortChange.next({active: this.active, direction: this.direction});\n  }\n/**\n * Returns the next sort direction of the active sortable, checking for potential overrides.\n * @param {?} sortable\n * @return {?}\n */\ngetNextSortDirection(sortable: MdSortable): SortDirection {\n    if (!sortable) { return ''; }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const /** @type {?} */ disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    let /** @type {?} */ sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let /** @type {?} */ nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) { nextDirectionIndex = 0; }\n    return sortDirectionCycle[nextDirectionIndex];\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdSort], [matSort]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input, args: ['mdSortActive', ] },],\n'start': [{ type: Input, args: ['mdSortStart', ] },],\n'direction': [{ type: Input, args: ['mdSortDirection', ] },],\n'disableClear': [{ type: Input, args: ['mdSortDisableClear', ] },],\n'_matSortActive': [{ type: Input, args: ['matSortActive', ] },],\n'_matSortStart': [{ type: Input, args: ['matSortStart', ] },],\n'_matSortDirection': [{ type: Input, args: ['matSortDirection', ] },],\n'_matSortDisableClear': [{ type: Input, args: ['matSortDisableClear', ] },],\n'mdSortChange': [{ type: Output },],\n};\n}\n\nfunction MdSort_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSort.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSort.ctorParameters;\n/** @type {?} */\nMdSort.propDecorators;\n/**\n * Collection of all registered sortables that this directive manages.\n * @type {?}\n */\nMdSort.prototype.sortables;\n/**\n * The id of the most recently sorted MdSortable.\n * @type {?}\n */\nMdSort.prototype.active;\n/**\n * The direction to set when an MdSortable is initially sorted.\n * May be overriden by the MdSortable's sort start.\n * @type {?}\n */\nMdSort.prototype.start;\n/**\n * The sort direction of the currently active MdSortable.\n * @type {?}\n */\nMdSort.prototype.direction;\n/** @type {?} */\nMdSort.prototype._disableClear;\n/**\n * Event emitted when the user changes either the active sort or sort direction.\n * @type {?}\n */\nMdSort.prototype.mdSortChange;\n}\n\n/**\n * Returns the sort direction cycle to use given the provided parameters of order and clear.\n * @param {?} start\n * @param {?} disableClear\n * @return {?}\n */\nfunction getSortDirectionCycle(start: 'asc' | 'desc',\n                               disableClear: boolean): SortDirection[] {\n  let /** @type {?} */ sortOrder: SortDirection[] = ['asc', 'desc'];\n  if (start == 'desc') { sortOrder.reverse(); }\n  if (!disableClear) { sortOrder.push(''); }\n\n  return sortOrder;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * \\@docs-private\n * @param {?} id\n * @return {?}\n */\nexport function getMdSortDuplicateMdSortableIdError(id: string): Error {\n  return Error(`Cannot have two MdSortables with the same id (${id}).`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nexport function getMdSortHeaderNotContainedWithinMdSortError(): Error {\n  return Error(`MdSortHeader must be placed within a parent element with the MdSort directive.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nexport function getMdSortHeaderMissingIdError(): Error {\n  return Error(`MdSortHeader must be provided with a unique id.`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdTable} from './table';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {MdCell, MdHeaderCell, MdCellDef, MdHeaderCellDef, MdColumnDef} from './cell';\nimport {MdHeaderRow, MdRow, MdHeaderRowDef, MdRowDef, MatHeaderRowDef, MatRowDef} from './row';\nimport {CommonModule} from '@angular/common';\nimport {MdCommonModule} from '../core';\n\nexport {_MdCellDef,_MdHeaderCellDef,_MdColumnDef,_MdHeaderCell,_MdCell,MdCellDef,MdHeaderCellDef,MdColumnDef,MdHeaderCell,MdCell} from './cell';\nexport {_MdTable,MdTable} from './table';\nexport {_MdHeaderRowDef,_MdCdkRowDef,_MdHeaderRow,_MdRow,MdHeaderRowDef,MatHeaderRowDef,MdRowDef,MatRowDef,MdHeaderRow,MdRow} from './row';\nexport class MdTableModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CdkTableModule, CommonModule, MdCommonModule],\n  exports: [MdTable, MdCellDef, MdHeaderCellDef, MdColumnDef,\n    MdHeaderRowDef, MdRowDef,\n    MdHeaderCell, MdCell, MdHeaderRow, MdRow,\n    MatHeaderRowDef, MatRowDef],\n  declarations: [MdTable, MdCellDef, MdHeaderCellDef, MdColumnDef,\n    MdHeaderRowDef, MdRowDef,\n    MdHeaderCell, MdCell, MdHeaderRow, MdRow,\n    MatHeaderRowDef, MatRowDef],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTableModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTableModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTableModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectionStrategy, Component, Directive, ViewEncapsulation} from '@angular/core';\nimport {\n  CdkHeaderRow,\n  CdkRow,\n  CDK_ROW_TEMPLATE,\n  CdkRowDef,\n  CdkHeaderRowDef,\n} from '@angular/cdk/table';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _MdHeaderRowDef = CdkHeaderRowDef;\nexport const /** @type {?} */ _MdCdkRowDef = CdkRowDef;\nexport const /** @type {?} */ _MdHeaderRow = CdkHeaderRow;\nexport const /** @type {?} */ _MdRow = CdkRow;\n/**\n * Header row definition for the md-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nexport class MdHeaderRowDef extends _MdHeaderRowDef { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: MdHeaderRowDef}],\n  inputs: ['columns: mdHeaderRowDef'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdHeaderRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nMdHeaderRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdHeaderRowDef.ctorParameters;\n}\n\n/**\n * Mat-compatible version of MdHeaderRowDef\n */\nexport class MatHeaderRowDef extends _MdHeaderRowDef { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[matHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef}],\n  inputs: ['columns: matHeaderRowDef'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatHeaderRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nMatHeaderRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatHeaderRowDef.ctorParameters;\n}\n\n/**\n * Data row definition for the md-table.\n * Captures the header row's template and other row properties such as the columns to display.\n */\nexport class MdRowDef extends _MdCdkRowDef { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: MdRowDef}],\n  inputs: ['columns: mdRowDefColumns'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRowDef.ctorParameters;\n}\n\n/**\n * Mat-compatible version of MdRowDef\n */\nexport class MatRowDef extends _MdCdkRowDef { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[matRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: MatRowDef}],\n  inputs: ['columns: matRowDefColumns'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MatRowDef_tsickle_Closure_declarations() {\n/** @type {?} */\nMatRowDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatRowDef.ctorParameters;\n}\n\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nexport class MdHeaderRow extends _MdHeaderRow { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'md-header-row, mat-header-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-header-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdHeaderRow_tsickle_Closure_declarations() {\n/** @type {?} */\nMdHeaderRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdHeaderRow.ctorParameters;\n}\n\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nexport class MdRow extends _MdRow { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'md-row, mat-row',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-row',\n    'role': 'row',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRow_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRow.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Input, Renderer2} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _MdCellDef = CdkCellDef;\nexport const /** @type {?} */ _MdHeaderCellDef = CdkHeaderCellDef;\nexport const /** @type {?} */ _MdColumnDef = CdkColumnDef;\nexport const /** @type {?} */ _MdHeaderCell = CdkHeaderCell;\nexport const /** @type {?} */ _MdCell = CdkCell;\n/**\n * Cell definition for the md-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nexport class MdCellDef extends _MdCellDef { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdCellDef], [matCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: MdCellDef}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCellDef_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCellDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCellDef.ctorParameters;\n}\n\n/**\n * Header cell definition for the md-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nexport class MdHeaderCellDef extends _MdHeaderCellDef { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdHeaderCellDef], [matHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: MdHeaderCellDef}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdHeaderCellDef_tsickle_Closure_declarations() {\n/** @type {?} */\nMdHeaderCellDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdHeaderCellDef.ctorParameters;\n}\n\n/**\n * Column definition for the md-table.\n * Defines a set of cells available for a table column.\n */\nexport class MdColumnDef extends _MdColumnDef {\n/**\n * Unique name for this column.\n */\nname: string;\n/**\n * @return {?}\n */\nget _matColumnDefName() { return this.name; }\n/**\n * @param {?} name\n * @return {?}\n */\nset _matColumnDefName(name) { this.name = name; }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdColumnDef], [matColumnDef]',\n  providers: [{provide: CdkColumnDef, useExisting: MdColumnDef}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['mdColumnDef', ] },],\n'_matColumnDefName': [{ type: Input, args: ['matColumnDef', ] },],\n};\n}\n\nfunction MdColumnDef_tsickle_Closure_declarations() {\n/** @type {?} */\nMdColumnDef.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdColumnDef.ctorParameters;\n/** @type {?} */\nMdColumnDef.propDecorators;\n/**\n * Unique name for this column.\n * @type {?}\n */\nMdColumnDef.prototype.name;\n}\n\n/**\n * Header cell template container that adds the right classes and role.\n */\nexport class MdHeaderCell extends _MdHeaderCell {\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef,\n              renderer: Renderer2) {\n    super(columnDef, elementRef, renderer);\n    renderer.addClass(elementRef.nativeElement, `mat-column-${columnDef.cssClassFriendlyName}`);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-header-cell, mat-header-cell',\n  host: {\n    'class': 'mat-header-cell',\n    'role': 'columnheader',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\n}\n\nfunction MdHeaderCell_tsickle_Closure_declarations() {\n/** @type {?} */\nMdHeaderCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdHeaderCell.ctorParameters;\n}\n\n/**\n * Cell template container that adds the right classes and role.\n */\nexport class MdCell extends _MdCell {\n/**\n * @param {?} columnDef\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(columnDef: CdkColumnDef,\n              elementRef: ElementRef,\n              renderer: Renderer2) {\n    super(columnDef, elementRef, renderer);\n    renderer.addClass(elementRef.nativeElement, `mat-column-${columnDef.cssClassFriendlyName}`);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-cell, mat-cell',\n  host: {\n    'class': 'mat-cell',\n    'role': 'gridcell',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkColumnDef, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\n}\n\nfunction MdCell_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCell.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCell.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {CDK_TABLE_TEMPLATE, CdkTable} from '@angular/cdk/table';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _MdTable = CdkTable;\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nexport class MdTable<T> extends _MdTable<T> { static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-table, mat-table',\n  template: CDK_TABLE_TEMPLATE,\n  styleUrls: ['table.css'],\n  host: {\n    'class': 'mat-table',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTable_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTable.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTable.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CompatibilityModule, StyleModule, UNIQUE_SELECTION_DISPATCHER_PROVIDER} from '../core';\nimport {\n  MdExpansionPanelHeader,\n  MdExpansionPanelDescription,\n  MdExpansionPanelTitle\n} from './expansion-panel-header';\nimport {\n  MdExpansionPanel,\n  MdExpansionPanelActionRow,\n} from './expansion-panel';\nimport {\n  CdkAccordion,\n  MdAccordion,\n} from './accordion';\nexport class MdExpansionModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CompatibilityModule, CommonModule, StyleModule],\n  exports: [\n    CdkAccordion,\n    MdAccordion,\n    MdExpansionPanel,\n    MdExpansionPanelActionRow,\n    MdExpansionPanelHeader,\n    MdExpansionPanelTitle,\n    MdExpansionPanelDescription\n  ],\n  declarations: [\n    CdkAccordion,\n    MdAccordion,\n    MdExpansionPanel,\n    MdExpansionPanelActionRow,\n    MdExpansionPanelHeader,\n    MdExpansionPanelTitle,\n    MdExpansionPanelDescription\n  ],\n  providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdExpansionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdExpansionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdExpansionModule.ctorParameters;\n}\n\n\nexport {\n  CdkAccordion,\n  MdAccordion,\n  MdAccordionDisplayMode\n} from './accordion';\nexport {AccordionItem} from './accordion-item';\nexport {\n  MdExpansionPanel,\n  MdExpansionPanelState,\n  MdExpansionPanelActionRow\n} from './expansion-panel';\nexport {\n  MdExpansionPanelHeader,\n  MdExpansionPanelDescription,\n  MdExpansionPanelTitle\n} from './expansion-panel-header';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  Directive,\n  Host,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnDestroy,\n  Renderer2,\n  ElementRef,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\nimport {SPACE, ENTER} from '../core/keyboard/keycodes';\nimport {MdExpansionPanel, EXPANSION_PANEL_ANIMATION_TIMING} from './expansion-panel';\nimport {filter} from '../core/rxjs/index';\nimport {FocusOriginMonitor} from '../core/style/index';\nimport {merge} from 'rxjs/observable/merge';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * <md-expansion-panel-header> component.\n * \n * This component corresponds to the header element of an <md-expansion-panel>.\n * \n * Please refer to README.md for examples on how to use it.\n */\nexport class MdExpansionPanelHeader implements OnDestroy {\nprivate _parentChangeSubscription: Subscription | null = null;\n/**\n * @param {?} panel\n * @param {?} _renderer\n * @param {?} _element\n * @param {?} _focusOriginMonitor\n * @param {?} _changeDetectorRef\n */\nconstructor(\npublic panel: MdExpansionPanel,\nprivate _renderer: Renderer2,\nprivate _element: ElementRef,\nprivate _focusOriginMonitor: FocusOriginMonitor,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n\n    // Since the toggle state depends on an @Input on the panel, we\n    // need to  subscribe and trigger change detection manually.\n    this._parentChangeSubscription = merge(\n      panel.opened,\n      panel.closed,\n      filter.call(panel._inputChanges, changes => !!(changes.hideToggle || changes.disabled))\n    )\n    .subscribe(() => this._changeDetectorRef.markForCheck());\n\n    _focusOriginMonitor.monitor(_element.nativeElement, _renderer, false);\n  }\n/**\n * Toggles the expanded state of the panel.\n * @return {?}\n */\n_toggle(): void {\n    if (!this.panel.disabled) {\n      this.panel.toggle();\n    }\n  }\n/**\n * Gets whether the panel is expanded.\n * @return {?}\n */\n_isExpanded(): boolean {\n    return this.panel.expanded;\n  }\n/**\n * Gets the expanded state string of the panel.\n * @return {?}\n */\n_getExpandedState(): string {\n    return this.panel._getExpandedState();\n  }\n/**\n * Gets the panel id.\n * @return {?}\n */\n_getPanelId(): string {\n    return this.panel.id;\n  }\n/**\n * Gets whether the expand indicator should be shown.\n * @return {?}\n */\n_showToggle(): boolean {\n    return !this.panel.hideToggle && !this.panel.disabled;\n  }\n/**\n * Handle keyup event calling to toggle() if appropriate.\n * @param {?} event\n * @return {?}\n */\n_keyup(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      // Toggle for space and enter keys.\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this._toggle();\n        break;\n      default:\n        return;\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._parentChangeSubscription) {\n      this._parentChangeSubscription.unsubscribe();\n      this._parentChangeSubscription = null;\n    }\n\n    this._focusOriginMonitor.stopMonitoring(this._element.nativeElement);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-expansion-panel-header, mat-expansion-panel-header',\n  styleUrls: ['./expansion-panel-header.css'],\n  templateUrl: './expansion-panel-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-expansion-panel-header',\n    'role': 'button',\n    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\n    '[attr.aria-controls]': '_getPanelId()',\n    '[attr.aria-expanded]': '_isExpanded()',\n    '[attr.aria-disabled]': 'panel.disabled',\n    '[class.mat-expanded]': '_isExpanded()',\n    '(click)': '_toggle()',\n    '(keyup)': '_keyup($event)',\n    '[@expansionHeight]': '_getExpandedState()',\n  },\n  animations: [\n    trigger('indicatorRotate', [\n      state('collapsed', style({transform: 'rotate(0deg)'})),\n      state('expanded', style({transform: 'rotate(180deg)'})),\n      transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    trigger('expansionHeight', [\n      state('collapsed', style({height: '48px'})),\n      state('expanded', style({height: '64px'})),\n      transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdExpansionPanel, decorators: [{ type: Host }, ]},\n{type: Renderer2, },\n{type: ElementRef, },\n{type: FocusOriginMonitor, },\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction MdExpansionPanelHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nMdExpansionPanelHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdExpansionPanelHeader.ctorParameters;\n/** @type {?} */\nMdExpansionPanelHeader.prototype._parentChangeSubscription;\n/** @type {?} */\nMdExpansionPanelHeader.prototype.panel;\n/** @type {?} */\nMdExpansionPanelHeader.prototype._renderer;\n/** @type {?} */\nMdExpansionPanelHeader.prototype._element;\n/** @type {?} */\nMdExpansionPanelHeader.prototype._focusOriginMonitor;\n/** @type {?} */\nMdExpansionPanelHeader.prototype._changeDetectorRef;\n}\n\n/**\n * <md-panel-description> directive.\n * \n * This direction is to be used inside of the MdExpansionPanelHeader component.\n */\nexport class MdExpansionPanelDescription {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-panel-description, mat-panel-description',\n  host : {\n    class: 'mat-expansion-panel-header-description'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdExpansionPanelDescription_tsickle_Closure_declarations() {\n/** @type {?} */\nMdExpansionPanelDescription.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdExpansionPanelDescription.ctorParameters;\n}\n\n/**\n * <md-panel-title> directive.\n * \n * This direction is to be used inside of the MdExpansionPanelHeader component.\n */\nexport class MdExpansionPanelTitle {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-panel-title, mat-panel-title',\n  host : {\n    class: 'mat-expansion-panel-header-title'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdExpansionPanelTitle_tsickle_Closure_declarations() {\n/** @type {?} */\nMdExpansionPanelTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdExpansionPanelTitle.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  Directive,\n  Host,\n  Input,\n  ViewEncapsulation,\n  Optional,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SimpleChanges,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n} from '@angular/animations';\nimport {MdAccordion} from './accordion';\nimport {AccordionItem} from './accordion-item';\nimport {UniqueSelectionDispatcher} from '../core';\nimport {Subject} from 'rxjs/Subject';\n\n\n/** MdExpansionPanel's states. */\nexport type MdExpansionPanelState = 'expanded' | 'collapsed';\n/**\n * Time and timing curve for expansion panel animations.\n */\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * <md-expansion-panel> component.\n * \n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the CdkAccordion directive attached.\n * \n * Please refer to README.md for examples on how to use it.\n */\nexport class MdExpansionPanel extends AccordionItem implements OnChanges, OnDestroy {\n/**\n * Whether the toggle indicator should be hidden.\n */\nhideToggle: boolean = false;\n/**\n * Stream that emits for changes in `\\@Input` properties.\n */\n_inputChanges = new Subject<SimpleChanges>();\n/**\n * @param {?} accordion\n * @param {?} _changeDetectorRef\n * @param {?} _uniqueSelectionDispatcher\n */\nconstructor(  accordion: MdAccordion,\n              _changeDetectorRef: ChangeDetectorRef,\n              _uniqueSelectionDispatcher: UniqueSelectionDispatcher) {\n    super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n    this.accordion = accordion;\n  }\n/**\n * Whether the expansion indicator should be hidden.\n * @return {?}\n */\n_getHideToggle(): boolean {\n    if (this.accordion) {\n      return this.accordion.hideToggle;\n    }\n    return this.hideToggle;\n  }\n/**\n * Determines whether the expansion panel should have spacing between it and its siblings.\n * @return {?}\n */\n_hasSpacing(): boolean {\n    if (this.accordion) {\n      return (this.expanded ? this.accordion.displayMode : this._getExpandedState()) === 'default';\n    }\n\n    return false;\n  }\n/**\n * Gets the expanded state string.\n * @return {?}\n */\n_getExpandedState(): MdExpansionPanelState {\n    return this.expanded ? 'expanded' : 'collapsed';\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    this._inputChanges.next(changes);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._inputChanges.complete();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  styleUrls: ['./expansion-panel.css'],\n  selector: 'md-expansion-panel, mat-expansion-panel',\n  templateUrl: './expansion-panel.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-expansion-panel',\n    '[class.mat-expanded]': 'expanded',\n    '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n  },\n  providers: [\n    {provide: AccordionItem, useExisting: forwardRef(() => MdExpansionPanel)}\n  ],\n  animations: [\n    trigger('bodyExpansion', [\n      state('collapsed', style({height: '0px', visibility: 'hidden'})),\n      state('expanded', style({height: '*', visibility: 'visible'})),\n      transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdAccordion, decorators: [{ type: Optional }, { type: Host }, ]},\n{type: ChangeDetectorRef, },\n{type: UniqueSelectionDispatcher, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'hideToggle': [{ type: Input },],\n};\n}\n\nfunction MdExpansionPanel_tsickle_Closure_declarations() {\n/** @type {?} */\nMdExpansionPanel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdExpansionPanel.ctorParameters;\n/** @type {?} */\nMdExpansionPanel.propDecorators;\n/**\n * Whether the toggle indicator should be hidden.\n * @type {?}\n */\nMdExpansionPanel.prototype.hideToggle;\n/**\n * Stream that emits for changes in `\\@Input` properties.\n * @type {?}\n */\nMdExpansionPanel.prototype._inputChanges;\n}\n\nexport class MdExpansionPanelActionRow {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'mat-action-row, md-action-row',\n  host: {\n    class: 'mat-action-row'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdExpansionPanelActionRow_tsickle_Closure_declarations() {\n/** @type {?} */\nMdExpansionPanelActionRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdExpansionPanelActionRow.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Output,\n  EventEmitter,\n  Input,\n  Injectable,\n  OnDestroy,\n  Optional,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '../core';\nimport {CdkAccordion} from './accordion';\nimport {mixinDisabled, CanDisable} from '../core/common-behaviors/disabled';\n/**\n * Used to generate unique ID for each expansion panel.\n */\nlet nextId = 0;\n/**\n * \\@docs-private\n */\nexport class AccordionItemBase { }\nexport const /** @type {?} */ _AccordionItemMixinBase = mixinDisabled(AccordionItemBase);\n/**\n * An abstract class to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nexport class AccordionItem extends _AccordionItemMixinBase implements OnDestroy, CanDisable {\n/**\n * Event emitted every time the MdAccordionChild is closed.\n */\nclosed = new EventEmitter<void>();\n/**\n * Event emitted every time the MdAccordionChild is opened.\n */\nopened = new EventEmitter<void>();\n/**\n * Event emitted when the MdAccordionChild is destroyed.\n */\ndestroyed = new EventEmitter<void>();\n/**\n * The unique MdAccordionChild id.\n */\nreadonly id = `cdk-accordion-child-${nextId++}`;\n/**\n * Whether the MdAccordionChild is expanded.\n * @return {?}\n */\nget expanded(): boolean { return this._expanded; }\n/**\n * @param {?} expanded\n * @return {?}\n */\nset expanded(expanded: boolean) {\n    // Only emit events and update the internal value if the value changes.\n    if (this._expanded !== expanded) {\n      this._expanded = expanded;\n      if (expanded) {\n        this.opened.emit();\n/**\n * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n * the name value is the id of the accordion.\n */\nconst accordionId = this.accordion ? this.accordion.id : this.id;\n        this._expansionDispatcher.notify(this.id, accordionId);\n      } else {\n        this.closed.emit();\n      }\n\n      // Ensures that the animation will run when the value is set outside of an `@Input`.\n      // This includes cases like the open, close and toggle methods.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\nprivate _expanded: boolean;\n/**\n * Unregister function for _expansionDispatcher *\n */\nprivate _removeUniqueSelectionListener: () => void = () => {};\n/**\n * @param {?} accordion\n * @param {?} _changeDetectorRef\n * @param {?} _expansionDispatcher\n */\nconstructor(\npublic accordion: CdkAccordion,\nprivate _changeDetectorRef: ChangeDetectorRef,\n              protected _expansionDispatcher: UniqueSelectionDispatcher) {\n\n    super();\n\n    this._removeUniqueSelectionListener =\n      _expansionDispatcher.listen((id: string, accordionId: string) => {\n        if (this.accordion && !this.accordion.multi &&\n            this.accordion.id === accordionId && this.id !== id) {\n          this.expanded = false;\n        }\n      });\n  }\n/**\n * Emits an event for the accordion item being destroyed.\n * @return {?}\n */\nngOnDestroy() {\n    this.destroyed.emit();\n    this._removeUniqueSelectionListener();\n  }\n/**\n * Toggles the expanded state of the accordion item.\n * @return {?}\n */\ntoggle(): void {\n    this.expanded = !this.expanded;\n  }\n/**\n * Sets the expanded state of the accordion item to false.\n * @return {?}\n */\nclose(): void {\n    this.expanded = false;\n  }\n/**\n * Sets the expanded state of the accordion item to true.\n * @return {?}\n */\nopen(): void {\n    this.expanded = true;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CdkAccordion, decorators: [{ type: Optional }, ]},\n{type: ChangeDetectorRef, },\n{type: UniqueSelectionDispatcher, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'closed': [{ type: Output },],\n'opened': [{ type: Output },],\n'destroyed': [{ type: Output },],\n'expanded': [{ type: Input },],\n};\n}\n\nfunction AccordionItem_tsickle_Closure_declarations() {\n/** @type {?} */\nAccordionItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAccordionItem.ctorParameters;\n/** @type {?} */\nAccordionItem.propDecorators;\n/**\n * Event emitted every time the MdAccordionChild is closed.\n * @type {?}\n */\nAccordionItem.prototype.closed;\n/**\n * Event emitted every time the MdAccordionChild is opened.\n * @type {?}\n */\nAccordionItem.prototype.opened;\n/**\n * Event emitted when the MdAccordionChild is destroyed.\n * @type {?}\n */\nAccordionItem.prototype.destroyed;\n/**\n * The unique MdAccordionChild id.\n * @type {?}\n */\nAccordionItem.prototype.id;\n/** @type {?} */\nAccordionItem.prototype._expanded;\n/**\n * Unregister function for _expansionDispatcher *\n * @type {?}\n */\nAccordionItem.prototype._removeUniqueSelectionListener;\n/** @type {?} */\nAccordionItem.prototype.accordion;\n/** @type {?} */\nAccordionItem.prototype._changeDetectorRef;\n/** @type {?} */\nAccordionItem.prototype._expansionDispatcher;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Input} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/** MdAccordion's display modes. */\nexport type MdAccordionDisplayMode = 'default' | 'flat';\n/**\n * Unique ID counter\n */\nlet nextId = 0;\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nexport class CdkAccordion {\n/**\n * A readonly id value to use for unique selection coordination.\n */\nreadonly id = `cdk-accordion-${nextId++}`;\n/**\n * Whether the accordion should allow multiple expanded accordion items simulateously.\n * @return {?}\n */\nget multi(): boolean { return this._multi; }\n/**\n * @param {?} multi\n * @return {?}\n */\nset multi(multi: boolean) { this._multi = coerceBooleanProperty(multi); }\nprivate  _multi: boolean = false;\n/**\n * Whether the expansion indicator should be hidden.\n * @return {?}\n */\nget hideToggle(): boolean { return this._hideToggle; }\n/**\n * @param {?} show\n * @return {?}\n */\nset hideToggle(show: boolean) { this._hideToggle = coerceBooleanProperty(show); }\nprivate  _hideToggle: boolean = false;\n/**\n * The display mode used for all expansion panels in the accordion. Currently two display\n * modes exist:\n *   default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n *     panel at a different elevation from the reset of the accordion.\n *  flat - no spacing is placed around expanded panels, showing all panels at the same\n *     elevation.\n */\ndisplayMode: MdAccordionDisplayMode = 'default';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'cdk-accordion, [cdk-accordion]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'multi': [{ type: Input },],\n'hideToggle': [{ type: Input },],\n'displayMode': [{ type: Input },],\n};\n}\n\nfunction CdkAccordion_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkAccordion.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkAccordion.ctorParameters;\n/** @type {?} */\nCdkAccordion.propDecorators;\n/**\n * A readonly id value to use for unique selection coordination.\n * @type {?}\n */\nCdkAccordion.prototype.id;\n/** @type {?} */\nCdkAccordion.prototype._multi;\n/** @type {?} */\nCdkAccordion.prototype._hideToggle;\n/**\n * The display mode used for all expansion panels in the accordion. Currently two display\n * modes exist:\n *   default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n *     panel at a different elevation from the reset of the accordion.\n *  flat - no spacing is placed around expanded panels, showing all panels at the same\n *     elevation.\n * @type {?}\n */\nCdkAccordion.prototype.displayMode;\n}\n\n/**\n * Directive for a Material Design Accordion.\n */\nexport class MdAccordion extends CdkAccordion {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'mat-accordion, md-accordion',\n  host: {\n    class: 'mat-accordion'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdAccordion_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAccordion.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAccordion.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdMonthView} from './month-view';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {StyleModule} from '../core';\nimport {MdCalendarBody} from './calendar-body';\nimport {MdYearView} from './year-view';\nimport {\n  MdDatepicker,\n  MdDatepickerContent,\n  MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER,\n} from './datepicker';\nimport {MdDatepickerInput} from './datepicker-input';\nimport {MdDialogModule} from '../dialog/index';\nimport {MdCalendar} from './calendar';\nimport {MdDatepickerToggle} from './datepicker-toggle';\nimport {MdButtonModule} from '../button/index';\nimport {MdDatepickerIntl} from './datepicker-intl';\nimport {MdIconModule} from '../icon/index';\n\n\nexport {MdCalendar} from './calendar';\nexport {MdCalendarCell,MdCalendarBody} from './calendar-body';\nexport {MD_DATEPICKER_SCROLL_STRATEGY,MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER,MdDatepickerContent,MdDatepicker} from './datepicker';\nexport {MD_DATEPICKER_VALUE_ACCESSOR,MD_DATEPICKER_VALIDATORS,MdDatepickerInputEvent,MdDatepickerInput} from './datepicker-input';\nexport {MdDatepickerIntl} from './datepicker-intl';\nexport {MdDatepickerToggle} from './datepicker-toggle';\nexport {MdMonthView} from './month-view';\nexport {MdYearView} from './year-view';\nexport class MdDatepickerModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    MdButtonModule,\n    MdDialogModule,\n    MdIconModule,\n    OverlayModule,\n    StyleModule,\n    A11yModule,\n  ],\n  exports: [\n    MdCalendar,\n    MdCalendarBody,\n    MdDatepicker,\n    MdDatepickerContent,\n    MdDatepickerInput,\n    MdDatepickerToggle,\n    MdMonthView,\n    MdYearView,\n  ],\n  declarations: [\n    MdCalendar,\n    MdCalendarBody,\n    MdDatepicker,\n    MdDatepickerContent,\n    MdDatepickerInput,\n    MdDatepickerToggle,\n    MdMonthView,\n    MdYearView,\n  ],\n  providers: [\n    MdDatepickerIntl,\n    MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER,\n  ],\n  entryComponents: [\n    MdDatepickerContent,\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdDatepickerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDatepickerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDatepickerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  ViewEncapsulation,\n  OnDestroy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {MdDatepicker} from './datepicker';\nimport {MdDatepickerIntl} from './datepicker-intl';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Subscription} from 'rxjs/Subscription';\nexport class MdDatepickerToggle<D> implements OnDestroy {\nprivate _intlChanges: Subscription;\n/**\n * Datepicker instance that the button will toggle.\n */\ndatepicker: MdDatepicker<D>;\n/**\n * Whether the toggle button is disabled.\n * @return {?}\n */\nget disabled() {\n    return this._disabled === undefined ? this.datepicker.disabled : this._disabled;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\nprivate _disabled: boolean;\n/**\n * @param {?} _intl\n * @param {?} changeDetectorRef\n */\nconstructor(public _intl: MdDatepickerIntl, changeDetectorRef: ChangeDetectorRef) {\n    this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-datepicker-toggle, mat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  host: {\n    'class': 'mat-datepicker-toggle',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdDatepickerIntl, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'datepicker': [{ type: Input, args: ['for', ] },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction MdDatepickerToggle_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDatepickerToggle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDatepickerToggle.ctorParameters;\n/** @type {?} */\nMdDatepickerToggle.propDecorators;\n/** @type {?} */\nMdDatepickerToggle.prototype._intlChanges;\n/**\n * Datepicker instance that the button will toggle.\n * @type {?}\n */\nMdDatepickerToggle.prototype.datepicker;\n/** @type {?} */\nMdDatepickerToggle.prototype._disabled;\n/** @type {?} */\nMdDatepickerToggle.prototype._intl;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2\n} from '@angular/core';\nimport {MdDatepicker} from './datepicker';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MdFormField} from '../form-field/index';\nimport {DOWN_ARROW} from '../core/keyboard/keycodes';\nimport {DateAdapter} from '../core/datetime/index';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MD_DATE_FORMATS, MdDateFormats} from '../core/datetime/date-formats';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n\nexport const /** @type {?} */ MD_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdDatepickerInput),\n  multi: true\n};\n\n\nexport const /** @type {?} */ MD_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MdDatepickerInput),\n  multi: true\n};\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MdDatepickerInputEvent instead.\n */\nexport class MdDatepickerInputEvent<D> {\n/**\n * The new value for the target datepicker input.\n */\nvalue: D | null;\n/**\n * @param {?} target\n * @param {?} targetElement\n */\nconstructor(public target: MdDatepickerInput<D>,\npublic targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\nfunction MdDatepickerInputEvent_tsickle_Closure_declarations() {\n/**\n * The new value for the target datepicker input.\n * @type {?}\n */\nMdDatepickerInputEvent.prototype.value;\n/** @type {?} */\nMdDatepickerInputEvent.prototype.target;\n/** @type {?} */\nMdDatepickerInputEvent.prototype.targetElement;\n}\n\n/**\n * Directive used to connect an input to a MdDatepicker.\n */\nexport class MdDatepickerInput<D> implements AfterContentInit, ControlValueAccessor, OnDestroy,\n    Validator {\n/**\n * The datepicker that this input is associated with.\n * @param {?} value\n * @return {?}\n */\nset mdDatepicker(value: MdDatepicker<D>) {\n    if (value) {\n      this._datepicker = value;\n      this._datepicker._registerInput(this);\n    }\n  }\n  _datepicker: MdDatepicker<D>;\n/**\n * @param {?} value\n * @return {?}\n */\nset matDatepicker(value: MdDatepicker<D>) { this.mdDatepicker = value; }\n/**\n * @param {?} filter\n * @return {?}\n */\nset mdDatepickerFilter(filter: (date: D | null) => boolean) {\n    this._dateFilter = filter;\n    this._validatorOnChange();\n  }\n  _dateFilter: (date: D | null) => boolean;\n/**\n * @param {?} filter\n * @return {?}\n */\nset matDatepickerFilter(filter: (date: D | null) => boolean) {\n    this.mdDatepickerFilter = filter;\n  }\n/**\n * The value of the input.\n * @return {?}\n */\nget value(): D | null {\n    return this._getValidDateOrNull(this._dateAdapter.parse(\n        this._elementRef.nativeElement.value, this._dateFormats.parse.dateInput));\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: D | null) {\n    if (value != null && !this._dateAdapter.isDateInstance(value)) {\n      throw Error('Datepicker: value not recognized as a date object by DateAdapter.');\n    }\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._getValidDateOrNull(value);\n\n    let /** @type {?} */ oldDate = this.value;\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value',\n        value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '');\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n/**\n * The minimum valid date.\n * @return {?}\n */\nget min(): D | null { return this._min; }\n/**\n * @param {?} value\n * @return {?}\n */\nset min(value: D | null) {\n    this._min = value;\n    this._validatorOnChange();\n  }\nprivate _min: D | null;\n/**\n * The maximum valid date.\n * @return {?}\n */\nget max(): D | null { return this._max; }\n/**\n * @param {?} value\n * @return {?}\n */\nset max(value: D | null) {\n    this._max = value;\n    this._validatorOnChange();\n  }\nprivate _max: D | null;\n/**\n * Whether the datepicker-input is disabled.\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n  }\nprivate _disabled: boolean;\n/**\n * Emits when a `change` event is fired on this `<input>`.\n */\ndateChange = new EventEmitter<MdDatepickerInputEvent<D>>();\n/**\n * Emits when an `input` event is fired on this `<input>`.\n */\ndateInput = new EventEmitter<MdDatepickerInputEvent<D>>();\n/**\n * Emits when the value changes (either due to user input or programmatic change).\n */\n_valueChange = new EventEmitter<D|null>();\n\n  _onTouched = () => {};\nprivate _cvaOnChange: (value: any) => void = () => {};\nprivate _validatorOnChange = () => {};\nprivate _datepickerSubscription: Subscription;\n/**\n * The form control validator for whether the input parses.\n */\nprivate _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'mdDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n/**\n * The form control validator for the min date.\n */\nprivate _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return (!this.min || !control.value ||\n        this._dateAdapter.compareDate(this.min, control.value) <= 0) ?\n        null : {'mdDatepickerMin': {'min': this.min, 'actual': control.value}};\n  }\n/**\n * The form control validator for the max date.\n */\nprivate _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return (!this.max || !control.value ||\n        this._dateAdapter.compareDate(this.max, control.value) >= 0) ?\n        null : {'mdDatepickerMax': {'max': this.max, 'actual': control.value}};\n  }\n/**\n * The form control validator for the date filter.\n */\nprivate _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    return !this._dateFilter || !control.value || this._dateFilter(control.value) ?\n        null : {'mdDatepickerFilter': true};\n  }\n/**\n * The combined form control validator for this input.\n */\nprivate _validator: ValidatorFn | null =\n      Validators.compose(\n          [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n/**\n * Whether the last value set on the input was valid.\n */\nprivate _lastValueValid = false;\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _dateAdapter\n * @param {?} _dateFormats\n * @param {?} _mdFormField\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _dateAdapter: DateAdapter<D>,\nprivate _dateFormats: MdDateFormats,\nprivate _mdFormField: MdFormField) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MD_DATE_FORMATS');\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    if (this._datepicker) {\n      this._datepickerSubscription =\n          this._datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this._cvaOnChange(selected);\n            this._onTouched();\n            this.dateInput.emit(new MdDatepickerInputEvent(this, this._elementRef.nativeElement));\n            this.dateChange.emit(new MdDatepickerInputEvent(this, this._elementRef.nativeElement));\n          });\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._datepickerSubscription) {\n      this._datepickerSubscription.unsubscribe();\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n/**\n * @param {?} c\n * @return {?}\n */\nvalidate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n/**\n * Gets the element that the datepicker popup should be connected to.\n * @return {?} The element to connect the popup to.\n */\ngetPopupConnectionElementRef(): ElementRef {\n    return this._mdFormField ? this._mdFormField.underlineRef : this._elementRef;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: D): void {\n    this.value = value;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n/**\n * @param {?} disabled\n * @return {?}\n */\nsetDisabledState(disabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', disabled);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onKeydown(event: KeyboardEvent) {\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\n_onInput(value: string) {\n    let /** @type {?} */ date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._getValidDateOrNull(date);\n    this._cvaOnChange(date);\n    this._valueChange.emit(date);\n    this.dateInput.emit(new MdDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n/**\n * @return {?}\n */\n_onChange() {\n    this.dateChange.emit(new MdDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n/**\n * @param {?} obj The object to check.\n * @return {?} The given object if it is both a date instance and valid, otherwise null.\n */\nprivate _getValidDateOrNull(obj: any): D | null {\n    return (this._dateAdapter.isDateInstance(obj) && this._dateAdapter.isValid(obj)) ? obj : null;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[mdDatepicker], input[matDatepicker]',\n  providers: [MD_DATEPICKER_VALUE_ACCESSOR, MD_DATEPICKER_VALIDATORS],\n  host: {\n    '[attr.aria-haspopup]': 'true',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.getISODateString(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.getISODateString(max) : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onTouched()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'mdDatepickerInput',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: DateAdapter, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_DATE_FORMATS, ] }, ]},\n{type: MdFormField, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'mdDatepicker': [{ type: Input },],\n'matDatepicker': [{ type: Input },],\n'mdDatepickerFilter': [{ type: Input },],\n'matDatepickerFilter': [{ type: Input },],\n'value': [{ type: Input },],\n'min': [{ type: Input },],\n'max': [{ type: Input },],\n'disabled': [{ type: Input },],\n'dateChange': [{ type: Output },],\n'dateInput': [{ type: Output },],\n};\n}\n\nfunction MdDatepickerInput_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDatepickerInput.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDatepickerInput.ctorParameters;\n/** @type {?} */\nMdDatepickerInput.propDecorators;\n/** @type {?} */\nMdDatepickerInput.prototype._datepicker;\n/** @type {?} */\nMdDatepickerInput.prototype._dateFilter;\n/** @type {?} */\nMdDatepickerInput.prototype._min;\n/** @type {?} */\nMdDatepickerInput.prototype._max;\n/** @type {?} */\nMdDatepickerInput.prototype._disabled;\n/**\n * Emits when a `change` event is fired on this `<input>`.\n * @type {?}\n */\nMdDatepickerInput.prototype.dateChange;\n/**\n * Emits when an `input` event is fired on this `<input>`.\n * @type {?}\n */\nMdDatepickerInput.prototype.dateInput;\n/**\n * Emits when the value changes (either due to user input or programmatic change).\n * @type {?}\n */\nMdDatepickerInput.prototype._valueChange;\n/** @type {?} */\nMdDatepickerInput.prototype._onTouched;\n/** @type {?} */\nMdDatepickerInput.prototype._cvaOnChange;\n/** @type {?} */\nMdDatepickerInput.prototype._validatorOnChange;\n/** @type {?} */\nMdDatepickerInput.prototype._datepickerSubscription;\n/**\n * The form control validator for whether the input parses.\n * @type {?}\n */\nMdDatepickerInput.prototype._parseValidator;\n/**\n * The form control validator for the min date.\n * @type {?}\n */\nMdDatepickerInput.prototype._minValidator;\n/**\n * The form control validator for the max date.\n * @type {?}\n */\nMdDatepickerInput.prototype._maxValidator;\n/**\n * The form control validator for the date filter.\n * @type {?}\n */\nMdDatepickerInput.prototype._filterValidator;\n/**\n * The combined form control validator for this input.\n * @type {?}\n */\nMdDatepickerInput.prototype._validator;\n/**\n * Whether the last value set on the input was valid.\n * @type {?}\n */\nMdDatepickerInput.prototype._lastValueValid;\n/** @type {?} */\nMdDatepickerInput.prototype._elementRef;\n/** @type {?} */\nMdDatepickerInput.prototype._renderer;\n/** @type {?} */\nMdDatepickerInput.prototype._dateAdapter;\n/** @type {?} */\nMdDatepickerInput.prototype._dateFormats;\n/** @type {?} */\nMdDatepickerInput.prototype._mdFormField;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {first} from '@angular/cdk/rxjs';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  Overlay,\n  OverlayRef,\n  OverlayState,\n  PositionStrategy,\n  RepositionScrollStrategy,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {MdDialog} from '../dialog/dialog';\nimport {MdDialogRef} from '../dialog/dialog-ref';\nimport {MdDatepickerInput} from './datepicker-input';\nimport {Subscription} from 'rxjs/Subscription';\nimport {DateAdapter} from '../core/datetime/index';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MdCalendar} from './calendar';\n/**\n * Used to generate a unique ID for each datepicker instance.\n */\nlet datepickerUid = 0;\n/**\n * Injection token that determines the scroll handling while the calendar is open.\n */\nexport const MD_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-datepicker-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_DATEPICKER_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MdCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * \\@docs-private\n */\nexport class MdDatepickerContent<D> implements AfterContentInit {\n  datepicker: MdDatepicker<D>;\n\n   _calendar: MdCalendar<D>;\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._calendar._focusActiveCell();\n  }\n/**\n * Handles keydown event on datepicker content.\n * @param {?} event The event.\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ESCAPE) {\n      this.datepicker.close();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-datepicker-content, mat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_calendar': [{ type: ViewChild, args: [MdCalendar, ] },],\n};\n}\n\nfunction MdDatepickerContent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDatepickerContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDatepickerContent.ctorParameters;\n/** @type {?} */\nMdDatepickerContent.propDecorators;\n/** @type {?} */\nMdDatepickerContent.prototype.datepicker;\n/** @type {?} */\nMdDatepickerContent.prototype._calendar;\n}\n\n/**\n * Component responsible for managing the datepicker popup/dialog.\n */\nexport class MdDatepicker<D> implements OnDestroy {\n/**\n * The date to open the calendar to initially.\n * @return {?}\n */\nget startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nset startAt(date: D | null) { this._startAt = date; }\nprivate _startAt: D | null;\n/**\n * The view that the calendar should start in.\n */\nstartView: 'month' | 'year' = 'month';\n/**\n * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n * than a popup and elements have more padding to allow for bigger touch targets.\n */\ntouchUi = false;\n/**\n * Whether the datepicker pop-up should be disabled.\n * @return {?}\n */\nget disabled() {\n    return this._disabled === undefined ? this._datepickerInput.disabled : this._disabled;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n  }\nprivate _disabled: boolean;\n/**\n * Emits new selected date when selected date changes.\n * @deprecated Switch to the `dateChange` and `dateInput` binding on the input element.\n */\nselectedChanged = new EventEmitter<D>();\n/**\n * Whether the calendar is open.\n */\nopened = false;\n/**\n * The id for the datepicker calendar.\n */\nid = `md-datepicker-${datepickerUid++}`;\n/**\n * The currently selected date.\n * @return {?}\n */\nget _selected(): D | null { return this._validSelected; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _selected(value: D | null) { this._validSelected = value; }\nprivate _validSelected: D | null = null;\n/**\n * The minimum selectable date.\n * @return {?}\n */\nget _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n/**\n * The maximum selectable date.\n * @return {?}\n */\nget _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n/**\n * @return {?}\n */\nget _dateFilter(): (date: D | null) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n/**\n * A reference to the overlay when the calendar is opened as a popup.\n */\nprivate _popupRef: OverlayRef;\n/**\n * A reference to the dialog when the calendar is opened as a dialog.\n */\nprivate _dialogRef: MdDialogRef<any> | null;\n/**\n * A portal containing the calendar for this datepicker.\n */\nprivate _calendarPortal: ComponentPortal<MdDatepickerContent<D>>;\n/**\n * The input element this datepicker is associated with.\n */\nprivate _datepickerInput: MdDatepickerInput<D>;\n/**\n * The element that was focused before the datepicker was opened.\n */\nprivate _focusedElementBeforeOpen: HTMLElement | null = null;\nprivate _inputSubscription: Subscription;\n/**\n * @param {?} _dialog\n * @param {?} _overlay\n * @param {?} _ngZone\n * @param {?} _viewContainerRef\n * @param {?} _scrollStrategy\n * @param {?} _dateAdapter\n * @param {?} _dir\n * @param {?} _document\n */\nconstructor(private _dialog: MdDialog,\nprivate _overlay: Overlay,\nprivate _ngZone: NgZone,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _scrollStrategy,\nprivate _dateAdapter: DateAdapter<D>,\nprivate _dir: Directionality,\nprivate _document: any) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.close();\n    if (this._popupRef) {\n      this._popupRef.dispose();\n    }\n    if (this._inputSubscription) {\n      this._inputSubscription.unsubscribe();\n    }\n  }\n/**\n * Selects the given date\n * @param {?} date\n * @return {?}\n */\n_select(date: D): void {\n    let /** @type {?} */ oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDate(oldValue, this._selected)) {\n      this.selectedChanged.emit(date);\n    }\n  }\n/**\n * Register an input with this datepicker.\n * @param {?} input The datepicker input to register with this datepicker.\n * @return {?}\n */\n_registerInput(input: MdDatepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw Error('An MdDatepicker can only be associated with a single input.');\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n        this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\n  }\n/**\n * Open the calendar.\n * @return {?}\n */\nopen(): void {\n    if (this.opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error('Attempted to open an MdDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this.opened = true;\n  }\n/**\n * Close the calendar.\n * @return {?}\n */\nclose(): void {\n    if (!this.opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n\n      this._focusedElementBeforeOpen.focus();\n      this._focusedElementBeforeOpen = null;\n    }\n\n    this.opened = false;\n  }\n/**\n * Open the calendar as a dialog.\n * @return {?}\n */\nprivate _openAsDialog(): void {\n    this._dialogRef = this._dialog.open(MdDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n    });\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._dialogRef.componentInstance.datepicker = this;\n  }\n/**\n * Open the calendar as a popup.\n * @return {?}\n */\nprivate _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal(MdDatepickerContent, this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      let /** @type {?} */ componentRef: ComponentRef<MdDatepickerContent<D>> =\n          this._popupRef.attach(this._calendarPortal);\n      componentRef.instance.datepicker = this;\n\n      // Update the position once the calendar has rendered.\n      first.call(this._ngZone.onStable).subscribe(() => this._popupRef.updatePosition());\n    }\n\n    this._popupRef.backdropClick().subscribe(() => this.close());\n  }\n/**\n * Create the popup.\n * @return {?}\n */\nprivate _createPopup(): void {\n    const /** @type {?} */ overlayState = new OverlayState();\n    overlayState.positionStrategy = this._createPopupPositionStrategy();\n    overlayState.hasBackdrop = true;\n    overlayState.backdropClass = 'md-overlay-transparent-backdrop';\n    overlayState.direction = this._dir ? this._dir.value : 'ltr';\n    overlayState.scrollStrategy = this._scrollStrategy();\n\n    this._popupRef = this._overlay.create(overlayState);\n  }\n/**\n * Create the popup PositionStrategy.\n * @return {?}\n */\nprivate _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .connectedTo(this._datepickerInput.getPopupConnectionElementRef(),\n        {originX: 'start', originY: 'bottom'},\n        {overlayX: 'start', overlayY: 'top'}\n      )\n      .withFallbackPosition(\n        { originX: 'start', originY: 'top' },\n        { overlayX: 'start', overlayY: 'bottom' }\n      )\n      .withFallbackPosition(\n        {originX: 'end', originY: 'bottom'},\n        {overlayX: 'end', overlayY: 'top'}\n      )\n      .withFallbackPosition(\n        { originX: 'end', originY: 'top' },\n        { overlayX: 'end', overlayY: 'bottom' }\n      );\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-datepicker, mat-datepicker',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdDialog, },\n{type: Overlay, },\n{type: NgZone, },\n{type: ViewContainerRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_DATEPICKER_SCROLL_STRATEGY, ] }, ]},\n{type: DateAdapter, decorators: [{ type: Optional }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'startAt': [{ type: Input },],\n'startView': [{ type: Input },],\n'touchUi': [{ type: Input },],\n'disabled': [{ type: Input },],\n'selectedChanged': [{ type: Output },],\n};\n}\n\nfunction MdDatepicker_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDatepicker.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDatepicker.ctorParameters;\n/** @type {?} */\nMdDatepicker.propDecorators;\n/** @type {?} */\nMdDatepicker.prototype._startAt;\n/**\n * The view that the calendar should start in.\n * @type {?}\n */\nMdDatepicker.prototype.startView;\n/**\n * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n * than a popup and elements have more padding to allow for bigger touch targets.\n * @type {?}\n */\nMdDatepicker.prototype.touchUi;\n/** @type {?} */\nMdDatepicker.prototype._disabled;\n/**\n * Emits new selected date when selected date changes.\n * @deprecated Switch to the `dateChange` and `dateInput` binding on the input element.\n * @type {?}\n */\nMdDatepicker.prototype.selectedChanged;\n/**\n * Whether the calendar is open.\n * @type {?}\n */\nMdDatepicker.prototype.opened;\n/**\n * The id for the datepicker calendar.\n * @type {?}\n */\nMdDatepicker.prototype.id;\n/** @type {?} */\nMdDatepicker.prototype._validSelected;\n/**\n * A reference to the overlay when the calendar is opened as a popup.\n * @type {?}\n */\nMdDatepicker.prototype._popupRef;\n/**\n * A reference to the dialog when the calendar is opened as a dialog.\n * @type {?}\n */\nMdDatepicker.prototype._dialogRef;\n/**\n * A portal containing the calendar for this datepicker.\n * @type {?}\n */\nMdDatepicker.prototype._calendarPortal;\n/**\n * The input element this datepicker is associated with.\n * @type {?}\n */\nMdDatepicker.prototype._datepickerInput;\n/**\n * The element that was focused before the datepicker was opened.\n * @type {?}\n */\nMdDatepicker.prototype._focusedElementBeforeOpen;\n/** @type {?} */\nMdDatepicker.prototype._inputSubscription;\n/** @type {?} */\nMdDatepicker.prototype._dialog;\n/** @type {?} */\nMdDatepicker.prototype._overlay;\n/** @type {?} */\nMdDatepicker.prototype._ngZone;\n/** @type {?} */\nMdDatepicker.prototype._viewContainerRef;\n/** @type {?} */\nMdDatepicker.prototype._scrollStrategy;\n/** @type {?} */\nMdDatepicker.prototype._dateAdapter;\n/** @type {?} */\nMdDatepicker.prototype._dir;\n/** @type {?} */\nMdDatepicker.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW\n} from '../core/keyboard/keycodes';\nimport {DateAdapter} from '../core/datetime/index';\nimport {MdDatepickerIntl} from './datepicker-intl';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MD_DATE_FORMATS, MdDateFormats} from '../core/datetime/date-formats';\nimport {MATERIAL_COMPATIBILITY_MODE} from '../core';\nimport {first} from '../core/rxjs/index';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * A calendar that is used as part of the datepicker.\n * \\@docs-private\n */\nexport class MdCalendar<D> implements AfterContentInit, OnDestroy {\nprivate _intlChanges: Subscription;\n/**\n * A date representing the period (month or year) to start the calendar in.\n */\nstartAt: D;\n/**\n * Whether the calendar should be started in month or year view.\n */\nstartView: 'month' | 'year' = 'month';\n/**\n * The currently selected date.\n */\nselected: D | null;\n/**\n * The minimum selectable date.\n */\nminDate: D | null;\n/**\n * The maximum selectable date.\n */\nmaxDate: D | null;\n/**\n * A function used to filter which dates are selectable.\n */\ndateFilter: (date: D) => boolean;\n/**\n * Emits when the currently selected date changes.\n */\nselectedChange = new EventEmitter<D>();\n/**\n * Emits when any date is selected.\n */\nuserSelection = new EventEmitter<void>();\n/**\n * Date filter for the month and year views.\n */\n_dateFilterForViews = (date: D) => {\n    return !!date &&\n        (!this.dateFilter || this.dateFilter(date)) &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0);\n  }\n/**\n * The current active date. This determines which time period is shown and which date is\n * highlighted when using keyboard navigation.\n * @return {?}\n */\nget _activeDate(): D { return this._clampedActiveDate; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n  }\nprivate _clampedActiveDate: D;\n/**\n * Whether the calendar is in month view.\n */\n_monthView: boolean;\n/**\n * The label for the current calendar view.\n * @return {?}\n */\nget _periodButtonText(): string {\n    return this._monthView ?\n        this._dateAdapter.format(this._activeDate, this._dateFormats.display.monthYearLabel)\n            .toLocaleUpperCase() :\n        this._dateAdapter.getYearName(this._activeDate);\n  }\n/**\n * @return {?}\n */\nget _periodButtonLabel(): string {\n    return this._monthView ? this._intl.switchToYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n/**\n * The label for the the previous button.\n * @return {?}\n */\nget _prevButtonLabel(): string {\n    return this._monthView ? this._intl.prevMonthLabel : this._intl.prevYearLabel;\n  }\n/**\n * The label for the the next button.\n * @return {?}\n */\nget _nextButtonLabel(): string {\n    return this._monthView ? this._intl.nextMonthLabel : this._intl.nextYearLabel;\n  }\n/**\n * @param {?} _elementRef\n * @param {?} _intl\n * @param {?} _ngZone\n * @param {?} _isCompatibilityMode\n * @param {?} _dateAdapter\n * @param {?} _dateFormats\n * @param {?} changeDetectorRef\n */\nconstructor(private _elementRef: ElementRef,\nprivate _intl: MdDatepickerIntl,\nprivate _ngZone: NgZone,\npublic _isCompatibilityMode: boolean,\nprivate _dateAdapter: DateAdapter<D>,\nprivate _dateFormats: MdDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MD_DATE_FORMATS');\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._activeDate = this.startAt || this._dateAdapter.today();\n    this._focusActiveCell();\n    this._monthView = this.startView != 'year';\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n/**\n * Handles date selection in the month view.\n * @param {?} date\n * @return {?}\n */\n_dateSelected(date: D): void {\n    if (!this._dateAdapter.sameDate(date, this.selected)) {\n      this.selectedChange.emit(date);\n    }\n  }\n/**\n * @return {?}\n */\n_userSelected(): void {\n    this.userSelection.emit();\n  }\n/**\n * Handles month selection in the year view.\n * @param {?} month\n * @return {?}\n */\n_monthSelected(month: D): void {\n    this._activeDate = month;\n    this._monthView = true;\n  }\n/**\n * Handles user clicks on the period label.\n * @return {?}\n */\n_currentPeriodClicked(): void {\n    this._monthView = !this._monthView;\n  }\n/**\n * Handles user clicks on the previous button.\n * @return {?}\n */\n_previousClicked(): void {\n    this._activeDate = this._monthView ?\n        this._dateAdapter.addCalendarMonths(this._activeDate, -1) :\n        this._dateAdapter.addCalendarYears(this._activeDate, -1);\n  }\n/**\n * Handles user clicks on the next button.\n * @return {?}\n */\n_nextClicked(): void {\n    this._activeDate = this._monthView ?\n        this._dateAdapter.addCalendarMonths(this._activeDate, 1) :\n        this._dateAdapter.addCalendarYears(this._activeDate, 1);\n  }\n/**\n * Whether the previous period button is enabled.\n * @return {?}\n */\n_previousEnabled(): boolean {\n    if (!this.minDate) {\n      return true;\n    }\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\n  }\n/**\n * Whether the next period button is enabled.\n * @return {?}\n */\n_nextEnabled(): boolean {\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\n  }\n/**\n * Handles keydown events on the calendar body.\n * @param {?} event\n * @return {?}\n */\n_handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    if (this._monthView) {\n      this._handleCalendarBodyKeydownInMonthView(event);\n    } else {\n      this._handleCalendarBodyKeydownInYearView(event);\n    }\n  }\n/**\n * Focuses the active cell after the microtask queue is empty.\n * @return {?}\n */\n_focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => first.call(this._ngZone.onStable).subscribe(() => {\n      this._elementRef.nativeElement.querySelector('.mat-calendar-body-active').focus();\n    }));\n  }\n/**\n * Whether the two dates represent the same view in the current view mode (month or year).\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nprivate _isSameView(date1: D, date2: D): boolean {\n    return this._monthView ?\n        this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n        this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2) :\n        this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n  }\n/**\n * Handles keydown events on the calendar body when calendar is in month view.\n * @param {?} event\n * @return {?}\n */\nprivate _handleCalendarBodyKeydownInMonthView(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -1);\n        break;\n      case RIGHT_ARROW:\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1);\n        break;\n      case UP_ARROW:\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this._activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n             this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this._activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this._activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n        if (this._dateFilterForViews(this._activeDate)) {\n          this._dateSelected(this._activeDate);\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n/**\n * Handles keydown events on the calendar body when calendar is in year view.\n * @param {?} event\n * @return {?}\n */\nprivate _handleCalendarBodyKeydownInYearView(event: KeyboardEvent): void {\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case RIGHT_ARROW:\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case UP_ARROW:\n        this._activeDate = this._prevMonthInSameCol(this._activeDate);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._nextMonthInSameCol(this._activeDate);\n        break;\n      case HOME:\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this._activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this._activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this._activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n        this._monthSelected(this._activeDate);\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n/**\n * Determine the date for the month that comes before the given month in the same column in the\n * calendar table.\n * @param {?} date\n * @return {?}\n */\nprivate _prevMonthInSameCol(date: D): D {\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n    // of each year.\n    let /** @type {?} */ increment = this._dateAdapter.getMonth(date) <= 4 ? -5 :\n        (this._dateAdapter.getMonth(date) >= 7 ? -7 : -12);\n    return this._dateAdapter.addCalendarMonths(date, increment);\n  }\n/**\n * Determine the date for the month that comes after the given month in the same column in the\n * calendar table.\n * @param {?} date\n * @return {?}\n */\nprivate _nextMonthInSameCol(date: D): D {\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n    // of each year.\n    let /** @type {?} */ increment = this._dateAdapter.getMonth(date) <= 4 ? 7 :\n        (this._dateAdapter.getMonth(date) >= 7 ? 5 : 12);\n    return this._dateAdapter.addCalendarMonths(date, increment);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-calendar, mat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: MdDatepickerIntl, },\n{type: NgZone, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n{type: DateAdapter, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_DATE_FORMATS, ] }, ]},\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'startAt': [{ type: Input },],\n'startView': [{ type: Input },],\n'selected': [{ type: Input },],\n'minDate': [{ type: Input },],\n'maxDate': [{ type: Input },],\n'dateFilter': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'userSelection': [{ type: Output },],\n};\n}\n\nfunction MdCalendar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCalendar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCalendar.ctorParameters;\n/** @type {?} */\nMdCalendar.propDecorators;\n/** @type {?} */\nMdCalendar.prototype._intlChanges;\n/**\n * A date representing the period (month or year) to start the calendar in.\n * @type {?}\n */\nMdCalendar.prototype.startAt;\n/**\n * Whether the calendar should be started in month or year view.\n * @type {?}\n */\nMdCalendar.prototype.startView;\n/**\n * The currently selected date.\n * @type {?}\n */\nMdCalendar.prototype.selected;\n/**\n * The minimum selectable date.\n * @type {?}\n */\nMdCalendar.prototype.minDate;\n/**\n * The maximum selectable date.\n * @type {?}\n */\nMdCalendar.prototype.maxDate;\n/**\n * A function used to filter which dates are selectable.\n * @type {?}\n */\nMdCalendar.prototype.dateFilter;\n/**\n * Emits when the currently selected date changes.\n * @type {?}\n */\nMdCalendar.prototype.selectedChange;\n/**\n * Emits when any date is selected.\n * @type {?}\n */\nMdCalendar.prototype.userSelection;\n/**\n * Date filter for the month and year views.\n * @type {?}\n */\nMdCalendar.prototype._dateFilterForViews;\n/** @type {?} */\nMdCalendar.prototype._clampedActiveDate;\n/**\n * Whether the calendar is in month view.\n * @type {?}\n */\nMdCalendar.prototype._monthView;\n/** @type {?} */\nMdCalendar.prototype._elementRef;\n/** @type {?} */\nMdCalendar.prototype._intl;\n/** @type {?} */\nMdCalendar.prototype._ngZone;\n/** @type {?} */\nMdCalendar.prototype._isCompatibilityMode;\n/** @type {?} */\nMdCalendar.prototype._dateAdapter;\n/** @type {?} */\nMdCalendar.prototype._dateFormats;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\n/**\n * Datepicker data that requires internationalization.\n */\nexport class MdDatepickerIntl {\n/**\n * Stream that emits whenever the labels here are changed. Use this to notify\n * components if the labels have changed after initialization.\n */\nchanges: Subject<void> = new Subject<void>();\n/**\n * A label for the calendar popup (used by screen readers).\n */\ncalendarLabel = 'Calendar';\n/**\n * A label for the button used to open the calendar popup (used by screen readers).\n */\nopenCalendarLabel = 'Open calendar';\n/**\n * A label for the previous month button (used by screen readers).\n */\nprevMonthLabel = 'Previous month';\n/**\n * A label for the next month button (used by screen readers).\n */\nnextMonthLabel = 'Next month';\n/**\n * A label for the previous year button (used by screen readers).\n */\nprevYearLabel = 'Previous year';\n/**\n * A label for the next year button (used by screen readers).\n */\nnextYearLabel = 'Next year';\n/**\n * A label for the 'switch to month view' button (used by screen readers).\n */\nswitchToMonthViewLabel = 'Change to month view';\n/**\n * A label for the 'switch to year view' button (used by screen readers).\n */\nswitchToYearViewLabel = 'Change to year view';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdDatepickerIntl_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDatepickerIntl.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDatepickerIntl.ctorParameters;\n/**\n * Stream that emits whenever the labels here are changed. Use this to notify\n * components if the labels have changed after initialization.\n * @type {?}\n */\nMdDatepickerIntl.prototype.changes;\n/**\n * A label for the calendar popup (used by screen readers).\n * @type {?}\n */\nMdDatepickerIntl.prototype.calendarLabel;\n/**\n * A label for the button used to open the calendar popup (used by screen readers).\n * @type {?}\n */\nMdDatepickerIntl.prototype.openCalendarLabel;\n/**\n * A label for the previous month button (used by screen readers).\n * @type {?}\n */\nMdDatepickerIntl.prototype.prevMonthLabel;\n/**\n * A label for the next month button (used by screen readers).\n * @type {?}\n */\nMdDatepickerIntl.prototype.nextMonthLabel;\n/**\n * A label for the previous year button (used by screen readers).\n * @type {?}\n */\nMdDatepickerIntl.prototype.prevYearLabel;\n/**\n * A label for the next year button (used by screen readers).\n * @type {?}\n */\nMdDatepickerIntl.prototype.nextYearLabel;\n/**\n * A label for the 'switch to month view' button (used by screen readers).\n * @type {?}\n */\nMdDatepickerIntl.prototype.switchToMonthViewLabel;\n/**\n * A label for the 'switch to year view' button (used by screen readers).\n * @type {?}\n */\nMdDatepickerIntl.prototype.switchToYearViewLabel;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MdCalendarCell} from './calendar-body';\nimport {DateAdapter} from '../core/datetime/index';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MD_DATE_FORMATS, MdDateFormats} from '../core/datetime/date-formats';\n/**\n * An internal component used to display a single year in the datepicker.\n * \\@docs-private\n */\nexport class MdYearView<D> implements AfterContentInit {\n/**\n * The date to display in this year view (everything other than the year is ignored).\n * @return {?}\n */\nget activeDate(): D { return this._activeDate; }\n/**\n * @param {?} value\n * @return {?}\n */\nset activeDate(value: D) {\n    let /** @type {?} */ oldActiveDate = this._activeDate;\n    this._activeDate = value || this._dateAdapter.today();\n    if (this._dateAdapter.getYear(oldActiveDate) != this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\nprivate _activeDate: D;\n/**\n * The currently selected date.\n * @return {?}\n */\nget selected(): D { return this._selected; }\n/**\n * @param {?} value\n * @return {?}\n */\nset selected(value: D) {\n    this._selected = value;\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n  }\nprivate _selected: D;\n/**\n * A function used to filter which dates are selectable.\n */\ndateFilter: (date: D) => boolean;\n/**\n * Emits when a new month is selected.\n */\nselectedChange = new EventEmitter<D>();\n/**\n * Grid of calendar cells representing the months of the year.\n */\n_months: MdCalendarCell[][];\n/**\n * The label for this year (e.g. \"2017\").\n */\n_yearLabel: string;\n/**\n * The month in this year that today falls on. Null if today is in a different year.\n */\n_todayMonth: number | null;\n/**\n * The month in this year that the selected Date falls on.\n * Null if the selected Date is in a different year.\n */\n_selectedMonth: number | null;\n/**\n * @param {?} _dateAdapter\n * @param {?} _dateFormats\n */\nconstructor(\npublic _dateAdapter: DateAdapter<D>,\nprivate _dateFormats: MdDateFormats) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MD_DATE_FORMATS');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._init();\n  }\n/**\n * Handles when a new month is selected.\n * @param {?} month\n * @return {?}\n */\n_monthSelected(month: number) {\n    let /** @type {?} */ daysInMonth = this._dateAdapter.getNumDaysInMonth(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n/**\n * Initializes this month view.\n * @return {?}\n */\nprivate _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let /** @type {?} */ monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n  }\n/**\n * Gets the month in this year that the given Date falls on.\n * Returns null if the given Date is in another year.\n * @param {?} date\n * @return {?}\n */\nprivate _getMonthInCurrentYear(date: D) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n/**\n * Creates an MdCalendarCell for the given month.\n * @param {?} month\n * @param {?} monthName\n * @return {?}\n */\nprivate _createCellForMonth(month: number, monthName: string) {\n    let /** @type {?} */ ariaLabel = this._dateAdapter.format(\n        this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1),\n        this._dateFormats.display.monthYearA11yLabel);\n    return new MdCalendarCell(\n        month, monthName.toLocaleUpperCase(), ariaLabel, this._isMonthEnabled(month));\n  }\n/**\n * Whether the given month is enabled.\n * @param {?} month\n * @return {?}\n */\nprivate _isMonthEnabled(month: number) {\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    let /** @type {?} */ firstOfMonth = this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let /** @type {?} */ date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-year-view, mat-year-view',\n  templateUrl: 'year-view.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateAdapter, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_DATE_FORMATS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activeDate': [{ type: Input },],\n'selected': [{ type: Input },],\n'dateFilter': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n};\n}\n\nfunction MdYearView_tsickle_Closure_declarations() {\n/** @type {?} */\nMdYearView.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdYearView.ctorParameters;\n/** @type {?} */\nMdYearView.propDecorators;\n/** @type {?} */\nMdYearView.prototype._activeDate;\n/** @type {?} */\nMdYearView.prototype._selected;\n/**\n * A function used to filter which dates are selectable.\n * @type {?}\n */\nMdYearView.prototype.dateFilter;\n/**\n * Emits when a new month is selected.\n * @type {?}\n */\nMdYearView.prototype.selectedChange;\n/**\n * Grid of calendar cells representing the months of the year.\n * @type {?}\n */\nMdYearView.prototype._months;\n/**\n * The label for this year (e.g. \"2017\").\n * @type {?}\n */\nMdYearView.prototype._yearLabel;\n/**\n * The month in this year that today falls on. Null if today is in a different year.\n * @type {?}\n */\nMdYearView.prototype._todayMonth;\n/**\n * The month in this year that the selected Date falls on.\n * Null if the selected Date is in a different year.\n * @type {?}\n */\nMdYearView.prototype._selectedMonth;\n/** @type {?} */\nMdYearView.prototype._dateAdapter;\n/** @type {?} */\nMdYearView.prototype._dateFormats;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MdCalendarCell} from './calendar-body';\nimport {DateAdapter} from '../core/datetime/index';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MD_DATE_FORMATS, MdDateFormats} from '../core/datetime/date-formats';\n\n\nconst /** @type {?} */ DAYS_PER_WEEK = 7;\n/**\n * An internal component used to display a single month in the datepicker.\n * \\@docs-private\n */\nexport class MdMonthView<D> implements AfterContentInit {\n/**\n * The date to display in this month view (everything other than the month and year is ignored).\n * @return {?}\n */\nget activeDate(): D { return this._activeDate; }\n/**\n * @param {?} value\n * @return {?}\n */\nset activeDate(value: D) {\n    let /** @type {?} */ oldActiveDate = this._activeDate;\n    this._activeDate = value || this._dateAdapter.today();\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\nprivate _activeDate: D;\n/**\n * The currently selected date.\n * @return {?}\n */\nget selected(): D { return this._selected; }\n/**\n * @param {?} value\n * @return {?}\n */\nset selected(value: D) {\n    this._selected = value;\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n  }\nprivate _selected: D;\n/**\n * A function used to filter which dates are selectable.\n */\ndateFilter: (date: D) => boolean;\n/**\n * Emits when a new date is selected.\n */\nselectedChange = new EventEmitter<D | null>();\n/**\n * Emits when any date is selected.\n */\nuserSelection = new EventEmitter<void>();\n/**\n * The label for this month (e.g. \"January 2017\").\n */\n_monthLabel: string;\n/**\n * Grid of calendar cells representing the dates of the month.\n */\n_weeks: MdCalendarCell[][];\n/**\n * The number of blank cells in the first row before the 1st of the month.\n */\n_firstWeekOffset: number;\n/**\n * The date of the month that the currently selected Date falls on.\n * Null if the currently selected Date is in another month.\n */\n_selectedDate: number | null;\n/**\n * The date of the month that today falls on. Null if today is in another month.\n */\n_todayDate: number | null;\n/**\n * The names of the weekdays.\n */\n_weekdays: {long: string, narrow: string}[];\n/**\n * @param {?} _dateAdapter\n * @param {?} _dateFormats\n */\nconstructor(\npublic _dateAdapter: DateAdapter<D>,\nprivate _dateFormats: MdDateFormats) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError('MD_DATE_FORMATS');\n    }\n\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n      return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n    this._activeDate = this._dateAdapter.today();\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this._init();\n  }\n/**\n * Handles when a new date is selected.\n * @param {?} date\n * @return {?}\n */\n_dateSelected(date: number) {\n    if (this._selectedDate != date) {\n      const /** @type {?} */ selectedYear = this._dateAdapter.getYear(this.activeDate);\n      const /** @type {?} */ selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n      const /** @type {?} */ selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this.userSelection.emit();\n  }\n/**\n * Initializes this month view.\n * @return {?}\n */\nprivate _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let /** @type {?} */ firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._createWeekCells();\n  }\n/**\n * Creates MdCalendarCells for the dates in this month.\n * @return {?}\n */\nprivate _createWeekCells() {\n    let /** @type {?} */ daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    let /** @type {?} */ dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let /** @type {?} */ i = 0, /** @type {?} */ cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      let /** @type {?} */ date = this._dateAdapter.createDate(\n          this._dateAdapter.getYear(this.activeDate),\n          this._dateAdapter.getMonth(this.activeDate), i + 1);\n      let /** @type {?} */ enabled = !this.dateFilter ||\n          this.dateFilter(date);\n      let /** @type {?} */ ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      this._weeks[this._weeks.length - 1]\n          .push(new MdCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\n    }\n  }\n/**\n * Gets the date in this month that the given Date falls on.\n * Returns null if the given Date is in another month.\n * @param {?} date\n * @return {?}\n */\nprivate _getDateInCurrentMonth(date: D): number | null {\n    return this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n/**\n * Checks whether the 2 dates are non-null and fall within the same month of the same year.\n * @param {?} d1\n * @param {?} d2\n * @return {?}\n */\nprivate _hasSameMonthAndYear(d1: D, d2: D): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-month-view',\n  templateUrl: 'month-view.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DateAdapter, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_DATE_FORMATS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activeDate': [{ type: Input },],\n'selected': [{ type: Input },],\n'dateFilter': [{ type: Input },],\n'selectedChange': [{ type: Output },],\n'userSelection': [{ type: Output },],\n};\n}\n\nfunction MdMonthView_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMonthView.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMonthView.ctorParameters;\n/** @type {?} */\nMdMonthView.propDecorators;\n/** @type {?} */\nMdMonthView.prototype._activeDate;\n/** @type {?} */\nMdMonthView.prototype._selected;\n/**\n * A function used to filter which dates are selectable.\n * @type {?}\n */\nMdMonthView.prototype.dateFilter;\n/**\n * Emits when a new date is selected.\n * @type {?}\n */\nMdMonthView.prototype.selectedChange;\n/**\n * Emits when any date is selected.\n * @type {?}\n */\nMdMonthView.prototype.userSelection;\n/**\n * The label for this month (e.g. \"January 2017\").\n * @type {?}\n */\nMdMonthView.prototype._monthLabel;\n/**\n * Grid of calendar cells representing the dates of the month.\n * @type {?}\n */\nMdMonthView.prototype._weeks;\n/**\n * The number of blank cells in the first row before the 1st of the month.\n * @type {?}\n */\nMdMonthView.prototype._firstWeekOffset;\n/**\n * The date of the month that the currently selected Date falls on.\n * Null if the currently selected Date is in another month.\n * @type {?}\n */\nMdMonthView.prototype._selectedDate;\n/**\n * The date of the month that today falls on. Null if today is in another month.\n * @type {?}\n */\nMdMonthView.prototype._todayDate;\n/**\n * The names of the weekdays.\n * @type {?}\n */\nMdMonthView.prototype._weekdays;\n/** @type {?} */\nMdMonthView.prototype._dateAdapter;\n/** @type {?} */\nMdMonthView.prototype._dateFormats;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * \\@docs-private\n * @param {?} provider\n * @return {?}\n */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `MdDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: MdNativeDateModule, or provide a custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation\n} from '@angular/core';\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * \\@docs-private\n */\nexport class MdCalendarCell {\n/**\n * @param {?} value\n * @param {?} displayValue\n * @param {?} ariaLabel\n * @param {?} enabled\n */\nconstructor(public value: number,\npublic displayValue: string,\npublic ariaLabel: string,\npublic enabled: boolean) {}\n}\n\nfunction MdCalendarCell_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCalendarCell.prototype.value;\n/** @type {?} */\nMdCalendarCell.prototype.displayValue;\n/** @type {?} */\nMdCalendarCell.prototype.ariaLabel;\n/** @type {?} */\nMdCalendarCell.prototype.enabled;\n}\n\n/**\n * An internal component used to display calendar data in a table.\n * \\@docs-private\n */\nexport class MdCalendarBody {\n/**\n * The label for the table. (e.g. \"Jan 2017\").\n */\nlabel: string;\n/**\n * The cells to display in the table.\n */\nrows: MdCalendarCell[][];\n/**\n * The value in the table that corresponds to today.\n */\ntodayValue: number;\n/**\n * The value in the table that is currently selected.\n */\nselectedValue: number;\n/**\n * The minimum number of free cells needed to fit the label in the first row.\n */\nlabelMinRequiredCells: number;\n/**\n * The number of columns in the table.\n */\nnumCols = 7;\n/**\n * Whether to allow selection of disabled cells.\n */\nallowDisabledSelection = false;\n/**\n * The cell number of the active cell in the table.\n */\nactiveCell = 0;\n/**\n * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n * maintained even as the table resizes.\n */\ncellAspectRatio = 1;\n/**\n * Emits when a new value is selected.\n */\nselectedValueChange = new EventEmitter<number>();\n/**\n * @param {?} cell\n * @return {?}\n */\n_cellClicked(cell: MdCalendarCell): void {\n    if (!this.allowDisabledSelection && !cell.enabled) {\n      return;\n    }\n    this.selectedValueChange.emit(cell.value);\n  }\n/**\n * The number of blank cells to put at the beginning for the first row.\n * @return {?}\n */\nget _firstRowOffset(): number {\n    return this.rows && this.rows.length && this.rows[0].length ?\n        this.numCols - this.rows[0].length : 0;\n  }\n/**\n * @param {?} rowIndex\n * @param {?} colIndex\n * @return {?}\n */\n_isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let /** @type {?} */ cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-calendar-body], [mat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n'rows': [{ type: Input },],\n'todayValue': [{ type: Input },],\n'selectedValue': [{ type: Input },],\n'labelMinRequiredCells': [{ type: Input },],\n'numCols': [{ type: Input },],\n'allowDisabledSelection': [{ type: Input },],\n'activeCell': [{ type: Input },],\n'cellAspectRatio': [{ type: Input },],\n'selectedValueChange': [{ type: Output },],\n};\n}\n\nfunction MdCalendarBody_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCalendarBody.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCalendarBody.ctorParameters;\n/** @type {?} */\nMdCalendarBody.propDecorators;\n/**\n * The label for the table. (e.g. \"Jan 2017\").\n * @type {?}\n */\nMdCalendarBody.prototype.label;\n/**\n * The cells to display in the table.\n * @type {?}\n */\nMdCalendarBody.prototype.rows;\n/**\n * The value in the table that corresponds to today.\n * @type {?}\n */\nMdCalendarBody.prototype.todayValue;\n/**\n * The value in the table that is currently selected.\n * @type {?}\n */\nMdCalendarBody.prototype.selectedValue;\n/**\n * The minimum number of free cells needed to fit the label in the first row.\n * @type {?}\n */\nMdCalendarBody.prototype.labelMinRequiredCells;\n/**\n * The number of columns in the table.\n * @type {?}\n */\nMdCalendarBody.prototype.numCols;\n/**\n * Whether to allow selection of disabled cells.\n * @type {?}\n */\nMdCalendarBody.prototype.allowDisabledSelection;\n/**\n * The cell number of the active cell in the table.\n * @type {?}\n */\nMdCalendarBody.prototype.activeCell;\n/**\n * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n * maintained even as the table resizes.\n * @type {?}\n */\nMdCalendarBody.prototype.cellAspectRatio;\n/**\n * Emits when a new value is selected.\n * @type {?}\n */\nMdCalendarBody.prototype.selectedValueChange;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MdOptionModule, MdCommonModule} from '../core';\nimport {MdAutocomplete} from './autocomplete';\nimport {\n  MdAutocompleteTrigger,\n  MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER,\n} from './autocomplete-trigger';\nexport class MdAutocompleteModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdOptionModule, OverlayModule, MdCommonModule, CommonModule],\n  exports: [MdAutocomplete, MdOptionModule, MdAutocompleteTrigger, MdCommonModule],\n  declarations: [MdAutocomplete, MdAutocompleteTrigger],\n  providers: [MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdAutocompleteModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocompleteModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocompleteModule.ctorParameters;\n}\n\n\n\nexport {MdAutocompleteSelectedEvent,MdAutocomplete} from './autocomplete';\nexport {AUTOCOMPLETE_OPTION_HEIGHT,AUTOCOMPLETE_PANEL_HEIGHT,MD_AUTOCOMPLETE_SCROLL_STRATEGY,MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER,MD_AUTOCOMPLETE_VALUE_ACCESSOR,getMdAutocompleteMissingPanelError,MdAutocompleteTrigger} from './autocomplete-trigger';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Host,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {filter, first, map, RxChain, switchMap} from '@angular/cdk/rxjs';\nimport {\n  ConnectedPositionStrategy,\n  Overlay,\n  OverlayRef,\n  OverlayState,\n  PositionStrategy,\n  RepositionScrollStrategy,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {DOWN_ARROW, ENTER, ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {Observable} from 'rxjs/Observable';\nimport {MdFormField} from '../form-field/index';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {MdOption, MdOptionSelectionChange} from '../core/option/option';\nimport {MdAutocomplete} from './autocomplete';\n/**\n * The height of each autocomplete option.\n */\nexport const AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n */\nexport const AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/**\n * Injection token that determines the scroll handling while the autocomplete panel is open.\n */\nexport const MD_AUTOCOMPLETE_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-autocomplete-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_AUTOCOMPLETE_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_AUTOCOMPLETE_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * \\@docs-private\n */\nexport const MD_AUTOCOMPLETE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdAutocompleteTrigger),\n  multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @return {?}\n */\nexport function getMdAutocompleteMissingPanelError(): Error {\n  return Error('Attempting to open an undefined instance of `md-autocomplete`. ' +\n               'Make sure that the id passed to the `mdAutocomplete` is correct and that ' +\n               'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\nexport class MdAutocompleteTrigger implements ControlValueAccessor, OnDestroy {\nprivate _overlayRef: OverlayRef | null;\nprivate _portal: TemplatePortal<any>;\nprivate _panelOpen: boolean = false;\n/**\n * Strategy that is used to position the panel.\n */\nprivate _positionStrategy: ConnectedPositionStrategy;\n/**\n * Whether or not the placeholder state is being overridden.\n */\nprivate _manuallyFloatingPlaceholder = false;\n/**\n * The subscription for closing actions (some are bound to document).\n */\nprivate _closingActionsSubscription: Subscription;\n/**\n * View -> model callback called when value changes\n */\n_onChange: (value: any) => void = () => {};\n/**\n * View -> model callback called when autocomplete has been touched\n */\n_onTouched = () => {};\n\n  /* The autocomplete panel to be attached to this trigger. */\n   autocomplete: MdAutocomplete;\n/**\n * Property with mat- prefix for no-conflict mode.\n * @return {?}\n */\nget _matAutocomplete(): MdAutocomplete {\n    return this.autocomplete;\n  }\n/**\n * @param {?} autocomplete\n * @return {?}\n */\nset _matAutocomplete(autocomplete: MdAutocomplete) {\n    this.autocomplete = autocomplete;\n  }\n/**\n * @param {?} _element\n * @param {?} _overlay\n * @param {?} _viewContainerRef\n * @param {?} _zone\n * @param {?} _changeDetectorRef\n * @param {?} _scrollStrategy\n * @param {?} _dir\n * @param {?} _formField\n * @param {?} _document\n */\nconstructor(private _element: ElementRef,\nprivate _overlay: Overlay,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _zone: NgZone,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _scrollStrategy,\nprivate _dir: Directionality,\nprivate _formField: MdFormField,\nprivate _document: any) {}\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._destroyPanel();\n  }\n/**\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this._panelOpen && this.autocomplete.showPanel;\n  }\n/**\n * Opens the autocomplete suggestion panel.\n * @return {?}\n */\nopenPanel(): void {\n    this._attachOverlay();\n    this._floatPlaceholder();\n  }\n/**\n * Closes the autocomplete suggestion panel.\n * @return {?}\n */\nclosePanel(): void {\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._closingActionsSubscription.unsubscribe();\n    }\n\n    this._resetPlaceholder();\n\n    if (this._panelOpen) {\n      this._panelOpen = false;\n\n      // We need to trigger change detection manually, because\n      // `fromEvent` doesn't seem to do it at the proper time.\n      // This ensures that the placeholder is reset when the\n      // user clicks outside.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n/**\n * A stream of actions that should close the autocomplete panel, including\n * when an option is selected, on blur, and when TAB is pressed.\n * @return {?}\n */\nget panelClosingActions(): Observable<MdOptionSelectionChange> {\n    return merge(\n      this.optionSelections,\n      this.autocomplete._keyManager.tabOut,\n      this._outsideClickStream\n    );\n  }\n/**\n * Stream of autocomplete option selections.\n * @return {?}\n */\nget optionSelections(): Observable<MdOptionSelectionChange> {\n    return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n  }\n/**\n * The currently active option, coerced to MdOption type.\n * @return {?}\n */\nget activeOption(): MdOption | null {\n    if (this.autocomplete && this.autocomplete._keyManager) {\n      return this.autocomplete._keyManager.activeItem;\n    }\n\n    return null;\n  }\n/**\n * Stream of clicks outside of the autocomplete panel.\n * @return {?}\n */\nprivate get _outsideClickStream(): Observable<any> {\n    if (!this._document) {\n      return observableOf(null);\n    }\n\n    return RxChain.from(merge(\n      fromEvent(this._document, 'click'),\n      fromEvent(this._document, 'touchend')\n    )).call(filter, (event: MouseEvent | TouchEvent) => {\n      const /** @type {?} */ clickTarget = /** @type {?} */(( event.target as HTMLElement));\n      const /** @type {?} */ formField = this._formField ?\n          this._formField._elementRef.nativeElement : null;\n\n      return this._panelOpen &&\n             clickTarget !== this._element.nativeElement &&\n             (!formField || !formField.contains(clickTarget)) &&\n             (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n    }).result();\n  }\n/**\n * Sets the autocomplete's value. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} value New value to be written to the model.\n * @return {?}\n */\nwriteValue(value: any): void {\n    Promise.resolve(null).then(() => this._setTriggerValue(value));\n  }\n/**\n * Saves a callback function to be invoked when the autocomplete's value\n * changes from user input. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the value changes.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n/**\n * Saves a callback function to be invoked when the autocomplete is blurred\n * by the user. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the component has been touched.\n * @return {?}\n */\nregisterOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ESCAPE && this.panelOpen) {\n      this._resetActiveItem();\n      this.closePanel();\n      event.stopPropagation();\n    } else if (this.activeOption && event.keyCode === ENTER && this.panelOpen) {\n      this.activeOption._selectViaInteraction();\n      this._resetActiveItem();\n      event.preventDefault();\n    } else {\n      const /** @type {?} */ prevActiveItem = this.autocomplete._keyManager.activeItem;\n      const /** @type {?} */ isArrowKey = event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW;\n\n      if (this.panelOpen) {\n        this.autocomplete._keyManager.onKeydown(event);\n      } else if (isArrowKey) {\n        this.openPanel();\n      }\n\n      Promise.resolve().then(() => {\n        if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n          this._scrollToOption();\n        }\n      });\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleInput(event: KeyboardEvent): void {\n    // We need to ensure that the input is focused, because IE will fire the `input`\n    // event on focus/blur/load if the input has a placeholder. See:\n    // https://connect.microsoft.com/IE/feedback/details/885747/\n    if (document.activeElement === event.target) {\n      this._onChange(( /** @type {?} */((event.target as HTMLInputElement))).value);\n      this.openPanel();\n    }\n  }\n/**\n * @return {?}\n */\n_handleFocus(): void {\n    this._attachOverlay();\n    this._floatPlaceholder(true);\n  }\n/**\n * In \"auto\" mode, the placeholder will animate down as soon as focus is lost.\n * This causes the value to jump when selecting an option with the mouse.\n * This method manually floats the placeholder until the panel can be closed.\n * @param {?=} shouldAnimate Whether the placeholder should be animated when it is floated.\n * @return {?}\n */\nprivate _floatPlaceholder(shouldAnimate = false): void {\n    if (this._formField && this._formField.floatPlaceholder === 'auto') {\n      if (shouldAnimate) {\n        this._formField._animateAndLockPlaceholder();\n      } else {\n        this._formField.floatPlaceholder = 'always';\n      }\n\n      this._manuallyFloatingPlaceholder = true;\n    }\n  }\n/**\n * If the placeholder has been manually elevated, return it to its normal state.\n * @return {?}\n */\nprivate _resetPlaceholder(): void  {\n    if (this._manuallyFloatingPlaceholder) {\n      this._formField.floatPlaceholder = 'auto';\n      this._manuallyFloatingPlaceholder = false;\n    }\n  }\n/**\n * Given that we are not actually focusing active options, we must manually adjust scroll\n * to reveal options below the fold. First, we find the offset of the option from the top\n * of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n * the panel height + the option height, so the active option will be just visible at the\n * bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n * will become the offset. If that offset is visible within the panel already, the scrollTop is\n * not adjusted.\n * @return {?}\n */\nprivate _scrollToOption(): void {\n    const /** @type {?} */ activeOptionIndex = this.autocomplete._keyManager.activeItemIndex || 0;\n    const /** @type {?} */ labelCount = MdOption.countGroupLabelsBeforeOption(activeOptionIndex,\n        this.autocomplete.options, this.autocomplete.optionGroups);\n    const /** @type {?} */ optionOffset = (activeOptionIndex + labelCount) * AUTOCOMPLETE_OPTION_HEIGHT;\n    const /** @type {?} */ panelTop = this.autocomplete._getScrollTop();\n\n    if (optionOffset < panelTop) {\n      // Scroll up to reveal selected option scrolled above the panel top\n      this.autocomplete._setScrollTop(optionOffset);\n    } else if (optionOffset + AUTOCOMPLETE_OPTION_HEIGHT > panelTop + AUTOCOMPLETE_PANEL_HEIGHT) {\n      // Scroll down to reveal selected option scrolled below the panel bottom\n      const /** @type {?} */ newScrollTop =\n          Math.max(0, optionOffset - AUTOCOMPLETE_PANEL_HEIGHT + AUTOCOMPLETE_OPTION_HEIGHT);\n      this.autocomplete._setScrollTop(newScrollTop);\n    }\n  }\n/**\n * This method listens to a stream of panel closing actions and resets the\n * stream every time the option list changes.\n * @return {?}\n */\nprivate _subscribeToClosingActions(): Subscription {\n    const /** @type {?} */ firstStable = first.call(this._zone.onStable);\n    const /** @type {?} */ optionChanges = map.call(this.autocomplete.options.changes, () =>\n      this._positionStrategy.recalculateLastPosition());\n\n    // When the zone is stable initially, and when the option list changes...\n    return RxChain.from(merge(firstStable, optionChanges))\n      // create a new stream of panelClosingActions, replacing any previous streams\n      // that were created, and flatten it so our stream only emits closing events...\n      .call(switchMap, () => {\n        this._resetActiveItem();\n        this.autocomplete._setVisibility();\n        return this.panelClosingActions;\n      })\n      // when the first closing event occurs...\n      .call(first)\n      // set the value, close the panel, and complete.\n      .subscribe(event => this._setValueAndClose(event));\n  }\n/**\n * Destroys the autocomplete suggestion panel.\n * @return {?}\n */\nprivate _destroyPanel(): void {\n    if (this._overlayRef) {\n      this.closePanel();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _setTriggerValue(value: any): void {\n    const /** @type {?} */ toDisplay = this.autocomplete.displayWith ? this.autocomplete.displayWith(value) : value;\n\n    // Simply falling back to an empty string if the display value is falsy does not work properly.\n    // The display value can also be the number zero and shouldn't fall back to an empty string.\n    const /** @type {?} */ inputValue = toDisplay != null ? toDisplay : '';\n\n    // If it's used within a `MdFormField`, we should set it through the property so it can go\n    // through change detection.\n    if (this._formField) {\n      this._formField._control.value = inputValue;\n    } else {\n      this._element.nativeElement.value = inputValue;\n    }\n  }\n/**\n * This method closes the panel, and if a value is specified, also sets the associated\n * control to that value. It will also mark the control as dirty if this interaction\n * stemmed from the user.\n * @param {?} event\n * @return {?}\n */\nprivate _setValueAndClose(event: MdOptionSelectionChange | null): void {\n    if (event && event.source) {\n      this._clearPreviousSelectedOption(event.source);\n      this._setTriggerValue(event.source.value);\n      this._onChange(event.source.value);\n      this._element.nativeElement.focus();\n      this.autocomplete._emitSelectEvent(event.source);\n    }\n\n    this.closePanel();\n  }\n/**\n * Clear any previous selected option and emit a selection change event for this option\n * @param {?} skip\n * @return {?}\n */\nprivate _clearPreviousSelectedOption(skip: MdOption) {\n    this.autocomplete.options.forEach(option => {\n      if (option != skip && option.selected) {\n        option.deselect();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate _attachOverlay(): void {\n    if (!this.autocomplete) {\n      throw getMdAutocompleteMissingPanelError();\n    }\n\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n      this._overlayRef = this._overlay.create(this._getOverlayConfig());\n    } else {\n      /** Update the panel width, in case the host width has changed */\n      this._overlayRef.getState().width = this._getHostWidth();\n      this._overlayRef.updateSize();\n    }\n\n    if (this._overlayRef && !this._overlayRef.hasAttached()) {\n      this._overlayRef.attach(this._portal);\n      this._closingActionsSubscription = this._subscribeToClosingActions();\n    }\n\n    this.autocomplete._setVisibility();\n    this._panelOpen = true;\n  }\n/**\n * @return {?}\n */\nprivate _getOverlayConfig(): OverlayState {\n    const /** @type {?} */ overlayState = new OverlayState();\n    overlayState.positionStrategy = this._getOverlayPosition();\n    overlayState.width = this._getHostWidth();\n    overlayState.direction = this._dir ? this._dir.value : 'ltr';\n    overlayState.scrollStrategy = this._scrollStrategy();\n    return overlayState;\n  }\n/**\n * @return {?}\n */\nprivate _getOverlayPosition(): PositionStrategy {\n    this._positionStrategy =  this._overlay.position().connectedTo(\n        this._getConnectedElement(),\n        {originX: 'start', originY: 'bottom'}, {overlayX: 'start', overlayY: 'top'})\n        .withFallbackPosition(\n            {originX: 'start', originY: 'top'}, {overlayX: 'start', overlayY: 'bottom'}\n        );\n    return this._positionStrategy;\n  }\n/**\n * @return {?}\n */\nprivate _getConnectedElement(): ElementRef {\n    return this._formField ? this._formField._connectionContainerRef : this._element;\n  }\n/**\n * Returns the width of the input element, so the panel width can match it.\n * @return {?}\n */\nprivate _getHostWidth(): number {\n    return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n  }\n/**\n * Reset active item to -1 so arrow events will activate the correct options.\n * @return {?}\n */\nprivate _resetActiveItem(): void {\n    this.autocomplete._keyManager.setActiveItem(-1);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `input[mdAutocomplete], input[matAutocomplete],\n             textarea[mdAutocomplete], textarea[matAutocomplete]`,\n  host: {\n    'role': 'combobox',\n    'autocomplete': 'off',\n    'aria-autocomplete': 'list',\n    'aria-multiline': 'false',\n    '[attr.aria-activedescendant]': 'activeOption?.id',\n    '[attr.aria-expanded]': 'panelOpen.toString()',\n    '[attr.aria-owns]': 'autocomplete?.id',\n    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n    // a little earlier. This avoids issues where IE delays the focusing of the input.\n    '(focusin)': '_handleFocus()',\n    '(blur)': '_onTouched()',\n    '(input)': '_handleInput($event)',\n    '(keydown)': '_handleKeydown($event)',\n  },\n  providers: [MD_AUTOCOMPLETE_VALUE_ACCESSOR]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Overlay, },\n{type: ViewContainerRef, },\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_AUTOCOMPLETE_SCROLL_STRATEGY, ] }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: MdFormField, decorators: [{ type: Optional }, { type: Host }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'autocomplete': [{ type: Input, args: ['mdAutocomplete', ] },],\n'_matAutocomplete': [{ type: Input, args: ['matAutocomplete', ] },],\n};\n}\n\nfunction MdAutocompleteTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocompleteTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocompleteTrigger.ctorParameters;\n/** @type {?} */\nMdAutocompleteTrigger.propDecorators;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._overlayRef;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._portal;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._panelOpen;\n/**\n * Strategy that is used to position the panel.\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._positionStrategy;\n/**\n * Whether or not the placeholder state is being overridden.\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._manuallyFloatingPlaceholder;\n/**\n * The subscription for closing actions (some are bound to document).\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._closingActionsSubscription;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._onChange;\n/**\n * View -> model callback called when autocomplete has been touched\n * @type {?}\n */\nMdAutocompleteTrigger.prototype._onTouched;\n/** @type {?} */\nMdAutocompleteTrigger.prototype.autocomplete;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._element;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._overlay;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._viewContainerRef;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._zone;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._changeDetectorRef;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._scrollStrategy;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._dir;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._formField;\n/** @type {?} */\nMdAutocompleteTrigger.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport {MdOption, MdOptgroup} from '../core';\nimport {ActiveDescendantKeyManager} from '@angular/cdk/a11y';\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueAutocompleteIdCounter = 0;\n/**\n * Event object that is emitted when an autocomplete option is selected\n */\nexport class MdAutocompleteSelectedEvent {\n/**\n * @param {?} source\n * @param {?} option\n */\nconstructor(public source: MdAutocomplete,\npublic option: MdOption) { }\n}\n\nfunction MdAutocompleteSelectedEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocompleteSelectedEvent.prototype.source;\n/** @type {?} */\nMdAutocompleteSelectedEvent.prototype.option;\n}\n\nexport class MdAutocomplete implements AfterContentInit {\n/**\n * Manages active item in option list based on key events.\n */\n_keyManager: ActiveDescendantKeyManager<MdOption>;\n/**\n * Whether the autocomplete panel should be visible, depending on option length.\n */\nshowPanel = false;\n/**\n * \\@docs-private\n */\ntemplate: TemplateRef<any>;\n/**\n * Element for the panel containing the autocomplete options.\n */\npanel: ElementRef;\n/**\n * \\@docs-private\n */\noptions: QueryList<MdOption>;\n/**\n * \\@docs-private\n */\noptionGroups: QueryList<MdOptgroup>;\n/**\n * Function that maps an option's control value to its display value in the trigger.\n */\ndisplayWith: ((value: any) => string) | null = null;\n/**\n * Event that is emitted whenever an option from the list is selected.\n */\noptionSelected: EventEmitter<MdAutocompleteSelectedEvent> =\n      new EventEmitter<MdAutocompleteSelectedEvent>();\n/**\n * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n */\nid: string = `md-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n/**\n * @param {?} _changeDetectorRef\n */\nconstructor(private _changeDetectorRef: ChangeDetectorRef) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager<MdOption>(this.options).withWrap();\n  }\n/**\n * Sets the panel scrollTop. This allows us to manually scroll to display options\n * above or below the fold, as they are not actually being focused when active.\n * @param {?} scrollTop\n * @return {?}\n */\n_setScrollTop(scrollTop: number): void {\n    if (this.panel) {\n      this.panel.nativeElement.scrollTop = scrollTop;\n    }\n  }\n/**\n * Returns the panel's scrollTop.\n * @return {?}\n */\n_getScrollTop(): number {\n    return this.panel ? this.panel.nativeElement.scrollTop : 0;\n  }\n/**\n * Panel should hide itself when the option list is empty.\n * @return {?}\n */\n_setVisibility(): void {\n    Promise.resolve().then(() => {\n      this.showPanel = !!this.options.length;\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * Emits the `select` event.\n * @param {?} option\n * @return {?}\n */\n_emitSelectEvent(option: MdOption): void {\n    const /** @type {?} */ event = new MdAutocompleteSelectedEvent(this, option);\n    this.optionSelected.emit(event);\n  }\n/**\n * Sets a class on the panel based on whether it is visible.\n * @return {?}\n */\n_getClassList() {\n    return {\n      'mat-autocomplete-visible': this.showPanel,\n      'mat-autocomplete-hidden': !this.showPanel\n    };\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-autocomplete, mat-autocomplete',\n  templateUrl: 'autocomplete.html',\n  styleUrls: ['autocomplete.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  exportAs: 'mdAutocomplete',\n  host: {\n    'class': 'mat-autocomplete'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'template': [{ type: ViewChild, args: [TemplateRef, ] },],\n'panel': [{ type: ViewChild, args: ['panel', ] },],\n'options': [{ type: ContentChildren, args: [MdOption, { descendants: true }, ] },],\n'optionGroups': [{ type: ContentChildren, args: [MdOptgroup, ] },],\n'displayWith': [{ type: Input },],\n'optionSelected': [{ type: Output },],\n};\n}\n\nfunction MdAutocomplete_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAutocomplete.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAutocomplete.ctorParameters;\n/** @type {?} */\nMdAutocomplete.propDecorators;\n/**\n * Manages active item in option list based on key events.\n * @type {?}\n */\nMdAutocomplete.prototype._keyManager;\n/**\n * Whether the autocomplete panel should be visible, depending on option length.\n * @type {?}\n */\nMdAutocomplete.prototype.showPanel;\n/**\n * \\@docs-private\n * @type {?}\n */\nMdAutocomplete.prototype.template;\n/**\n * Element for the panel containing the autocomplete options.\n * @type {?}\n */\nMdAutocomplete.prototype.panel;\n/**\n * \\@docs-private\n * @type {?}\n */\nMdAutocomplete.prototype.options;\n/**\n * \\@docs-private\n * @type {?}\n */\nMdAutocomplete.prototype.optionGroups;\n/**\n * Function that maps an option's control value to its display value in the trigger.\n * @type {?}\n */\nMdAutocomplete.prototype.displayWith;\n/**\n * Event that is emitted whenever an option from the list is selected.\n * @type {?}\n */\nMdAutocomplete.prototype.optionSelected;\n/**\n * Unique ID to be used by autocomplete trigger's \"aria-owns\" property.\n * @type {?}\n */\nMdAutocomplete.prototype.id;\n/** @type {?} */\nMdAutocomplete.prototype._changeDetectorRef;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {MdCommonModule} from '../core';\nimport {MdDialog, MD_DIALOG_SCROLL_STRATEGY_PROVIDER} from './dialog';\nimport {MdDialogContainer} from './dialog-container';\nimport {\n  MdDialogClose,\n  MdDialogContent,\n  MdDialogTitle,\n  MdDialogActions\n} from './dialog-content-directives';\nexport class MdDialogModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    A11yModule,\n    MdCommonModule,\n  ],\n  exports: [\n    MdDialogContainer,\n    MdDialogClose,\n    MdDialogTitle,\n    MdDialogContent,\n    MdDialogActions,\n    MdCommonModule,\n  ],\n  declarations: [\n    MdDialogContainer,\n    MdDialogClose,\n    MdDialogTitle,\n    MdDialogActions,\n    MdDialogContent,\n  ],\n  providers: [\n    MdDialog,\n    MD_DIALOG_SCROLL_STRATEGY_PROVIDER,\n  ],\n  entryComponents: [MdDialogContainer],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdDialogModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogModule.ctorParameters;\n}\n\n\nexport {MD_DIALOG_DATA,MD_DIALOG_SCROLL_STRATEGY,MD_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_DIALOG_SCROLL_STRATEGY_PROVIDER,MdDialog} from './dialog';\nexport {throwMdDialogContentAlreadyAttachedError,MdDialogContainer} from './dialog-container';\nexport {MdDialogClose,MdDialogTitle,MdDialogContent,MdDialogActions} from './dialog-content-directives';\nexport {DialogRole,DialogPosition,MdDialogConfig} from './dialog-config';\nexport {MdDialogRef} from './dialog-ref';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Input, OnChanges, OnInit, Optional, SimpleChanges} from '@angular/core';\nimport {MdDialogRef} from './dialog-ref';\nimport {MdDialogContainer} from './dialog-container';\n/**\n * Counter used to generate unique IDs for dialog elements.\n */\nlet dialogElementUid = 0;\n/**\n * Button that will close the current dialog.\n */\nexport class MdDialogClose implements OnChanges {\n/**\n * Screenreader label for the button.\n */\nariaLabel: string = 'Close dialog';\n/**\n * Dialog close input.\n */\ndialogResult: any;\n\n   _matDialogClose: any;\n   _mdDialogClose: any;\n   _matDialogCloseResult: any;\n/**\n * @param {?} dialogRef\n */\nconstructor(public dialogRef: MdDialogRef<any>) { }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    const /** @type {?} */ proxiedChange = changes._matDialogClose || changes._mdDialogClose ||\n        changes._matDialogCloseResult;\n\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `button[md-dialog-close], button[mat-dialog-close],\n             button[mdDialogClose], button[matDialogClose]`,\n  host: {\n    '(click)': 'dialogRef.close(dialogResult)',\n    '[attr.aria-label]': 'ariaLabel',\n    'type': 'button', // Prevents accidental form submits.\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdDialogRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'dialogResult': [{ type: Input, args: ['md-dialog-close', ] },],\n'_matDialogClose': [{ type: Input, args: ['matDialogClose', ] },],\n'_mdDialogClose': [{ type: Input, args: ['mdDialogClose', ] },],\n'_matDialogCloseResult': [{ type: Input, args: ['mat-dialog-close', ] },],\n};\n}\n\nfunction MdDialogClose_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogClose.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogClose.ctorParameters;\n/** @type {?} */\nMdDialogClose.propDecorators;\n/**\n * Screenreader label for the button.\n * @type {?}\n */\nMdDialogClose.prototype.ariaLabel;\n/**\n * Dialog close input.\n * @type {?}\n */\nMdDialogClose.prototype.dialogResult;\n/** @type {?} */\nMdDialogClose.prototype._matDialogClose;\n/** @type {?} */\nMdDialogClose.prototype._mdDialogClose;\n/** @type {?} */\nMdDialogClose.prototype._matDialogCloseResult;\n/** @type {?} */\nMdDialogClose.prototype.dialogRef;\n}\n\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\nexport class MdDialogTitle implements OnInit {\n   id = `md-dialog-title-${dialogElementUid++}`;\n/**\n * @param {?} _container\n */\nconstructor(\nprivate _container: MdDialogContainer) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this._container && !this._container._ariaLabelledBy) {\n      Promise.resolve().then(() => this._container._ariaLabelledBy = this.id);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-dialog-title], [mat-dialog-title], [mdDialogTitle], [matDialogTitle]',\n  host: {\n    'class': 'mat-dialog-title',\n    '[id]': 'id',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdDialogContainer, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n};\n}\n\nfunction MdDialogTitle_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogTitle.ctorParameters;\n/** @type {?} */\nMdDialogTitle.propDecorators;\n/** @type {?} */\nMdDialogTitle.prototype.id;\n/** @type {?} */\nMdDialogTitle.prototype._container;\n}\n\n/**\n * Scrollable content container of a dialog.\n */\nexport class MdDialogContent { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `[md-dialog-content], md-dialog-content, [mat-dialog-content], mat-dialog-content,\n             [mdDialogContent], [matDialogContent]`,\n  host: {'class': 'mat-dialog-content'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdDialogContent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogContent.ctorParameters;\n}\n\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\nexport class MdDialogActions { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `[md-dialog-actions], md-dialog-actions, [mat-dialog-actions], mat-dialog-actions,\n             [mdDialogActions], [matDialogActions]`,\n  host: {'class': 'mat-dialog-actions'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdDialogActions_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogActions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogActions.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ComponentRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {ComponentPortal, ComponentType, TemplatePortal} from '@angular/cdk/portal';\nimport {\n  BlockScrollStrategy,\n  Overlay,\n  OverlayRef,\n  OverlayState,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {startWith} from '@angular/cdk/rxjs';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {defer} from 'rxjs/observable/defer';\nimport {PortalInjector} from '../core/portal/portal-injector';\nimport {extendObject} from '../core/util/object-extend';\nimport {MdDialogConfig} from './dialog-config';\nimport {MdDialogRef} from './dialog-ref';\nimport {MdDialogContainer} from './dialog-container';\n\nexport const /** @type {?} */ MD_DIALOG_DATA = new InjectionToken<any>('MdDialogData');\n/**\n * Injection token that determines the scroll handling while the dialog is open.\n */\nexport const MD_DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-dialog-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => BlockScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n/**\n * \\@docs-private\n */\nexport const MD_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Service to open Material Design modal dialogs.\n */\nexport class MdDialog {\nprivate _openDialogsAtThisLevel: MdDialogRef<any>[] = [];\nprivate _afterAllClosedAtThisLevel = new Subject<void>();\nprivate _afterOpenAtThisLevel = new Subject<MdDialogRef<any>>();\nprivate _boundKeydown = this._handleKeydown.bind(this);\n/**\n * Keeps track of the currently-open dialogs.\n * @return {?}\n */\nget openDialogs(): MdDialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n/**\n * Stream that emits when a dialog has been opened.\n * @return {?}\n */\nget afterOpen(): Subject<MdDialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpen : this._afterOpenAtThisLevel;\n  }\n/**\n * @return {?}\n */\nget _afterAllClosed() {\n    const /** @type {?} */ parent = this._parentDialog;\n    return parent ? parent._afterAllClosed : this._afterAllClosedAtThisLevel;\n  }\n/**\n * Stream that emits when all open dialog have finished closing.\n * Will emit on subscribe if there are no open dialogs to begin with.\n */\nafterAllClosed: Observable<void> = defer<void>(() => this.openDialogs.length ?\n      this._afterAllClosed :\n      startWith.call(this._afterAllClosed, undefined));\n/**\n * @param {?} _overlay\n * @param {?} _injector\n * @param {?} _scrollStrategy\n * @param {?} _location\n * @param {?} _parentDialog\n */\nconstructor(\nprivate _overlay: Overlay,\nprivate _injector: Injector,\nprivate _scrollStrategy,\nprivate _location: Location,\nprivate _parentDialog: MdDialog) {\n\n    // Close all of the dialogs when the user goes forwards/backwards in history or when the\n    // location hash changes. Note that this usually doesn't include clicking on links (unless\n    // the user is using the `HashLocationStrategy`).\n    if (!_parentDialog && _location) {\n      _location.subscribe(() => this.closeAll());\n    }\n  }\n/**\n * Opens a modal dialog containing the given component.\n * @template T\n * @param {?} componentOrTemplateRef Type of the component to load into the dialog,\n *     or a TemplateRef to instantiate as the dialog content.\n * @param {?=} config Extra configuration options.\n * @return {?} Reference to the newly-opened dialog.\n */\nopen<T>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n          config?: MdDialogConfig): MdDialogRef<T> {\n\n    const /** @type {?} */ inProgressDialog = this.openDialogs.find(dialog => dialog._isAnimating());\n\n    // If there's a dialog that is in the process of being opened, return it instead.\n    if (inProgressDialog) {\n      return inProgressDialog;\n    }\n\n    config = _applyConfigDefaults(config);\n\n    if (config.id && this.getDialogById(config.id)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const /** @type {?} */ overlayRef = this._createOverlay(config);\n    const /** @type {?} */ dialogContainer = this._attachDialogContainer(overlayRef, config);\n    const /** @type {?} */ dialogRef =\n        this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config);\n\n    if (!this.openDialogs.length) {\n      document.addEventListener('keydown', this._boundKeydown);\n    }\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n    this.afterOpen.next(dialogRef);\n\n    return dialogRef;\n  }\n/**\n * Closes all of the currently-open dialogs.\n * @return {?}\n */\ncloseAll(): void {\n    let /** @type {?} */ i = this.openDialogs.length;\n\n    while (i--) {\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\n      // runs on the next microtask, in addition to modifying the array as we're going\n      // through it. We loop through all of them and call close without assuming that\n      // they'll be removed from the list instantaneously.\n      this.openDialogs[i].close();\n    }\n  }\n/**\n * Finds an open dialog by its id.\n * @param {?} id ID to use when looking up the dialog.\n * @return {?}\n */\ngetDialogById(id: string): MdDialogRef<any> | undefined {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n/**\n * Creates the overlay into which the dialog will be loaded.\n * @param {?} config The dialog configuration.\n * @return {?} A promise resolving to the OverlayRef for the created overlay.\n */\nprivate _createOverlay(config: MdDialogConfig): OverlayRef {\n    const /** @type {?} */ overlayState = this._getOverlayState(config);\n    return this._overlay.create(overlayState);\n  }\n/**\n * Creates an overlay state from a dialog config.\n * @param {?} dialogConfig The dialog configuration.\n * @return {?} The overlay configuration.\n */\nprivate _getOverlayState(dialogConfig: MdDialogConfig): OverlayState {\n    const /** @type {?} */ overlayState = new OverlayState();\n    overlayState.panelClass = dialogConfig.panelClass;\n    overlayState.hasBackdrop = dialogConfig.hasBackdrop;\n    overlayState.scrollStrategy = this._scrollStrategy();\n    overlayState.direction = dialogConfig.direction;\n    if (dialogConfig.backdropClass) {\n      overlayState.backdropClass = dialogConfig.backdropClass;\n    }\n    overlayState.positionStrategy = this._overlay.position().global();\n\n    return overlayState;\n  }\n/**\n * Attaches an MdDialogContainer to a dialog's already-created overlay.\n * @param {?} overlay Reference to the dialog's underlying overlay.\n * @param {?} config The dialog configuration.\n * @return {?} A promise resolving to a ComponentRef for the attached container.\n */\nprivate _attachDialogContainer(overlay: OverlayRef, config: MdDialogConfig): MdDialogContainer {\n    let /** @type {?} */ containerPortal = new ComponentPortal(MdDialogContainer, config.viewContainerRef);\n    let /** @type {?} */ containerRef: ComponentRef<MdDialogContainer> = overlay.attach(containerPortal);\n    containerRef.instance._config = config;\n\n    return containerRef.instance;\n  }\n/**\n * Attaches the user-provided component to the already-created MdDialogContainer.\n * @template T\n * @param {?} componentOrTemplateRef The type of component being loaded into the dialog,\n *     or a TemplateRef to instantiate as the content.\n * @param {?} dialogContainer Reference to the wrapping MdDialogContainer.\n * @param {?} overlayRef Reference to the overlay in which the dialog resides.\n * @param {?} config The dialog configuration.\n * @return {?} A promise resolving to the MdDialogRef that should be returned to the user.\n */\nprivate _attachDialogContent<T>(\n      componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n      dialogContainer: MdDialogContainer,\n      overlayRef: OverlayRef,\n      config: MdDialogConfig): MdDialogRef<T> {\n\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const /** @type {?} */ dialogRef = new MdDialogRef<T>(overlayRef, dialogContainer, config.id);\n\n    // When the dialog backdrop is clicked, we want to close it.\n    if (config.hasBackdrop) {\n      overlayRef.backdropClick().subscribe(() => {\n        if (!dialogRef.disableClose) {\n          dialogRef.close();\n        }\n      });\n    }\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      dialogContainer.attachTemplatePortal(\n        new TemplatePortal<T>(componentOrTemplateRef, /** @type {?} */(( null)), /** @type {?} */((\n          <any>{ $implicit: config.data, dialogRef }))));\n    } else {\n      const /** @type {?} */ injector = this._createInjector<T>(config, dialogRef, dialogContainer);\n      const /** @type {?} */ contentRef = dialogContainer.attachComponentPortal(\n          new ComponentPortal(componentOrTemplateRef, undefined, injector));\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    dialogRef\n      .updateSize(config.width, config.height)\n      .updatePosition(config.position);\n\n    return dialogRef;\n  }\n/**\n * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n * of a dialog to close itself and, optionally, to return a value.\n * @template T\n * @param {?} config Config object that is used to construct the dialog.\n * @param {?} dialogRef Reference to the dialog.\n * @param {?} dialogContainer\n * @return {?} The custom injector that can be used inside the dialog.\n */\nprivate _createInjector<T>(\n      config: MdDialogConfig,\n      dialogRef: MdDialogRef<T>,\n      dialogContainer: MdDialogContainer): PortalInjector {\n\n    const /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const /** @type {?} */ injectionTokens = new WeakMap();\n\n    injectionTokens.set(MdDialogRef, dialogRef);\n    injectionTokens.set(MdDialogContainer, dialogContainer);\n    injectionTokens.set(MD_DIALOG_DATA, config.data);\n\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\n  }\n/**\n * Removes a dialog from the array of open dialogs.\n * @param {?} dialogRef Dialog to be removed.\n * @return {?}\n */\nprivate _removeOpenDialog(dialogRef: MdDialogRef<any>) {\n    const /** @type {?} */ index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n\n      // no open dialogs are left, call next on afterAllClosed Subject\n      if (!this.openDialogs.length) {\n        this._afterAllClosed.next();\n        document.removeEventListener('keydown', this._boundKeydown);\n      }\n    }\n  }\n/**\n * Handles global key presses while there are open dialogs. Closes the\n * top dialog when the user presses escape.\n * @param {?} event\n * @return {?}\n */\nprivate _handleKeydown(event: KeyboardEvent): void {\n    const /** @type {?} */ topDialog = this.openDialogs[this.openDialogs.length - 1];\n    const /** @type {?} */ canClose = topDialog ? !topDialog.disableClose : false;\n\n    if (event.keyCode === ESCAPE && canClose) {\n      topDialog.close();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: Injector, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_DIALOG_SCROLL_STRATEGY, ] }, ]},\n{type: Location, decorators: [{ type: Optional }, ]},\n{type: MdDialog, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction MdDialog_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialog.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialog.ctorParameters;\n/** @type {?} */\nMdDialog.prototype._openDialogsAtThisLevel;\n/** @type {?} */\nMdDialog.prototype._afterAllClosedAtThisLevel;\n/** @type {?} */\nMdDialog.prototype._afterOpenAtThisLevel;\n/** @type {?} */\nMdDialog.prototype._boundKeydown;\n/**\n * Stream that emits when all open dialog have finished closing.\n * Will emit on subscribe if there are no open dialogs to begin with.\n * @type {?}\n */\nMdDialog.prototype.afterAllClosed;\n/** @type {?} */\nMdDialog.prototype._overlay;\n/** @type {?} */\nMdDialog.prototype._injector;\n/** @type {?} */\nMdDialog.prototype._scrollStrategy;\n/** @type {?} */\nMdDialog.prototype._location;\n/** @type {?} */\nMdDialog.prototype._parentDialog;\n}\n\n/**\n * Applies default options to the dialog config.\n * @param {?=} config Config to be modified.\n * @return {?} The new configuration object.\n */\nfunction _applyConfigDefaults(config?: MdDialogConfig): MdDialogConfig {\n  return extendObject(new MdDialogConfig(), config);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  NgZone,\n  Optional,\n  ChangeDetectorRef,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {\n  BasePortalHost,\n  ComponentPortal,\n  PortalHostDirective,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport {FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\nimport {MdDialogConfig} from './dialog-config';\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalHost without an origin.\n * \\@docs-private\n * @return {?}\n */\nexport function throwMdDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * \\@docs-private\n */\nexport class MdDialogContainer extends BasePortalHost {\n/**\n * The portal host inside of this container into which the dialog content will be loaded.\n */\n_portalHost: PortalHostDirective;\n/**\n * The class that traps and manages focus within the dialog.\n */\nprivate _focusTrap: FocusTrap;\n/**\n * Element that was focused before the dialog was opened. Save this to restore upon close.\n */\nprivate _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n/**\n * The dialog configuration.\n */\n_config: MdDialogConfig;\n/**\n * State of the dialog animation.\n */\n_state: 'void' | 'enter' | 'exit' = 'enter';\n/**\n * Emits when an animation state changes.\n */\n_animationStateChanged = new EventEmitter<AnimationEvent>();\n/**\n * ID of the element that should be considered as the dialog's label.\n */\n_ariaLabelledBy: string | null = null;\n/**\n * Whether the container is currently mid-animation.\n */\n_isAnimating = false;\n/**\n * @param {?} _ngZone\n * @param {?} _elementRef\n * @param {?} _focusTrapFactory\n * @param {?} _changeDetectorRef\n * @param {?} _document\n */\nconstructor(\nprivate _ngZone: NgZone,\nprivate _elementRef: ElementRef,\nprivate _focusTrapFactory: FocusTrapFactory,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _document: any) {\n\n    super();\n  }\n/**\n * Attach a ComponentPortal as content to this dialog container.\n * @template T\n * @param {?} portal Portal to be attached as the dialog content.\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalHost.hasAttached()) {\n      throwMdDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalHost.attachComponentPortal(portal);\n  }\n/**\n * Attach a TemplatePortal as content to this dialog container.\n * @template C\n * @param {?} portal Portal to be attached as the dialog content.\n * @return {?}\n */\nattachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalHost.hasAttached()) {\n      throwMdDialogContentAlreadyAttachedError();\n    }\n\n    this._savePreviouslyFocusedElement();\n    return this._portalHost.attachTemplatePortal(portal);\n  }\n/**\n * Moves the focus inside the focus trap.\n * @return {?}\n */\nprivate _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n      // If we didn't find any focusable elements inside the dialog, focus the\n      // container so the user can't tab into other elements behind it.\n      if (!hasMovedFocus) {\n        this._elementRef.nativeElement.focus();\n      }\n    });\n  }\n/**\n * Restores focus to the element that was focused before the dialog opened.\n * @return {?}\n */\nprivate _restoreFocus() {\n    const /** @type {?} */ toFocus = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n/**\n * Saves a reference to the element that was focused before the dialog was opened.\n * @return {?}\n */\nprivate _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = /** @type {?} */(( this._document.activeElement as HTMLElement));\n    }\n  }\n/**\n * Callback, invoked whenever an animation on the host completes.\n * @param {?} event\n * @return {?}\n */\n_onAnimationDone(event: AnimationEvent) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else if (event.toState === 'exit') {\n      this._restoreFocus();\n    }\n\n    this._animationStateChanged.emit(event);\n    this._isAnimating = false;\n  }\n/**\n * Callback, invoked when an animation on the host starts.\n * @param {?} event\n * @return {?}\n */\n_onAnimationStart(event: AnimationEvent) {\n    this._isAnimating = true;\n    this._animationStateChanged.emit(event);\n  }\n/**\n * Starts the dialog exit animation.\n * @return {?}\n */\n_startExitAnimation(): void {\n    this._state = 'exit';\n\n    // Mark the container for check so it can react if the\n    // view container is using OnPush change detection.\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-dialog-container, mat-dialog-container',\n  templateUrl: 'dialog-container.html',\n  styleUrls: ['dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('slideDialog', [\n      // Note: The `enter` animation doesn't transition to something like `translate3d(0, 0, 0)\n      // scale(1)`, because for some reason specifying the transform explicitly, causes IE both\n      // to blur the dialog content and decimate the animation performance. Leaving it as `none`\n      // solves both issues.\n      state('enter', style({ transform: 'none', opacity: 1 })),\n      state('void', style({ transform: 'translate3d(0, 25%, 0) scale(0.9)', opacity: 0 })),\n      state('exit', style({ transform: 'translate3d(0, 25%, 0)', opacity: 0 })),\n      transition('* => *', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n    ])\n  ],\n  host: {\n    'class': 'mat-dialog-container',\n    'tabindex': '-1',\n    '[attr.role]': '_config?.role',\n    '[attr.aria-labelledby]': '_ariaLabelledBy',\n    '[attr.aria-describedby]': '_config?.ariaDescribedBy || null',\n    '[@slideDialog]': '_state',\n    '(@slideDialog.start)': '_onAnimationStart($event)',\n    '(@slideDialog.done)': '_onAnimationDone($event)',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: ElementRef, },\n{type: FocusTrapFactory, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n};\n}\n\nfunction MdDialogContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDialogContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDialogContainer.ctorParameters;\n/** @type {?} */\nMdDialogContainer.propDecorators;\n/**\n * The portal host inside of this container into which the dialog content will be loaded.\n * @type {?}\n */\nMdDialogContainer.prototype._portalHost;\n/**\n * The class that traps and manages focus within the dialog.\n * @type {?}\n */\nMdDialogContainer.prototype._focusTrap;\n/**\n * Element that was focused before the dialog was opened. Save this to restore upon close.\n * @type {?}\n */\nMdDialogContainer.prototype._elementFocusedBeforeDialogWasOpened;\n/**\n * The dialog configuration.\n * @type {?}\n */\nMdDialogContainer.prototype._config;\n/**\n * State of the dialog animation.\n * @type {?}\n */\nMdDialogContainer.prototype._state;\n/**\n * Emits when an animation state changes.\n * @type {?}\n */\nMdDialogContainer.prototype._animationStateChanged;\n/**\n * ID of the element that should be considered as the dialog's label.\n * @type {?}\n */\nMdDialogContainer.prototype._ariaLabelledBy;\n/**\n * Whether the container is currently mid-animation.\n * @type {?}\n */\nMdDialogContainer.prototype._isAnimating;\n/** @type {?} */\nMdDialogContainer.prototype._ngZone;\n/** @type {?} */\nMdDialogContainer.prototype._elementRef;\n/** @type {?} */\nMdDialogContainer.prototype._focusTrapFactory;\n/** @type {?} */\nMdDialogContainer.prototype._changeDetectorRef;\n/** @type {?} */\nMdDialogContainer.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {OverlayRef, GlobalPositionStrategy} from '@angular/cdk/overlay';\nimport {filter, first, RxChain} from '@angular/cdk/rxjs';\nimport {DialogPosition} from './dialog-config';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {MdDialogContainer} from './dialog-container';\n\n\n// TODO(jelbourn): resizing\n// TODO(jelbourn): afterOpen\n\n// Counter for unique dialog ids.\nlet /** @type {?} */ uniqueId = 0;\n/**\n * Reference to a dialog opened via the MdDialog service.\n */\nexport class MdDialogRef<T> {\n/**\n * The instance of component opened into the dialog.\n */\ncomponentInstance: T;\n/**\n * Whether the user is allowed to close the dialog.\n */\ndisableClose = this._containerInstance._config.disableClose;\n/**\n * Subject for notifying the user that the dialog has finished closing.\n */\nprivate _afterClosed: Subject<any> = new Subject();\n/**\n * Subject for notifying the user that the dialog has started closing.\n */\nprivate _beforeClose: Subject<any> = new Subject();\n/**\n * Result to be passed to afterClosed.\n */\nprivate _result: any;\n/**\n * @param {?} _overlayRef\n * @param {?} _containerInstance\n * @param {?=} id\n */\nconstructor(\nprivate _overlayRef: OverlayRef,\nprivate _containerInstance: MdDialogContainer,\npublic readonly id: string = `md-dialog-${uniqueId++}`) {\n\n    RxChain.from(_containerInstance._animationStateChanged)\n      .call(filter, event => event.phaseName === 'done' && event.toState === 'exit')\n      .call(first)\n      .subscribe(() => {\n        this._overlayRef.dispose();\n        this._afterClosed.next(this._result);\n        this._afterClosed.complete();\n        this.componentInstance = null!;\n      });\n  }\n/**\n * Close the dialog.\n * @param {?=} dialogResult Optional result to return to the dialog opener.\n * @return {?}\n */\nclose(dialogResult?: any): void {\n    this._result = dialogResult;\n\n    // Transition the backdrop in parallel to the dialog.\n    RxChain.from(this._containerInstance._animationStateChanged)\n      .call(filter, event => event.phaseName === 'start')\n      .call(first)\n      .subscribe(() => {\n        this._beforeClose.next(dialogResult);\n        this._beforeClose.complete();\n        this._overlayRef.detachBackdrop();\n      });\n\n    this._containerInstance._startExitAnimation();\n  }\n/**\n * Gets an observable that is notified when the dialog is finished closing.\n * @return {?}\n */\nafterClosed(): Observable<any> {\n    return this._afterClosed.asObservable();\n  }\n/**\n * Gets an observable that is notified when the dialog has started closing.\n * @return {?}\n */\nbeforeClose(): Observable<any> {\n    return this._beforeClose.asObservable();\n  }\n/**\n * Gets an observable that emits when the overlay's backdrop has been clicked.\n * @return {?}\n */\nbackdropClick(): Observable<void> {\n    return this._overlayRef.backdropClick();\n  }\n/**\n * Updates the dialog's position.\n * @param {?=} position New dialog position.\n * @return {?}\n */\nupdatePosition(position?: DialogPosition): this {\n    let /** @type {?} */ strategy = this._getPositionStrategy();\n\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n\n    this._overlayRef.updatePosition();\n\n    return this;\n  }\n/**\n * Updates the dialog's width and height.\n * @param {?=} width New width of the dialog.\n * @param {?=} height New height of the dialog.\n * @return {?}\n */\nupdateSize(width = 'auto', height = 'auto'): this {\n    this._getPositionStrategy().width(width).height(height);\n    this._overlayRef.updatePosition();\n    return this;\n  }\n/**\n * Returns whether the dialog is animating.\n * @return {?}\n */\n_isAnimating(): boolean {\n    return this._containerInstance._isAnimating;\n  }\n/**\n * Fetches the position strategy object from the overlay ref.\n * @return {?}\n */\nprivate _getPositionStrategy(): GlobalPositionStrategy {\n    return /** @type {?} */(( this._overlayRef.getState().positionStrategy as GlobalPositionStrategy));\n  }\n}\n\nfunction MdDialogRef_tsickle_Closure_declarations() {\n/**\n * The instance of component opened into the dialog.\n * @type {?}\n */\nMdDialogRef.prototype.componentInstance;\n/**\n * Whether the user is allowed to close the dialog.\n * @type {?}\n */\nMdDialogRef.prototype.disableClose;\n/**\n * Subject for notifying the user that the dialog has finished closing.\n * @type {?}\n */\nMdDialogRef.prototype._afterClosed;\n/**\n * Subject for notifying the user that the dialog has started closing.\n * @type {?}\n */\nMdDialogRef.prototype._beforeClose;\n/**\n * Result to be passed to afterClosed.\n * @type {?}\n */\nMdDialogRef.prototype._result;\n/** @type {?} */\nMdDialogRef.prototype._overlayRef;\n/** @type {?} */\nMdDialogRef.prototype._containerInstance;\n/** @type {?} */\nMdDialogRef.prototype.id;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ViewContainerRef} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\n\n/** Valid ARIA roles for a dialog element. */\nexport type DialogRole = 'dialog' | 'alertdialog';\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  top?: string;\n  bottom?: string;\n  left?: string;\n  right?: string;\n}\n/**\n * Configuration for opening a modal dialog with the MdDialog service.\n */\nexport class MdDialogConfig {\n/**\n * Where the attached component should live in Angular's *logical* component tree.\n * This affects what is available for injection and the change detection order for the\n * component instantiated inside of the dialog. This does not affect where the dialog\n * content will be rendered.\n */\nviewContainerRef?: ViewContainerRef;\n/**\n * ID for the dialog. If omitted, a unique one will be generated.\n */\nid?: string;\n/**\n * The ARIA role of the dialog element.\n */\nrole?: DialogRole = 'dialog';\n/**\n * Custom class for the overlay pane.\n */\npanelClass?: string | string[] = '';\n/**\n * Whether the dialog has a backdrop.\n */\nhasBackdrop?: boolean = true;\n/**\n * Custom class for the backdrop,\n */\nbackdropClass?: string = '';\n/**\n * Whether the user can use escape or clicking outside to close a modal.\n */\ndisableClose?: boolean = false;\n/**\n * Width of the dialog.\n */\nwidth?: string = '';\n/**\n * Height of the dialog.\n */\nheight?: string = '';\n/**\n * Position overrides.\n */\nposition?: DialogPosition;\n/**\n * Data being injected into the child component.\n */\ndata?: any = null;\n/**\n * Layout direction for the dialog's content.\n */\ndirection?: Direction = 'ltr';\n/**\n * ID of the element that describes the dialog.\n */\nariaDescribedBy?: string | null = null;\n\n\n  // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n}\n\nfunction MdDialogConfig_tsickle_Closure_declarations() {\n/**\n * Where the attached component should live in Angular's *logical* component tree.\n * This affects what is available for injection and the change detection order for the\n * component instantiated inside of the dialog. This does not affect where the dialog\n * content will be rendered.\n * @type {?}\n */\nMdDialogConfig.prototype.viewContainerRef;\n/**\n * ID for the dialog. If omitted, a unique one will be generated.\n * @type {?}\n */\nMdDialogConfig.prototype.id;\n/**\n * The ARIA role of the dialog element.\n * @type {?}\n */\nMdDialogConfig.prototype.role;\n/**\n * Custom class for the overlay pane.\n * @type {?}\n */\nMdDialogConfig.prototype.panelClass;\n/**\n * Whether the dialog has a backdrop.\n * @type {?}\n */\nMdDialogConfig.prototype.hasBackdrop;\n/**\n * Custom class for the backdrop,\n * @type {?}\n */\nMdDialogConfig.prototype.backdropClass;\n/**\n * Whether the user can use escape or clicking outside to close a modal.\n * @type {?}\n */\nMdDialogConfig.prototype.disableClose;\n/**\n * Width of the dialog.\n * @type {?}\n */\nMdDialogConfig.prototype.width;\n/**\n * Height of the dialog.\n * @type {?}\n */\nMdDialogConfig.prototype.height;\n/**\n * Position overrides.\n * @type {?}\n */\nMdDialogConfig.prototype.position;\n/**\n * Data being injected into the child component.\n * @type {?}\n */\nMdDialogConfig.prototype.data;\n/**\n * Layout direction for the dialog's content.\n * @type {?}\n */\nMdDialogConfig.prototype.direction;\n/**\n * ID of the element that describes the dialog.\n * @type {?}\n */\nMdDialogConfig.prototype.ariaDescribedBy;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdCommonModule} from '../core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MdMenu, MD_MENU_DEFAULT_OPTIONS} from './menu-directive';\nimport {MdMenuItem} from './menu-item';\nimport {MdMenuTrigger, MD_MENU_SCROLL_STRATEGY_PROVIDER} from './menu-trigger';\nimport {MdRippleModule} from '../core/ripple/index';\nexport class MdMenuModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    OverlayModule,\n    CommonModule,\n    MdRippleModule,\n    MdCommonModule,\n  ],\n  exports: [MdMenu, MdMenuItem, MdMenuTrigger, MdCommonModule],\n  declarations: [MdMenu, MdMenuItem, MdMenuTrigger],\n  providers: [\n    MD_MENU_SCROLL_STRATEGY_PROVIDER,\n    {\n      provide: MD_MENU_DEFAULT_OPTIONS,\n      useValue: {\n        overlapTrigger: true,\n        xPosition: 'after',\n        yPosition: 'below',\n      },\n    }\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdMenuModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuModule.ctorParameters;\n}\n\n\n\nexport {MdMenu,MdMenuDefaultOptions,MD_MENU_DEFAULT_OPTIONS,MdMenuItem,MdMenuTrigger,MdMenuPanel,MenuPositionX,MenuPositionY} from './menu';\nexport {fadeInItems, transformMenu} from './menu-animations';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {\n  ConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayRef,\n  OverlayState,\n  RepositionScrollStrategy,\n  VerticalConnectionPos,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {filter, RxChain} from '@angular/cdk/rxjs';\nimport {MdMenu} from './menu-directive';\nimport {MdMenuItem} from './menu-item';\nimport {MdMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {throwMdMenuMissingError} from './menu-errors';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {merge} from 'rxjs/observable/merge';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * Injection token that determines the scroll handling while the menu is open.\n */\nexport const MD_MENU_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const MD_MENU_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_MENU_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n */\nexport const MENU_PANEL_TOP_PADDING = 8;\n/**\n * This directive is intended to be used in conjunction with an md-menu tag.  It is\n * responsible for toggling the display of the provided menu instance.\n */\nexport class MdMenuTrigger implements AfterViewInit, OnDestroy {\nprivate _portal: TemplatePortal<any>;\nprivate _overlayRef: OverlayRef | null = null;\nprivate _menuOpen: boolean = false;\nprivate _closeSubscription: Subscription;\nprivate _positionSubscription: Subscription;\nprivate _hoverSubscription: Subscription;\nprivate _openedByMouse: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMdMenuTriggerFor(): MdMenuPanel {\n    return this.menu;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMdMenuTriggerFor(v: MdMenuPanel) {\n    this.menu = v;\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMatMenuTriggerFor(): MdMenuPanel {\n    return this.menu;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMatMenuTriggerFor(v: MdMenuPanel) {\n    this.menu = v;\n  }\n/**\n * @return {?}\n */\nget _matMenuTriggerFor(): MdMenuPanel {\n    return this.menu;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMenuTriggerFor(v: MdMenuPanel) {\n    this.menu = v;\n  }\n/**\n * References the menu instance that the trigger is associated with.\n */\nmenu: MdMenuPanel;\n/**\n * Event emitted when the associated menu is opened.\n */\nonMenuOpen = new EventEmitter<void>();\n/**\n * Event emitted when the associated menu is closed.\n */\nonMenuClose = new EventEmitter<void>();\n/**\n * @param {?} _overlay\n * @param {?} _element\n * @param {?} _viewContainerRef\n * @param {?} _scrollStrategy\n * @param {?} _parentMenu\n * @param {?} _menuItemInstance\n * @param {?} _dir\n */\nconstructor(private _overlay: Overlay,\nprivate _element: ElementRef,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _scrollStrategy,\nprivate _parentMenu: MdMenu,\nprivate _menuItemInstance: MdMenuItem,\nprivate _dir: Directionality) {\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this._checkMenu();\n\n    this.menu.close.subscribe(reason => {\n      this.closeMenu();\n\n      // If a click closed the menu, we should close the entire chain of nested menus.\n      if (reason === 'click' && this._parentMenu) {\n        this._parentMenu.close.emit(reason);\n      }\n    });\n\n    if (this.triggersSubmenu()) {\n      // Subscribe to changes in the hovered item in order to toggle the panel.\n      this._hoverSubscription = filter\n          .call(this._parentMenu.hover(), active => active === this._menuItemInstance)\n          .subscribe(() => {\n            this._openedByMouse = true;\n            this.openMenu();\n          });\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._cleanUpSubscriptions();\n  }\n/**\n * Whether the menu is open.\n * @return {?}\n */\nget menuOpen(): boolean {\n    return this._menuOpen;\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\nget dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Whether the menu triggers a sub-menu or a top-level one.\n * @return {?}\n */\ntriggersSubmenu(): boolean {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n/**\n * Toggles the menu between the open and closed states.\n * @return {?}\n */\ntoggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n/**\n * Opens the menu.\n * @return {?}\n */\nopenMenu(): void {\n    if (!this._menuOpen) {\n      this._createOverlay().attach(this._portal);\n      this._closeSubscription = this._menuClosingActions().subscribe(() => this.menu.close.emit());\n      this._initMenu();\n\n      if (this.menu instanceof MdMenu) {\n        this.menu._startAnimation();\n      }\n    }\n  }\n/**\n * Closes the menu.\n * @return {?}\n */\ncloseMenu(): void {\n    if (this._overlayRef && this.menuOpen) {\n      this._resetMenu();\n      this._overlayRef.detach();\n      this._closeSubscription.unsubscribe();\n      this.menu.close.emit();\n\n      if (this.menu instanceof MdMenu) {\n        this.menu._resetAnimation();\n      }\n    }\n  }\n/**\n * Focuses the menu trigger.\n * @return {?}\n */\nfocus() {\n    this._element.nativeElement.focus();\n  }\n/**\n * This method sets the menu state to open and focuses the first item if\n * the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _initMenu(): void {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n\n    // Should only set focus if opened via the keyboard, so keyboard users can\n    // can easily navigate menu items. According to spec, mouse users should not\n    // see the focus style.\n    if (!this._openedByMouse) {\n      this.menu.focusFirstItem();\n    }\n  }\n/**\n * Updates the menu elevation based on the amount of parent menus that it has.\n * @return {?}\n */\nprivate _setMenuElevation(): void {\n    if (this.menu.setElevation) {\n      let /** @type {?} */ depth = 0;\n      let /** @type {?} */ parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n/**\n * This method resets the menu when it's closed, most importantly restoring\n * focus to the menu trigger if the menu was opened via the keyboard.\n * @return {?}\n */\nprivate _resetMenu(): void {\n    this._setIsMenuOpen(false);\n\n    // Focus only needs to be reset to the host element if the menu was opened\n    // by the keyboard and manually shifted to the first menu item.\n    if (!this._openedByMouse) {\n      this.focus();\n    }\n\n    this._openedByMouse = false;\n  }\n/**\n * @param {?} isOpen\n * @return {?}\n */\nprivate _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.onMenuOpen.emit() : this.onMenuClose.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n/**\n * This method checks that a valid instance of MdMenu has been passed into\n * mdMenuTriggerFor. If not, an exception is thrown.\n * @return {?}\n */\nprivate _checkMenu() {\n    if (!this.menu) {\n      throwMdMenuMissingError();\n    }\n  }\n/**\n * This method creates the overlay from the provided menu's template and saves its\n * OverlayRef so that it can be attached to the DOM when openMenu is called.\n * @return {?}\n */\nprivate _createOverlay(): OverlayRef {\n    if (!this._overlayRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n      const /** @type {?} */ config = this._getOverlayConfig();\n      this._subscribeToPositions( /** @type {?} */((config.positionStrategy as ConnectedPositionStrategy)));\n      this._overlayRef = this._overlay.create(config);\n    }\n\n    return this._overlayRef;\n  }\n/**\n * This method builds the configuration object needed to create the overlay, the OverlayState.\n * @return {?} OverlayState\n */\nprivate _getOverlayConfig(): OverlayState {\n    const /** @type {?} */ overlayState = new OverlayState();\n    overlayState.positionStrategy = this._getPosition();\n    overlayState.hasBackdrop = !this.triggersSubmenu();\n    overlayState.backdropClass = 'cdk-overlay-transparent-backdrop';\n    overlayState.direction = this.dir;\n    overlayState.scrollStrategy = this._scrollStrategy();\n    return overlayState;\n  }\n/**\n * Listens to changes in the position of the overlay and sets the correct classes\n * on the menu based on the new position. This ensures the animation origin is always\n * correct, even if a fallback position is used for the overlay.\n * @param {?} position\n * @return {?}\n */\nprivate _subscribeToPositions(position: ConnectedPositionStrategy): void {\n    this._positionSubscription = position.onPositionChange.subscribe(change => {\n      const /** @type {?} */ posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n      const /** @type {?} */ posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n      this.menu.setPositionClasses(posX, posY);\n    });\n  }\n/**\n * This method builds the position strategy for the overlay, so the menu is properly connected\n * to the trigger.\n * @return {?} ConnectedPositionStrategy\n */\nprivate _getPosition(): ConnectedPositionStrategy {\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let /** @type {?} */ offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n\n      // TODO(crisbeto): this should be a function, once the overlay supports it.\n      // Right now it will be wrong for the fallback positions.\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    return this._overlay.position()\n        .connectedTo(this._element, {originX, originY}, {overlayX, overlayY})\n        .withDirection(this.dir)\n        .withOffsetY(offsetY)\n        .withFallbackPosition(\n            {originX: originFallbackX, originY},\n            {overlayX: overlayFallbackX, overlayY})\n        .withFallbackPosition(\n            {originX, originY: originFallbackY},\n            {overlayX, overlayY: overlayFallbackY})\n        .withFallbackPosition(\n            {originX: originFallbackX, originY: originFallbackY},\n            {overlayX: overlayFallbackX, overlayY: overlayFallbackY});\n  }\n/**\n * Cleans up the active subscriptions.\n * @return {?}\n */\nprivate _cleanUpSubscriptions(): void {\n    [\n      this._closeSubscription,\n      this._positionSubscription,\n      this._hoverSubscription\n    ]\n        .filter(subscription => !!subscription)\n        .forEach(subscription => subscription.unsubscribe());\n  }\n/**\n * Returns a stream that emits whenever an action that should close the menu occurs.\n * @return {?}\n */\nprivate _menuClosingActions() {\n    const /** @type {?} */ backdrop = /** @type {?} */(( this._overlayRef)).backdropClick();\n    const /** @type {?} */ parentClose = this._parentMenu ? this._parentMenu.close : observableOf(null);\n    const /** @type {?} */ hover = this._parentMenu ? RxChain.from(this._parentMenu.hover())\n        .call(filter, active => active !== this._menuItemInstance)\n        .call(filter, () => this._menuOpen)\n        .result() : observableOf(null);\n\n    return merge(backdrop, parentClose, hover);\n  }\n/**\n * Handles mouse presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      this._openedByMouse = true;\n    }\n  }\n/**\n * Handles key presses on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    const /** @type {?} */ keyCode = event.keyCode;\n\n    if (this.triggersSubmenu() && (\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n      this.openMenu();\n    }\n  }\n/**\n * Handles click events on the trigger.\n * @param {?} event\n * @return {?}\n */\n_handleClick(event: MouseEvent): void {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `[md-menu-trigger-for], [mat-menu-trigger-for],\n             [mdMenuTriggerFor], [matMenuTriggerFor]`,\n  host: {\n    'aria-haspopup': 'true',\n    '(mousedown)': '_handleMousedown($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(click)': '_handleClick($event)',\n  },\n  exportAs: 'mdMenuTrigger'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_MENU_SCROLL_STRATEGY, ] }, ]},\n{type: MdMenu, decorators: [{ type: Optional }, ]},\n{type: MdMenuItem, decorators: [{ type: Optional }, { type: Self }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_deprecatedMdMenuTriggerFor': [{ type: Input, args: ['md-menu-trigger-for', ] },],\n'_deprecatedMatMenuTriggerFor': [{ type: Input, args: ['mat-menu-trigger-for', ] },],\n'_matMenuTriggerFor': [{ type: Input, args: ['matMenuTriggerFor', ] },],\n'menu': [{ type: Input, args: ['mdMenuTriggerFor', ] },],\n'onMenuOpen': [{ type: Output },],\n'onMenuClose': [{ type: Output },],\n};\n}\n\nfunction MdMenuTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuTrigger.ctorParameters;\n/** @type {?} */\nMdMenuTrigger.propDecorators;\n/** @type {?} */\nMdMenuTrigger.prototype._portal;\n/** @type {?} */\nMdMenuTrigger.prototype._overlayRef;\n/** @type {?} */\nMdMenuTrigger.prototype._menuOpen;\n/** @type {?} */\nMdMenuTrigger.prototype._closeSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._positionSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._hoverSubscription;\n/** @type {?} */\nMdMenuTrigger.prototype._openedByMouse;\n/**\n * References the menu instance that the trigger is associated with.\n * @type {?}\n */\nMdMenuTrigger.prototype.menu;\n/**\n * Event emitted when the associated menu is opened.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuOpen;\n/**\n * Event emitted when the associated menu is closed.\n * @type {?}\n */\nMdMenuTrigger.prototype.onMenuClose;\n/** @type {?} */\nMdMenuTrigger.prototype._overlay;\n/** @type {?} */\nMdMenuTrigger.prototype._element;\n/** @type {?} */\nMdMenuTrigger.prototype._viewContainerRef;\n/** @type {?} */\nMdMenuTrigger.prototype._scrollStrategy;\n/** @type {?} */\nMdMenuTrigger.prototype._parentMenu;\n/** @type {?} */\nMdMenuTrigger.prototype._menuItemInstance;\n/** @type {?} */\nMdMenuTrigger.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  ElementRef,\n  ChangeDetectionStrategy,\n  InjectionToken,\n  Inject,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {throwMdMenuInvalidPositionX, throwMdMenuInvalidPositionY} from './menu-errors';\nimport {MdMenuItem} from './menu-item';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {MdMenuPanel} from './menu-panel';\nimport {Subscription} from 'rxjs/Subscription';\nimport {transformMenu, fadeInItems} from './menu-animations';\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW} from '../core/keyboard/keycodes';\nimport {merge} from 'rxjs/observable/merge';\nimport {Observable} from 'rxjs/Observable';\nimport {Direction} from '@angular/cdk/bidi';\n\n/** Default `md-menu` options that can be overridden. */\nexport interface MdMenuDefaultOptions {\n  xPosition: MenuPositionX;\n  yPosition: MenuPositionY;\n  overlapTrigger: boolean;\n}\n/**\n * Injection token to be used to override the default options for `md-menu`.\n */\nexport const MD_MENU_DEFAULT_OPTIONS =\n    new InjectionToken<MdMenuDefaultOptions>('md-menu-default-options');\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n */\nconst MD_MENU_BASE_ELEVATION = 2;\nexport class MdMenu implements AfterContentInit, MdMenuPanel, OnDestroy {\nprivate _keyManager: FocusKeyManager<MdMenuItem>;\nprivate _xPosition: MenuPositionX = this._defaultOptions.xPosition;\nprivate _yPosition: MenuPositionY = this._defaultOptions.yPosition;\nprivate _previousElevation: string;\n/**\n * Subscription to tab events on the menu panel\n */\nprivate _tabSubscription: Subscription;\n/**\n * Config object to be passed into the menu's ngClass\n */\n_classList: any = {};\n/**\n * Current state of the panel animation.\n */\n_panelAnimationState: 'void' | 'enter-start' | 'enter' = 'void';\n/**\n * Parent menu of the current menu panel.\n */\nparentMenu: MdMenuPanel | undefined;\n/**\n * Layout direction of the menu.\n */\ndirection: Direction;\n/**\n * Position of the menu in the X axis.\n * @return {?}\n */\nget xPosition() { return this._xPosition; }\n/**\n * @param {?} value\n * @return {?}\n */\nset xPosition(value: MenuPositionX) {\n    if (value !== 'before' && value !== 'after') {\n      throwMdMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n/**\n * Position of the menu in the Y axis.\n * @return {?}\n */\nget yPosition() { return this._yPosition; }\n/**\n * @param {?} value\n * @return {?}\n */\nset yPosition(value: MenuPositionY) {\n    if (value !== 'above' && value !== 'below') {\n      throwMdMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n   templateRef: TemplateRef<any>;\n/**\n * List of the items inside of a menu.\n */\nitems: QueryList<MdMenuItem>;\n/**\n * Whether the menu should overlap its trigger.\n */\noverlapTrigger = this._defaultOptions.overlapTrigger;\n/**\n * This method takes classes set on the host md-menu element and applies them on the\n * menu template that displays in the overlay container.  Otherwise, it's difficult\n * to style the containing menu from outside the component.\n * @param {?} classes list of class names\n * @return {?}\n */\nset classList(classes: string) {\n    if (classes && classes.length) {\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n        obj[className] = true;\n        return obj;\n      }, {});\n\n      this._elementRef.nativeElement.className = '';\n      this.setPositionClasses();\n    }\n  }\n/**\n * Event emitted when the menu is closed.\n */\nclose = new EventEmitter<void | 'click' | 'keydown'>();\n/**\n * @param {?} _elementRef\n * @param {?} _defaultOptions\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _defaultOptions: MdMenuDefaultOptions) { }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MdMenuItem>(this.items).withWrap();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close.emit('keydown'));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._tabSubscription) {\n      this._tabSubscription.unsubscribe();\n    }\n\n    this.close.emit();\n    this.close.complete();\n  }\n/**\n * Stream that emits whenever the hovered menu item changes.\n * @return {?}\n */\nhover(): Observable<MdMenuItem> {\n    return merge(...this.items.map(item => item.hover));\n  }\n/**\n * Handle a keyboard event from the menu, delegating to the appropriate action.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case ESCAPE:\n        this.close.emit('keydown');\n        event.stopPropagation();\n      break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.close.emit('keydown');\n        }\n      break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.close.emit('keydown');\n        }\n      break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n/**\n * Focus the first item in the menu. This method is used by the menu trigger\n * to focus the first item when the menu is opened by the ENTER key.\n * @return {?}\n */\nfocusFirstItem() {\n    this._keyManager.setFirstItemActive();\n  }\n/**\n * It's necessary to set position-based classes to ensure the menu panel animation\n * folds out from the correct direction.\n * @param {?=} posX\n * @param {?=} posY\n * @return {?}\n */\nsetPositionClasses(posX = this.xPosition, posY = this.yPosition): void {\n    this._classList['mat-menu-before'] = posX === 'before';\n    this._classList['mat-menu-after'] = posX === 'after';\n    this._classList['mat-menu-above'] = posY === 'above';\n    this._classList['mat-menu-below'] = posY === 'below';\n  }\n/**\n * Sets the menu panel elevation.\n * @param {?} depth Number of parent menus that come before the menu.\n * @return {?}\n */\nsetElevation(depth: number): void {\n    // The elevation starts at the base and increases by one for each level.\n    const /** @type {?} */ newElevation = `mat-elevation-z${MD_MENU_BASE_ELEVATION + depth}`;\n    const /** @type {?} */ customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n/**\n * Starts the enter animation.\n * @return {?}\n */\n_startAnimation() {\n    this._panelAnimationState = 'enter-start';\n  }\n/**\n * Resets the panel animation to its initial state.\n * @return {?}\n */\n_resetAnimation() {\n    this._panelAnimationState = 'void';\n  }\n/**\n * Callback that is invoked when the panel animation completes.\n * @param {?} event\n * @return {?}\n */\n_onAnimationDone(event: AnimationEvent) {\n    // After the initial expansion is done, trigger the second phase of the enter animation.\n    if (event.toState === 'enter-start') {\n      this._panelAnimationState = 'enter';\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-menu, mat-menu',\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    transformMenu,\n    fadeInItems\n  ],\n  exportAs: 'mdMenu'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_MENU_DEFAULT_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'xPosition': [{ type: Input },],\n'yPosition': [{ type: Input },],\n'templateRef': [{ type: ViewChild, args: [TemplateRef, ] },],\n'items': [{ type: ContentChildren, args: [MdMenuItem, ] },],\n'overlapTrigger': [{ type: Input },],\n'classList': [{ type: Input, args: ['class', ] },],\n'close': [{ type: Output },],\n};\n}\n\nfunction MdMenu_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenu.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenu.ctorParameters;\n/** @type {?} */\nMdMenu.propDecorators;\n/** @type {?} */\nMdMenu.prototype._keyManager;\n/** @type {?} */\nMdMenu.prototype._xPosition;\n/** @type {?} */\nMdMenu.prototype._yPosition;\n/** @type {?} */\nMdMenu.prototype._previousElevation;\n/**\n * Subscription to tab events on the menu panel\n * @type {?}\n */\nMdMenu.prototype._tabSubscription;\n/**\n * Config object to be passed into the menu's ngClass\n * @type {?}\n */\nMdMenu.prototype._classList;\n/**\n * Current state of the panel animation.\n * @type {?}\n */\nMdMenu.prototype._panelAnimationState;\n/**\n * Parent menu of the current menu panel.\n * @type {?}\n */\nMdMenu.prototype.parentMenu;\n/**\n * Layout direction of the menu.\n * @type {?}\n */\nMdMenu.prototype.direction;\n/** @type {?} */\nMdMenu.prototype.templateRef;\n/**\n * List of the items inside of a menu.\n * @type {?}\n */\nMdMenu.prototype.items;\n/**\n * Whether the menu should overlap its trigger.\n * @type {?}\n */\nMdMenu.prototype.overlapTrigger;\n/**\n * Event emitted when the menu is closed.\n * @type {?}\n */\nMdMenu.prototype.close;\n/** @type {?} */\nMdMenu.prototype._elementRef;\n/** @type {?} */\nMdMenu.prototype._defaultOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport{\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Below are all the animations for the md-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n */\n\n\n/**\n * This animation controls the menu panel's entry and exit from the page.\n *\n * When the menu panel is added to the DOM, it scales in and fades in its border.\n *\n * When the menu panel is removed from the DOM, it simply fades out after a brief\n * delay to display the ripple.\n */\n\n// TODO(kara): switch to :enter and :leave once Mobile Safari is sorted out.\nexport const /** @type {?} */ transformMenu: AnimationTriggerMetadata = trigger('transformMenu', [\n  state('void', style({\n    opacity: 0,\n    // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\n    // as of 4.2, which causes the animation to be skipped if it starts from 0.\n    transform: 'scale(0.01, 0.01)'\n  })),\n  state('enter-start', style({\n    opacity: 1,\n    transform: 'scale(1, 0.5)'\n  })),\n  state('enter', style({\n    transform: 'scale(1, 1)'\n  })),\n  transition('void => enter-start', animate('100ms linear')),\n  transition('enter-start => enter', animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)')),\n  transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\n]);\n/**\n * This animation fades in the background color and content of the menu panel\n * after its containing element is scaled in.\n */\nexport const fadeInItems: AnimationTriggerMetadata = trigger('fadeInItems', [\n  state('showing', style({opacity: 1})),\n  transition('void => *', [\n    style({opacity: 0}),\n    animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n  ])\n]);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ElementRef,\n  OnDestroy,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FocusableOption} from '../core/a11y/focus-key-manager';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\nimport {Subject} from 'rxjs/Subject';\n/**\n * \\@docs-private\n */\nexport class MdMenuItemBase {}\nexport const /** @type {?} */ _MdMenuItemMixinBase = mixinDisabled(MdMenuItemBase);\n/**\n * This directive is intended to be used inside an md-menu tag.\n * It exists mostly to set the role attribute.\n */\nexport class MdMenuItem extends _MdMenuItemMixinBase implements FocusableOption, CanDisable,\n  OnDestroy {\n/**\n * Stream that emits when the menu item is hovered.\n */\nhover: Subject<MdMenuItem> = new Subject();\n/**\n * Whether the menu item is highlighted.\n */\n_highlighted: boolean = false;\n/**\n * Whether the menu item acts as a trigger for a sub-menu.\n */\n_triggersSubmenu: boolean = false;\n/**\n * @param {?} _elementRef\n */\nconstructor(private _elementRef: ElementRef) {\n    super();\n  }\n/**\n * Focuses the menu item.\n * @return {?}\n */\nfocus(): void {\n    this._getHostElement().focus();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.hover.complete();\n  }\n/**\n * Used to set the `tabindex`.\n * @return {?}\n */\n_getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n/**\n * Returns the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n/**\n * Prevents the default element actions if it is disabled.\n * @param {?} event\n * @return {?}\n */\n_checkDisabled(event: Event): void {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n/**\n * Emits to the hover stream.\n * @return {?}\n */\n_emitHoverEvent() {\n    if (!this.disabled) {\n      this.hover.next(this);\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-menu-item], [mat-menu-item]',\n  inputs: ['disabled'],\n  host: {\n    'role': 'menuitem',\n    'class': 'mat-menu-item',\n    '[class.mat-menu-item-highlighted]': '_highlighted',\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.disabled]': 'disabled || null',\n    '(click)': '_checkDisabled($event)',\n    '(mouseenter)': '_emitHoverEvent()',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: 'menu-item.html',\n  exportAs: 'mdMenuItem',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction MdMenuItem_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMenuItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMenuItem.ctorParameters;\n/**\n * Stream that emits when the menu item is hovered.\n * @type {?}\n */\nMdMenuItem.prototype.hover;\n/**\n * Whether the menu item is highlighted.\n * @type {?}\n */\nMdMenuItem.prototype._highlighted;\n/**\n * Whether the menu item acts as a trigger for a sub-menu.\n * @type {?}\n */\nMdMenuItem.prototype._triggersSubmenu;\n/** @type {?} */\nMdMenuItem.prototype._elementRef;\n}\n\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid md-menu instance\n * \\@docs-private\n * @return {?}\n */\nexport function throwMdMenuMissingError() {\n  throw Error(`md-menu-trigger: must pass in an md-menu instance.\n\n    Example:\n      <md-menu #menu=\"mdMenu\"></md-menu>\n      <button [mdMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nexport function throwMdMenuInvalidPositionX() {\n  throw Error(`x-position value must be either 'before' or after'.\n      Example: <md-menu x-position=\"before\" #menu=\"mdMenu\"></md-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nexport function throwMdMenuInvalidPositionY() {\n  throw Error(`y-position value must be either 'above' or below'.\n      Example: <md-menu y-position=\"above\" #menu=\"mdMenu\"></md-menu>`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MdCommonModule} from '../core';\nimport {MdTooltip, TooltipComponent, MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER} from './tooltip';\nexport class MdTooltipModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MdCommonModule,\n    PlatformModule\n  ],\n  exports: [MdTooltip, TooltipComponent, MdCommonModule],\n  declarations: [MdTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTooltipModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltipModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltipModule.ctorParameters;\n}\n\n\n\nexport {TooltipPosition,TOUCHEND_HIDE_DELAY,SCROLL_THROTTLE_MS,TOOLTIP_PANEL_CLASS,getMdTooltipInvalidPositionError,MD_TOOLTIP_SCROLL_STRATEGY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER,MdTooltip,TooltipVisibility,TooltipComponent} from './tooltip';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {first} from '@angular/cdk/rxjs';\nimport {\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConnectionPosition,\n  OverlayRef,\n  OverlayState,\n  RepositionScrollStrategy,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n/**\n * Time in ms to delay before changing the tooltip visibility to hidden\n */\nexport const TOUCHEND_HIDE_DELAY = 1500;\n/**\n * Time in ms to throttle repositioning after scroll events.\n */\nexport const SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @param {?} position\n * @return {?}\n */\nexport function getMdTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n */\nexport const MD_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/**\n * \\@docs-private\n */\nexport const MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n * \n * https://material.google.com/components/tooltips.html\n */\nexport class MdTooltip implements OnDestroy {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\nprivate _position: TooltipPosition = 'below';\nprivate _disabled: boolean = false;\nprivate _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * Allows the user to define the position of the tooltip relative to the parent element\n * @return {?}\n */\nget position(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n/**\n * Disables the display of the tooltip.\n * @return {?}\n */\nget disabled(): boolean { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _positionDeprecated(): TooltipPosition { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _positionDeprecated(value: TooltipPosition) { this._position = value; }\n/**\n * The default delay in ms before showing the tooltip after show is called\n */\nshowDelay = 0;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n */\nhideDelay = 0;\nprivate _message: string;\n/**\n * The message to be displayed in the tooltip\n * @return {?}\n */\nget message() { return this._message; }\n/**\n * @param {?} value\n * @return {?}\n */\nset message(value: string) {\n    this._message = value;\n    this._setTooltipMessage(this._message);\n  }\n/**\n * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n * @return {?}\n */\nget tooltipClass() { return this._tooltipClass; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n/**\n * @deprecated\n * @return {?}\n */\nget _deprecatedMessage(): string { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _deprecatedMessage(v: string) { this.message = v; }\n/**\n * @return {?}\n */\nget _matMessage() { return this.message; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matMessage(v) { this.message = v; }\n/**\n * @return {?}\n */\nget _matPosition() { return this.position; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matPosition(v) { this.position = v; }\n/**\n * @return {?}\n */\nget _matDisabled() { return this.disabled; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matDisabled(v) { this.disabled = v; }\n/**\n * @return {?}\n */\nget _matHideDelay() { return this.hideDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matHideDelay(v) { this.hideDelay = v; }\n/**\n * @return {?}\n */\nget _matShowDelay() { return this.showDelay; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matShowDelay(v) { this.showDelay = v; }\n/**\n * @return {?}\n */\nget _matClass() { return this.tooltipClass; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matClass(v) { this.tooltipClass = v; }\nprivate _enterListener: Function;\nprivate _leaveListener: Function;\n/**\n * @param {?} _overlay\n * @param {?} _elementRef\n * @param {?} _scrollDispatcher\n * @param {?} _viewContainerRef\n * @param {?} _ngZone\n * @param {?} _renderer\n * @param {?} _platform\n * @param {?} _scrollStrategy\n * @param {?} _dir\n */\nconstructor(\nprivate _overlay: Overlay,\nprivate _elementRef: ElementRef,\nprivate _scrollDispatcher: ScrollDispatcher,\nprivate _viewContainerRef: ViewContainerRef,\nprivate _ngZone: NgZone,\nprivate _renderer: Renderer2,\nprivate _platform: Platform,\nprivate _scrollStrategy,\nprivate _dir: Directionality) {\n\n    // The mouse events shouldn't be bound on iOS devices, because\n    // they can prevent the first tap from firing its click event.\n    if (!_platform.IOS) {\n      this._enterListener =\n        _renderer.listen(_elementRef.nativeElement, 'mouseenter', () => this.show());\n      this._leaveListener =\n        _renderer.listen(_elementRef.nativeElement, 'mouseleave', () => this.hide());\n    }\n  }\n/**\n * Dispose the tooltip when destroyed.\n * @return {?}\n */\nngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n    // Clean up the event listeners set in the constructor\n    if (!this._platform.IOS) {\n      this._enterListener();\n      this._leaveListener();\n    }\n  }\n/**\n * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nshow(delay: number = this.showDelay): void {\n    if (this.disabled || !this._message || !this._message.trim()) { return; }\n\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipClass(this._tooltipClass);\n    this._setTooltipMessage(this._message); /** @type {?} */((\n    this._tooltipInstance)).show(this._position, delay);\n  }\n/**\n * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n * @param {?=} delay\n * @return {?}\n */\nhide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n/**\n * Shows/hides the tooltip\n * @return {?}\n */\ntoggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n/**\n * Returns true if the tooltip is currently visible to the user\n * @return {?}\n */\n_isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n/**\n * Create the tooltip to display\n * @return {?}\n */\nprivate _createTooltip(): void {\n    let /** @type {?} */ overlayRef = this._createOverlay();\n    let /** @type {?} */ portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n\n    this._tooltipInstance = overlayRef.attach(portal).instance; /** @type {?} */((\n\n    // Dispose the overlay when finished the shown tooltip.\n    this._tooltipInstance)).afterHidden().subscribe(() => {\n      // Check first if the tooltip has already been removed through this components destroy.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    });\n  }\n/**\n * Create the overlay config and position strategy\n * @return {?}\n */\nprivate _createOverlay(): OverlayRef {\n    let /** @type {?} */ origin = this._getOrigin();\n    let /** @type {?} */ position = this._getOverlayPosition();\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    // After position changes occur and the overlay is clipped by a parent scrollable then\n    // close the tooltip.\n    let /** @type {?} */ strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n    strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\n    strategy.onPositionChange.subscribe(change => {\n      if (change.scrollableViewProperties.isOverlayClipped &&\n          this._tooltipInstance && this._tooltipInstance.isVisible()) {\n        this.hide(0);\n      }\n    });\n\n    let /** @type {?} */ config = new OverlayState();\n\n    config.direction = this._dir ? this._dir.value : 'ltr';\n    config.positionStrategy = strategy;\n    config.panelClass = TOOLTIP_PANEL_CLASS;\n    config.scrollStrategy = this._scrollStrategy();\n\n    this._overlayRef = this._overlay.create(config);\n\n    return this._overlayRef;\n  }\n/**\n * Disposes the current tooltip and the overlay it is attached to\n * @return {?}\n */\nprivate _disposeTooltip(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._tooltipInstance = null;\n  }\n/**\n * Returns the origin position based on the user's position preference\n * @return {?}\n */\n_getOrigin(): OriginConnectionPosition {\n    if (this.position == 'above' || this.position == 'below') {\n      return {originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom'};\n    }\n\n    const /** @type {?} */ isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isDirectionLtr ||\n        this.position == 'after' && !isDirectionLtr) {\n      return {originX: 'start', originY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isDirectionLtr ||\n        this.position == 'before' && !isDirectionLtr) {\n      return {originX: 'end', originY: 'center'};\n    }\n\n    throw getMdTooltipInvalidPositionError(this.position);\n  }\n/**\n * Returns the overlay position based on the user's preference\n * @return {?}\n */\n_getOverlayPosition(): OverlayConnectionPosition {\n    if (this.position == 'above') {\n      return {overlayX: 'center', overlayY: 'bottom'};\n    }\n\n    if (this.position == 'below') {\n      return {overlayX: 'center', overlayY: 'top'};\n    }\n\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isLtr ||\n        this.position == 'after' && !isLtr) {\n      return {overlayX: 'end', overlayY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isLtr ||\n        this.position == 'before' && !isLtr) {\n      return {overlayX: 'start', overlayY: 'center'};\n    }\n\n    throw getMdTooltipInvalidPositionError(this.position);\n  }\n/**\n * Updates the tooltip message and repositions the overlay according to the new message length\n * @param {?} message\n * @return {?}\n */\nprivate _setTooltipMessage(message: string) {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = message;\n      this._tooltipInstance._markForCheck();\n\n      first.call(this._ngZone.onMicrotaskEmpty).subscribe(() => {\n        if (this._tooltipInstance) { /** @type {?} */((\n          this._overlayRef)).updatePosition();\n        }\n      });\n    }\n  }\n/**\n * Updates the tooltip class\n * @param {?} tooltipClass\n * @return {?}\n */\nprivate _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tooltip], [mdTooltip], [mat-tooltip], [matTooltip]',\n  host: {\n    '(longpress)': 'show()',\n    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\n  },\n  exportAs: 'mdTooltip',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: ElementRef, },\n{type: ScrollDispatcher, },\n{type: ViewContainerRef, },\n{type: NgZone, },\n{type: Renderer2, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_TOOLTIP_SCROLL_STRATEGY, ] }, ]},\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input, args: ['mdTooltipPosition', ] },],\n'disabled': [{ type: Input, args: ['mdTooltipDisabled', ] },],\n'_positionDeprecated': [{ type: Input, args: ['tooltip-position', ] },],\n'showDelay': [{ type: Input, args: ['mdTooltipShowDelay', ] },],\n'hideDelay': [{ type: Input, args: ['mdTooltipHideDelay', ] },],\n'message': [{ type: Input, args: ['mdTooltip', ] },],\n'tooltipClass': [{ type: Input, args: ['mdTooltipClass', ] },],\n'_deprecatedMessage': [{ type: Input, args: ['md-tooltip', ] },],\n'_matMessage': [{ type: Input, args: ['matTooltip', ] },],\n'_matPosition': [{ type: Input, args: ['matTooltipPosition', ] },],\n'_matDisabled': [{ type: Input, args: ['matTooltipDisabled', ] },],\n'_matHideDelay': [{ type: Input, args: ['matTooltipHideDelay', ] },],\n'_matShowDelay': [{ type: Input, args: ['matTooltipShowDelay', ] },],\n'_matClass': [{ type: Input, args: ['matTooltipClass', ] },],\n};\n}\n\nfunction MdTooltip_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTooltip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTooltip.ctorParameters;\n/** @type {?} */\nMdTooltip.propDecorators;\n/** @type {?} */\nMdTooltip.prototype._overlayRef;\n/** @type {?} */\nMdTooltip.prototype._tooltipInstance;\n/** @type {?} */\nMdTooltip.prototype._position;\n/** @type {?} */\nMdTooltip.prototype._disabled;\n/** @type {?} */\nMdTooltip.prototype._tooltipClass;\n/**\n * The default delay in ms before showing the tooltip after show is called\n * @type {?}\n */\nMdTooltip.prototype.showDelay;\n/**\n * The default delay in ms before hiding the tooltip after hide is called\n * @type {?}\n */\nMdTooltip.prototype.hideDelay;\n/** @type {?} */\nMdTooltip.prototype._message;\n/** @type {?} */\nMdTooltip.prototype._enterListener;\n/** @type {?} */\nMdTooltip.prototype._leaveListener;\n/** @type {?} */\nMdTooltip.prototype._overlay;\n/** @type {?} */\nMdTooltip.prototype._elementRef;\n/** @type {?} */\nMdTooltip.prototype._scrollDispatcher;\n/** @type {?} */\nMdTooltip.prototype._viewContainerRef;\n/** @type {?} */\nMdTooltip.prototype._ngZone;\n/** @type {?} */\nMdTooltip.prototype._renderer;\n/** @type {?} */\nMdTooltip.prototype._platform;\n/** @type {?} */\nMdTooltip.prototype._scrollStrategy;\n/** @type {?} */\nMdTooltip.prototype._dir;\n}\n\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nexport class TooltipComponent {\n/**\n * Message to display in the tooltip\n */\nmessage: string;\n/**\n * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n */\ntooltipClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * The timeout ID of any current timer set to show the tooltip\n */\n_showTimeoutId: number;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n */\n_hideTimeoutId: number;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n */\n_visibility: TooltipVisibility = 'initial';\n/**\n * Whether interactions on the page should close the tooltip\n */\n_closeOnInteraction: boolean = false;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n */\n_transformOrigin: string = 'bottom';\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n */\nprivate _onHide: Subject<any> = new Subject();\n/**\n * @param {?} _dir\n * @param {?} _changeDetectorRef\n */\nconstructor(\nprivate _dir: Directionality,\nprivate _changeDetectorRef: ChangeDetectorRef) {}\n/**\n * Shows the tooltip with an animation originating from the provided origin\n * @param {?} position Position of the tooltip.\n * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n * @return {?}\n */\nshow(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n\n    this._setTransformOrigin(position);\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // If this was set to true immediately, then a body click that triggers show() would\n      // trigger interaction and close the tooltip right after it was displayed.\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n      setTimeout(() => this._closeOnInteraction = true, 0);\n    }, delay);\n  }\n/**\n * Begins the animation to hide the tooltip after the provided delay in ms.\n * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n * @return {?}\n */\nhide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n/**\n * Returns an observable that notifies when the tooltip has been hidden from view\n * @return {?}\n */\nafterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n/**\n * Whether the tooltip is being displayed\n * @return {?}\n */\nisVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n/**\n * Sets the tooltip transform origin according to the tooltip position\n * @param {?} value\n * @return {?}\n */\n_setTransformOrigin(value: TooltipPosition) {\n    const /** @type {?} */ isLtr = !this._dir || this._dir.value == 'ltr';\n    switch (value) {\n      case 'before': this._transformOrigin = isLtr ? 'right' : 'left'; break;\n      case 'after':  this._transformOrigin = isLtr ? 'left' : 'right'; break;\n      case 'left':   this._transformOrigin = 'right'; break;\n      case 'right':  this._transformOrigin = 'left'; break;\n      case 'above':  this._transformOrigin = 'bottom'; break;\n      case 'below':  this._transformOrigin = 'top'; break;\n      default: throw getMdTooltipInvalidPositionError(value);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_afterVisibilityAnimation(e: AnimationEvent): void {\n    if (e.toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n  }\n/**\n * Interactions on the HTML body should close the tooltip immediately as defined in the\n * material design spec.\n * https://material.google.com/components/tooltips.html#tooltips-interaction\n * @return {?}\n */\n_handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n/**\n * Marks that the tooltip needs to be checked in the next change detection run.\n * Mainly used for rendering the initial text before positioning a tooltip, which\n * can be problematic in components with OnPush change detection.\n * @return {?}\n */\n_markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tooltip-component, mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('state', [\n      state('void', style({transform: 'scale(0)'})),\n      state('initial', style({transform: 'scale(0)'})),\n      state('visible', style({transform: 'scale(1)'})),\n      state('hidden', style({transform: 'scale(0)'})),\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n  ],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: ChangeDetectorRef, },\n];\n}\n\nfunction TooltipComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTooltipComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTooltipComponent.ctorParameters;\n/**\n * Message to display in the tooltip\n * @type {?}\n */\nTooltipComponent.prototype.message;\n/**\n * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n * @type {?}\n */\nTooltipComponent.prototype.tooltipClass;\n/**\n * The timeout ID of any current timer set to show the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._showTimeoutId;\n/**\n * The timeout ID of any current timer set to hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._hideTimeoutId;\n/**\n * Property watched by the animation framework to show or hide the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._visibility;\n/**\n * Whether interactions on the page should close the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._closeOnInteraction;\n/**\n * The transform origin used in the animation for showing and hiding the tooltip\n * @type {?}\n */\nTooltipComponent.prototype._transformOrigin;\n/**\n * Subject for notifying that the tooltip has been hidden from the view\n * @type {?}\n */\nTooltipComponent.prototype._onHide;\n/** @type {?} */\nTooltipComponent.prototype._dir;\n/** @type {?} */\nTooltipComponent.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdCommonModule} from '../core';\nimport {MdToolbar, MdToolbarRow} from './toolbar';\nexport class MdToolbarModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule],\n  exports: [MdToolbar, MdToolbarRow, MdCommonModule],\n  declarations: [MdToolbar, MdToolbarRow],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdToolbarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdToolbarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdToolbarModule.ctorParameters;\n}\n\n\n\nexport {MdToolbarRow,MdToolbarBase,_MdToolbarMixinBase,MdToolbar} from './toolbar';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Directive,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nexport class MdToolbarRow {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-toolbar-row, mat-toolbar-row',\n  host: {'class': 'mat-toolbar-row'},\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdToolbarRow_tsickle_Closure_declarations() {\n/** @type {?} */\nMdToolbarRow.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdToolbarRow.ctorParameters;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdToolbarBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdToolbarBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdToolbarBase.prototype._renderer;\n/** @type {?} */\nMdToolbarBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdToolbarMixinBase = mixinColor(MdToolbarBase);\nexport class MdToolbar extends _MdToolbarMixinBase implements CanColor {\n/**\n * @param {?} renderer\n * @param {?} elementRef\n */\nconstructor(renderer: Renderer2, elementRef: ElementRef) {\n    super(renderer, elementRef);\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-toolbar, mat-toolbar',\n  templateUrl: 'toolbar.html',\n  styleUrls: ['toolbar.css'],\n  inputs: ['color'],\n  host: {\n    'class': 'mat-toolbar',\n    'role': 'toolbar'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\n}\n\nfunction MdToolbar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdToolbar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdToolbar.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\nimport {MdCommonModule, MdRippleModule} from '../core';\nimport {MdTab} from './tab';\nimport {MdTabGroup} from './tab-group';\nimport {MdTabLabel} from './tab-label';\nimport {MdTabLabelWrapper} from './tab-label-wrapper';\nimport {MdTabLink, MdTabNav} from './tab-nav-bar/tab-nav-bar';\nimport {MdInkBar} from './ink-bar';\nimport {MdTabBody} from './tab-body';\nimport {MdTabHeader} from './tab-header';\nexport class MdTabsModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    MdCommonModule,\n    PortalModule,\n    MdRippleModule,\n    ObserversModule,\n    ScrollDispatchModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MdCommonModule,\n    MdTabGroup,\n    MdTabLabel,\n    MdTab,\n    MdTabNav,\n    MdTabLink,\n  ],\n  declarations: [\n    MdTabGroup,\n    MdTabLabel,\n    MdTab,\n    MdInkBar,\n    MdTabLabelWrapper,\n    MdTabNav,\n    MdTabLink,\n    MdTabBody,\n    MdTabHeader\n  ],\n  providers: [VIEWPORT_RULER_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdTabsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabsModule.ctorParameters;\n}\n\n\n\nexport {MdTabChangeEvent,MdTabHeaderPosition,MdTabGroupBase,_MdTabGroupMixinBase,MdTabGroup} from './tab-group';\nexport {MdInkBar} from './ink-bar';\nexport {MdTabBody, MdTabBodyOriginState, MdTabBodyPositionState} from './tab-body';\nexport {MdTabHeader, ScrollDirection} from './tab-header';\nexport {MdTabLabelWrapper} from './tab-label-wrapper';\nexport {MdTab} from './tab';\nexport {MdTabLabel} from './tab-label';\nexport {MdTabNav, MdTabLink} from './tab-nav-bar/index';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ViewChild,\n  Component,\n  Input,\n  QueryList,\n  ElementRef,\n  ViewEncapsulation,\n  ContentChildren,\n  Output,\n  EventEmitter,\n  Optional,\n  AfterContentChecked,\n  AfterContentInit,\n  OnDestroy,\n  Renderer2,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {RIGHT_ARROW, LEFT_ARROW, ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {auditTime, startWith} from '@angular/cdk/rxjs';\nimport {Subscription} from 'rxjs/Subscription';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {merge} from 'rxjs/observable/merge';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {MdTabLabelWrapper} from './tab-label-wrapper';\nimport {MdInkBar} from './ink-bar';\nimport {CanDisableRipple, mixinDisableRipple} from '../core/common-behaviors/disable-ripple';\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * \\@docs-private\n */\nexport class MdTabHeaderBase {}\nexport const /** @type {?} */ _MdTabHeaderMixinBase = mixinDisableRipple(MdTabHeaderBase);\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nexport class MdTabHeader extends _MdTabHeaderMixinBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy, CanDisableRipple {\n\n   _labelWrappers: QueryList<MdTabLabelWrapper>;\n   _inkBar: MdInkBar;\n   _tabListContainer: ElementRef;\n   _tabList: ElementRef;\n/**\n * The tab index that is focused.\n */\nprivate _focusIndex: number = 0;\n/**\n * The distance in pixels that the tab labels should be translated to the left.\n */\nprivate _scrollDistance = 0;\n/**\n * Whether the header should scroll to the selected index after the view has been checked.\n */\nprivate _selectedIndexChanged = false;\n/**\n * Combines listeners that will re-align the ink bar whenever they're invoked.\n */\nprivate _realignInkBar: Subscription | null = null;\n/**\n * Whether the controls for pagination should be displayed\n */\n_showPaginationControls = false;\n/**\n * Whether the tab list can be scrolled more towards the end of the tab label list.\n */\n_disableScrollAfter = true;\n/**\n * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n */\n_disableScrollBefore = true;\n/**\n * The number of tab labels that are displayed on the header. When this changes, the header\n * should re-evaluate the scroll position.\n */\nprivate _tabLabelCount: number;\n/**\n * Whether the scroll distance has changed and should be applied after the view is checked.\n */\nprivate _scrollDistanceChanged: boolean;\nprivate _selectedIndex: number = 0;\n/**\n * The index of the active tab.\n * @return {?}\n */\nget selectedIndex(): number { return this._selectedIndex; }\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) {\n    this._selectedIndexChanged = this._selectedIndex != value;\n    this._selectedIndex = value;\n    this._focusIndex = value;\n  }\n/**\n * Event emitted when the option is selected.\n */\nselectFocusedIndex = new EventEmitter();\n/**\n * Event emitted when a label is focused.\n */\nindexFocused = new EventEmitter();\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _changeDetectorRef\n * @param {?} _dir\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _dir: Directionality) {\n    super();\n  }\n/**\n * @return {?}\n */\nngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._labelWrappers.length) {\n      this._updatePagination();\n      this._tabLabelCount = this._labelWrappers.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case RIGHT_ARROW:\n        this._focusNextTab();\n        break;\n      case LEFT_ARROW:\n        this._focusPreviousTab();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        event.preventDefault();\n        break;\n    }\n  }\n/**\n * Aligns the ink bar to the selected tab on load.\n * @return {?}\n */\nngAfterContentInit() {\n    const /** @type {?} */ dirChange = this._dir ? this._dir.change : observableOf(null);\n    const /** @type {?} */ resize = typeof window !== 'undefined' ?\n        auditTime.call(fromEvent(window, 'resize'), 150) :\n        observableOf(null);\n\n    this._realignInkBar = startWith.call(merge(dirChange, resize), null).subscribe(() => {\n      this._updatePagination();\n      this._alignInkBarToSelectedTab();\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._realignInkBar) {\n      this._realignInkBar.unsubscribe();\n      this._realignInkBar = null;\n    }\n  }\n/**\n * Callback for when the MutationObserver detects that the content has changed.\n * @return {?}\n */\n_onContentChanges() {\n    this._updatePagination();\n    this._alignInkBarToSelectedTab();\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Updating the view whether pagination should be enabled or not\n * @return {?}\n */\n_updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n/**\n * When the focus index is set, we must manually send focus to the correct label\n * @param {?} value\n * @return {?}\n */\nset focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this._focusIndex == value) { return; }\n\n    this._focusIndex = value;\n    this.indexFocused.emit(value);\n    this._setTabFocus(value);\n  }\n/**\n * Tracks which element has focus; used for keyboard navigation\n * @return {?}\n */\nget focusIndex(): number { return this._focusIndex; }\n/**\n * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n * providing a valid index and return true.\n * @param {?} index\n * @return {?}\n */\n_isValidIndex(index: number): boolean {\n    if (!this._labelWrappers) { return true; }\n\n    const /** @type {?} */ tab = this._labelWrappers ? this._labelWrappers.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n/**\n * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n * scrolling is enabled.\n * @param {?} tabIndex\n * @return {?}\n */\n_setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._labelWrappers && this._labelWrappers.length) {\n      this._labelWrappers.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const /** @type {?} */ containerEl = this._tabListContainer.nativeElement;\n      const /** @type {?} */ dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n/**\n * Moves the focus towards the beginning or the end of the list depending on the offset provided.\n * Valid offsets are 1 and -1.\n * @param {?} offset\n * @return {?}\n */\n_moveFocus(offset: number) {\n    if (this._labelWrappers) {\n      const /** @type {?} */ tabs: MdTabLabelWrapper[] = this._labelWrappers.toArray();\n\n      for (let /** @type {?} */ i = this.focusIndex + offset; i < tabs.length && i >= 0; i += offset) {\n        if (this._isValidIndex(i)) {\n          this.focusIndex = i;\n          return;\n        }\n      }\n    }\n  }\n/**\n * Increment the focus index by 1 until a valid tab is found.\n * @return {?}\n */\n_focusNextTab(): void {\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? 1 : -1);\n  }\n/**\n * Decrement the focus index by 1 until a valid tab is found.\n * @return {?}\n */\n_focusPreviousTab(): void {\n    this._moveFocus(this._getLayoutDirection() == 'ltr' ? -1 : 1);\n  }\n/**\n * The layout direction of the containing app.\n * @return {?}\n */\n_getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Performs the CSS transformation on the tab list that will cause the list to scroll.\n * @return {?}\n */\n_updateTabScrollPosition() {\n    const /** @type {?} */ scrollDistance = this.scrollDistance;\n    const /** @type {?} */ translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    this._renderer.setStyle(this._tabList.nativeElement, 'transform',\n        `translate3d(${translateX}px, 0, 0)`);\n  }\n/**\n * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n * @param {?} v\n * @return {?}\n */\nset scrollDistance(v: number) {\n    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), v));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n  }\n/**\n * @return {?}\n */\nget scrollDistance(): number { return this._scrollDistance; }\n/**\n * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n * the end of the list, respectively). The distance to scroll is computed to be a third of the\n * length of the tab list view window.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @param {?} scrollDir\n * @return {?}\n */\n_scrollHeader(scrollDir: ScrollDirection) {\n    const /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    this.scrollDistance += (scrollDir == 'before' ? -1 : 1) * viewLength / 3;\n  }\n/**\n * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @param {?} labelIndex\n * @return {?}\n */\n_scrollToLabel(labelIndex: number) {\n    const /** @type {?} */ selectedLabel = this._labelWrappers ? this._labelWrappers.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    let /** @type {?} */ labelBeforePos: number, /** @type {?} */ labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = selectedLabel.getOffsetLeft();\n      labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - selectedLabel.getOffsetLeft();\n      labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n    }\n\n    const /** @type {?} */ beforeVisiblePos = this.scrollDistance;\n    const /** @type {?} */ afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n/**\n * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n * tab list is wider than the size of the header container, then the pagination controls should\n * be shown.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @return {?}\n */\n_checkPaginationEnabled() {\n    const /** @type {?} */ isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n/**\n * Evaluate whether the before and after controls should be enabled or disabled.\n * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n * before button. If the header is at the end of the list (scroll distance is equal to the\n * maximum distance we can scroll), then disable the after button.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @return {?}\n */\n_checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n * is equal to the difference in width between the tab list container and tab header container.\n * \n * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n * should be called sparingly.\n * @return {?}\n */\n_getMaxScrollDistance(): number {\n    const /** @type {?} */ lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const /** @type {?} */ viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n/**\n * Tells the ink-bar to align itself to the current label wrapper\n * @return {?}\n */\nprivate _alignInkBarToSelectedTab(): void {\n    const /** @type {?} */ selectedLabelWrapper = this._labelWrappers && this._labelWrappers.length ?\n        this._labelWrappers.toArray()[this.selectedIndex].elementRef.nativeElement :\n        null;\n\n    this._inkBar.alignToElement(selectedLabelWrapper);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-header, mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ChangeDetectorRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_labelWrappers': [{ type: ContentChildren, args: [MdTabLabelWrapper, ] },],\n'_inkBar': [{ type: ViewChild, args: [MdInkBar, ] },],\n'_tabListContainer': [{ type: ViewChild, args: ['tabListContainer', ] },],\n'_tabList': [{ type: ViewChild, args: ['tabList', ] },],\n'selectedIndex': [{ type: Input },],\n'selectFocusedIndex': [{ type: Output },],\n'indexFocused': [{ type: Output },],\n};\n}\n\nfunction MdTabHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabHeader.ctorParameters;\n/** @type {?} */\nMdTabHeader.propDecorators;\n/** @type {?} */\nMdTabHeader.prototype._labelWrappers;\n/** @type {?} */\nMdTabHeader.prototype._inkBar;\n/** @type {?} */\nMdTabHeader.prototype._tabListContainer;\n/** @type {?} */\nMdTabHeader.prototype._tabList;\n/**\n * The tab index that is focused.\n * @type {?}\n */\nMdTabHeader.prototype._focusIndex;\n/**\n * The distance in pixels that the tab labels should be translated to the left.\n * @type {?}\n */\nMdTabHeader.prototype._scrollDistance;\n/**\n * Whether the header should scroll to the selected index after the view has been checked.\n * @type {?}\n */\nMdTabHeader.prototype._selectedIndexChanged;\n/**\n * Combines listeners that will re-align the ink bar whenever they're invoked.\n * @type {?}\n */\nMdTabHeader.prototype._realignInkBar;\n/**\n * Whether the controls for pagination should be displayed\n * @type {?}\n */\nMdTabHeader.prototype._showPaginationControls;\n/**\n * Whether the tab list can be scrolled more towards the end of the tab label list.\n * @type {?}\n */\nMdTabHeader.prototype._disableScrollAfter;\n/**\n * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n * @type {?}\n */\nMdTabHeader.prototype._disableScrollBefore;\n/**\n * The number of tab labels that are displayed on the header. When this changes, the header\n * should re-evaluate the scroll position.\n * @type {?}\n */\nMdTabHeader.prototype._tabLabelCount;\n/**\n * Whether the scroll distance has changed and should be applied after the view is checked.\n * @type {?}\n */\nMdTabHeader.prototype._scrollDistanceChanged;\n/** @type {?} */\nMdTabHeader.prototype._selectedIndex;\n/**\n * Event emitted when the option is selected.\n * @type {?}\n */\nMdTabHeader.prototype.selectFocusedIndex;\n/**\n * Event emitted when a label is focused.\n * @type {?}\n */\nMdTabHeader.prototype.indexFocused;\n/** @type {?} */\nMdTabHeader.prototype._elementRef;\n/** @type {?} */\nMdTabHeader.prototype._renderer;\n/** @type {?} */\nMdTabHeader.prototype._changeDetectorRef;\n/** @type {?} */\nMdTabHeader.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ElementRef,\n  Optional,\n  AfterViewChecked,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationEvent,\n} from '@angular/animations';\nimport {TemplatePortal, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MdTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MdTabBodyOriginState = 'left' | 'right';\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nexport class MdTabBody implements OnInit, AfterViewChecked {\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n */\n_portalHost: PortalHostDirective;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n */\nonCentering: EventEmitter<number> = new EventEmitter<number>();\n/**\n * Event emitted when the tab completes its animation towards the center.\n */\nonCentered: EventEmitter<void> = new EventEmitter<void>(true);\n/**\n * The tab body content to display.\n */\n_content: TemplatePortal<any>;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n */\n_position: MdTabBodyPositionState;\n/**\n * @param {?} position\n * @return {?}\n */\nset position(position: number) {\n    if (position < 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n    } else if (position > 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n/**\n * The origin position from which this tab should appear when it is centered into view.\n */\n_origin: MdTabBodyOriginState;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @param {?} origin\n * @return {?}\n */\nset origin(origin: number) {\n    if (origin == null) { return; }\n\n    const /** @type {?} */ dir = this._getLayoutDirection();\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      this._origin = 'left';\n    } else {\n      this._origin = 'right';\n    }\n  }\n/**\n * @param {?} _elementRef\n * @param {?} _dir\n */\nconstructor(private _elementRef: ElementRef,\nprivate _dir: Directionality) { }\n/**\n * After initialized, check if the content is centered and has an origin. If so, set the\n * special position states that transition the tab from the left or right before centering.\n * @return {?}\n */\nngOnInit() {\n    if (this._position == 'center' && this._origin) {\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n    }\n  }\n/**\n * After the view has been set, check if the tab content is set to the center and attach the\n * content if it is not already attached.\n * @return {?}\n */\nngAfterViewChecked() {\n    if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {\n      this._portalHost.attach(this._content);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabStarted(e: AnimationEvent) {\n    if (this._isCenterPosition(e.toState)) {\n      this.onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n/**\n * @param {?} e\n * @return {?}\n */\n_onTranslateTabComplete(e: AnimationEvent) {\n    // If the end state is that the tab is not centered, then detach the content.\n    if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {\n      this._portalHost.detach();\n    }\n\n    // If the transition to the center is complete, emit an event.\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n      this.onCentered.emit();\n    }\n  }\n/**\n * The text direction of the containing app.\n * @return {?}\n */\n_getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n/**\n * Whether the provided position state is considered center, regardless of origin.\n * @param {?} position\n * @return {?}\n */\nprivate _isCenterPosition(position: MdTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-body, mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-body',\n  },\n  animations: [\n    trigger('translateTab', [\n      state('void', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\n      state('left-origin-center', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('right-origin-center', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('center', style({transform: 'translate3d(0%, 0, 0)'})),\n      state('right', style({transform: 'translate3d(100%, 0, 0)'})),\n      transition('* => left, * => right, left => center, right => center',\n          animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n      transition('void => left-origin-center', [\n        style({transform: 'translate3d(-100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ]),\n      transition('void => right-origin-center', [\n        style({transform: 'translate3d(100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ])\n    ])\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n'onCentering': [{ type: Output },],\n'onCentered': [{ type: Output },],\n'_content': [{ type: Input, args: ['content', ] },],\n'position': [{ type: Input, args: ['position', ] },],\n'origin': [{ type: Input, args: ['origin', ] },],\n};\n}\n\nfunction MdTabBody_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabBody.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabBody.ctorParameters;\n/** @type {?} */\nMdTabBody.propDecorators;\n/**\n * The portal host inside of this container into which the tab body content will be loaded.\n * @type {?}\n */\nMdTabBody.prototype._portalHost;\n/**\n * Event emitted when the tab begins to animate towards the center as the active tab.\n * @type {?}\n */\nMdTabBody.prototype.onCentering;\n/**\n * Event emitted when the tab completes its animation towards the center.\n * @type {?}\n */\nMdTabBody.prototype.onCentered;\n/**\n * The tab body content to display.\n * @type {?}\n */\nMdTabBody.prototype._content;\n/**\n * The shifted index position of the tab body, where zero represents the active center tab.\n * @type {?}\n */\nMdTabBody.prototype._position;\n/**\n * The origin position from which this tab should appear when it is centered into view.\n * @type {?}\n */\nMdTabBody.prototype._origin;\n/** @type {?} */\nMdTabBody.prototype._elementRef;\n/** @type {?} */\nMdTabBody.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n  ContentChildren,\n  QueryList,\n  forwardRef,\n} from '@angular/core';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {auditTime, takeUntil} from '@angular/cdk/rxjs';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {merge} from 'rxjs/observable/merge';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\nimport {CanDisableRipple, mixinDisableRipple} from '../../core/common-behaviors/disable-ripple';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CanDisable, mixinDisabled} from '../../core/common-behaviors/disabled';\nimport {MD_RIPPLE_GLOBAL_OPTIONS, MdRipple, RippleGlobalOptions} from '../../core';\nimport {CanColor, mixinColor, ThemePalette} from '../../core/common-behaviors/color';\nimport {MdInkBar} from '../ink-bar';\n/**\n * \\@docs-private\n */\nexport class MdTabNavBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdTabNavBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNavBase.prototype._renderer;\n/** @type {?} */\nMdTabNavBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdTabNavMixinBase = mixinDisableRipple(mixinColor(MdTabNavBase, 'primary'));\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nexport class MdTabNav extends _MdTabNavMixinBase implements AfterContentInit, CanColor,\n    CanDisableRipple, OnDestroy {\n/**\n * Subject that emits when the component has been destroyed.\n */\nprivate _onDestroy = new Subject<void>();\n\n  _activeLinkChanged: boolean;\n  _activeLinkElement: ElementRef;\n\n   _inkBar: MdInkBar;\n/**\n * Query list of all tab links of the tab navigation.\n */\n_tabLinks: QueryList<MdTabLink>;\n/**\n * Subscription for window.resize event *\n */\nprivate _resizeSubscription: Subscription;\n/**\n * Background color of the tab nav.\n * @return {?}\n */\nget backgroundColor(): ThemePalette { return this._backgroundColor; }\n/**\n * @param {?} value\n * @return {?}\n */\nset backgroundColor(value: ThemePalette) {\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n\n    this._renderer.removeClass(nativeElement, `mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      this._renderer.addClass(nativeElement, `mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\nprivate _backgroundColor: ThemePalette;\n/**\n * Whether ripples should be disabled for all links or not.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\n    this._disableRipple = coerceBooleanProperty(value);\n    this._setLinkDisableRipple();\n  }\nprivate _disableRipple: boolean = false;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _dir\n * @param {?} _ngZone\n * @param {?} _changeDetectorRef\n */\nconstructor(renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _dir: Directionality,\nprivate _ngZone: NgZone,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    super(renderer, elementRef);\n  }\n/**\n * Notifies the component that the active link has been changed.\n * @param {?} element\n * @return {?}\n */\nupdateActiveLink(element: ElementRef) {\n    this._activeLinkChanged = this._activeLinkElement != element;\n    this._activeLinkElement = element;\n\n    if (this._activeLinkChanged) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this._resizeSubscription = this._ngZone.runOutsideAngular(() => {\n      let /** @type {?} */ dirChange = this._dir ? this._dir.change : observableOf(null);\n      let /** @type {?} */ resize = typeof window !== 'undefined' ?\n          auditTime.call(fromEvent(window, 'resize'), 10) :\n          observableOf(null);\n\n      return takeUntil.call(merge(dirChange, resize), this._onDestroy)\n          .subscribe(() => this._alignInkBar());\n    });\n    this._setLinkDisableRipple();\n  }\n/**\n * Checks if the active link has been changed and, if so, will update the ink bar.\n * @return {?}\n */\nngAfterContentChecked(): void {\n    if (this._activeLinkChanged) {\n      this._alignInkBar();\n      this._activeLinkChanged = false;\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._onDestroy.next();\n\n    if (this._resizeSubscription) {\n      this._resizeSubscription.unsubscribe();\n    }\n  }\n/**\n * Aligns the ink bar to the active link.\n * @return {?}\n */\n_alignInkBar(): void {\n    if (this._activeLinkElement) {\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\n    }\n  }\n/**\n * Sets the `disableRipple` property on each link of the navigation bar.\n * @return {?}\n */\nprivate _setLinkDisableRipple() {\n    if (this._tabLinks) {\n      this._tabLinks.forEach(link => link.disableRipple = this.disableRipple);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: '[md-tab-nav-bar], [mat-tab-nav-bar]',\n  inputs: ['color', 'disableRipple'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {'class': 'mat-tab-nav-bar'},\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_inkBar': [{ type: ViewChild, args: [MdInkBar, ] },],\n'_tabLinks': [{ type: ContentChildren, args: [forwardRef(() => MdTabLink), {descendants: true}, ] },],\n'backgroundColor': [{ type: Input },],\n};\n}\n\nfunction MdTabNav_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabNav.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabNav.ctorParameters;\n/** @type {?} */\nMdTabNav.propDecorators;\n/**\n * Subject that emits when the component has been destroyed.\n * @type {?}\n */\nMdTabNav.prototype._onDestroy;\n/** @type {?} */\nMdTabNav.prototype._activeLinkChanged;\n/** @type {?} */\nMdTabNav.prototype._activeLinkElement;\n/** @type {?} */\nMdTabNav.prototype._inkBar;\n/**\n * Query list of all tab links of the tab navigation.\n * @type {?}\n */\nMdTabNav.prototype._tabLinks;\n/**\n * Subscription for window.resize event *\n * @type {?}\n */\nMdTabNav.prototype._resizeSubscription;\n/** @type {?} */\nMdTabNav.prototype._backgroundColor;\n/** @type {?} */\nMdTabNav.prototype._disableRipple;\n/** @type {?} */\nMdTabNav.prototype._dir;\n/** @type {?} */\nMdTabNav.prototype._ngZone;\n/** @type {?} */\nMdTabNav.prototype._changeDetectorRef;\n}\n\nexport class MdTabLinkBase {}\nexport const /** @type {?} */ _MdTabLinkMixinBase = mixinDisabled(MdTabLinkBase);\n/**\n * Link inside of a `md-tab-nav-bar`.\n */\nexport class MdTabLink extends _MdTabLinkMixinBase implements OnDestroy, CanDisable {\n/**\n * Whether the tab link is active or not.\n */\nprivate _isActive: boolean = false;\n/**\n * Whether the ripples for this tab should be disabled or not.\n */\nprivate _disableRipple: boolean = false;\n/**\n * Reference to the instance of the ripple for the tab link.\n */\nprivate _tabLinkRipple: MdRipple;\n/**\n * Whether the link is active.\n * @return {?}\n */\nget active(): boolean { return this._isActive; }\n/**\n * @param {?} value\n * @return {?}\n */\nset active(value: boolean) {\n    this._isActive = value;\n    if (value) {\n      this._mdTabNavBar.updateActiveLink(this._elementRef);\n    }\n  }\n/**\n * Whether ripples should be disabled or not.\n * @return {?}\n */\nget disableRipple(): boolean { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\n    this._disableRipple = value;\n    this._tabLinkRipple.disabled = this.disableRipple;\n    this._tabLinkRipple._updateRippleRenderer();\n  }\n/**\n * \\@docs-private\n * @return {?}\n */\nget tabIndex(): number {\n    return this.disabled ? -1 : 0;\n  }\n/**\n * @param {?} _mdTabNavBar\n * @param {?} _elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(private _mdTabNavBar: MdTabNav,\nprivate _elementRef: ElementRef,\n              ngZone: NgZone,\n              ruler: ViewportRuler,\n              platform: Platform,\n                globalOptions: RippleGlobalOptions) {\n    super();\n\n    // Manually create a ripple instance that uses the tab link element as trigger element.\n    // Notice that the lifecycle hooks for the ripple config won't be called anymore.\n    this._tabLinkRipple = new MdRipple(_elementRef, ngZone, ruler, platform, globalOptions);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Manually call the ngOnDestroy lifecycle hook of the ripple instance because it won't be\n    // called automatically since its instance is not created by Angular.\n    this._tabLinkRipple.ngOnDestroy();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tab-link], [mat-tab-link], [mdTabLink], [matTabLink]',\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.tabindex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdTabNav, },\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'active': [{ type: Input },],\n};\n}\n\nfunction MdTabLink_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLink.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLink.ctorParameters;\n/** @type {?} */\nMdTabLink.propDecorators;\n/**\n * Whether the tab link is active or not.\n * @type {?}\n */\nMdTabLink.prototype._isActive;\n/**\n * Whether the ripples for this tab should be disabled or not.\n * @type {?}\n */\nMdTabLink.prototype._disableRipple;\n/**\n * Reference to the instance of the ripple for the tab link.\n * @type {?}\n */\nMdTabLink.prototype._tabLinkRipple;\n/** @type {?} */\nMdTabLink.prototype._mdTabNavBar;\n/** @type {?} */\nMdTabLink.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Renderer2, ElementRef, NgZone} from '@angular/core';\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nexport class MdInkBar {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _ngZone\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _ngZone: NgZone) {}\n/**\n * Calculates the styles from the provided element in order to align the ink-bar to that element.\n * Shows the ink bar if previously set as hidden.\n * @param {?} element\n * @return {?}\n */\nalignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n/**\n * Shows the ink bar.\n * @return {?}\n */\nshow(): void {\n    this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'visible');\n  }\n/**\n * Hides the ink bar.\n * @return {?}\n */\nhide(): void {\n    this._renderer.setStyle(this._elementRef.nativeElement, 'visibility', 'hidden');\n  }\n/**\n * Sets the proper styles to the ink bar element.\n * @param {?} element\n * @return {?}\n */\nprivate _setStyles(element: HTMLElement) {\n    const /** @type {?} */ left = element ? (element.offsetLeft || 0) + 'px' : '0';\n    const /** @type {?} */ width = element ? (element.offsetWidth || 0) + 'px' : '0';\n\n    this._renderer.setStyle(this._elementRef.nativeElement, 'left', left);\n    this._renderer.setStyle(this._elementRef.nativeElement, 'width', width);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-ink-bar, mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: NgZone, },\n];\n}\n\nfunction MdInkBar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdInkBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdInkBar.ctorParameters;\n/** @type {?} */\nMdInkBar.prototype._renderer;\n/** @type {?} */\nMdInkBar.prototype._elementRef;\n/** @type {?} */\nMdInkBar.prototype._ngZone;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\n/**\n * \\@docs-private\n */\nexport class MdTabLabelWrapperBase {}\nexport const /** @type {?} */ _MdTabLabelWrapperMixinBase = mixinDisabled(MdTabLabelWrapperBase);\n/**\n * Used in the `md-tab-group` view to display tab labels.\n * \\@docs-private\n */\nexport class MdTabLabelWrapper extends _MdTabLabelWrapperMixinBase implements CanDisable {\n/**\n * @param {?} elementRef\n */\nconstructor(public elementRef: ElementRef) {\n    super();\n  }\n/**\n * Sets focus on the wrapper element\n * @return {?}\n */\nfocus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n/**\n * @return {?}\n */\ngetOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n/**\n * @return {?}\n */\ngetOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdTabLabelWrapper], [matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\n}\n\nfunction MdTabLabelWrapper_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLabelWrapper.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLabelWrapper.ctorParameters;\n/** @type {?} */\nMdTabLabelWrapper.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  QueryList,\n  ContentChildren,\n  ElementRef,\n  Renderer2,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  AfterViewChecked,\n  AfterContentInit,\n  AfterContentChecked,\n  OnDestroy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {map} from '@angular/cdk/rxjs';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {MdTab} from './tab';\nimport {merge} from 'rxjs/observable/merge';\nimport {CanDisableRipple, mixinDisableRipple} from '../core/common-behaviors/disable-ripple';\nimport {CanColor, mixinColor, ThemePalette} from '../core/common-behaviors/color';\n/**\n * Used to generate unique ID's for each tab component\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nexport class MdTabChangeEvent {\n  index: number;\n  tab: MdTab;\n}\n\nfunction MdTabChangeEvent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabChangeEvent.prototype.index;\n/** @type {?} */\nMdTabChangeEvent.prototype.tab;\n}\n\n\n/** Possible positions for the tab header. */\nexport type MdTabHeaderPosition = 'above' | 'below';\n/**\n * \\@docs-private\n */\nexport class MdTabGroupBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdTabGroupBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabGroupBase.prototype._renderer;\n/** @type {?} */\nMdTabGroupBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdTabGroupMixinBase = mixinColor(mixinDisableRipple(MdTabGroupBase), 'primary');\n/**\n * Material design tab-group component.  Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://www.google.com/design/spec/components/tabs.html\n */\nexport class MdTabGroup extends _MdTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, AfterViewChecked, OnDestroy, CanColor, CanDisableRipple {\n\n   _tabs: QueryList<MdTab>;\n\n   _tabBodyWrapper: ElementRef;\n/**\n * Whether this component has been initialized.\n */\nprivate _isInitialized: boolean = false;\n/**\n * The tab index that should be selected after the content has been checked.\n */\nprivate _indexToSelect: number | null = 0;\n/**\n * Snapshot of the height of the tab body wrapper before another tab is activated.\n */\nprivate _tabBodyWrapperHeight: number = 0;\n/**\n * Subscription to tabs being added/removed.\n */\nprivate _tabsSubscription: Subscription;\n/**\n * Subscription to changes in the tab labels.\n */\nprivate _tabLabelSubscription: Subscription;\n/**\n * Whether the tab group should grow to the size of the active tab.\n * @return {?}\n */\nget dynamicHeight(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\nprivate _dynamicHeight: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _dynamicHeightDeprecated(): boolean { return this._dynamicHeight; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _dynamicHeightDeprecated(value: boolean) { this._dynamicHeight = value; }\n/**\n * The index of the active tab.\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number | null) { this._indexToSelect = value; }\n/**\n * @return {?}\n */\nget selectedIndex(): number | null { return this._selectedIndex; }\nprivate _selectedIndex: number | null = null;\n/**\n * Position of the tab header.\n */\nheaderPosition: MdTabHeaderPosition = 'above';\n/**\n * Background color of the tab group.\n * @return {?}\n */\nget backgroundColor(): ThemePalette { return this._backgroundColor; }\n/**\n * @param {?} value\n * @return {?}\n */\nset backgroundColor(value: ThemePalette) {\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n\n    this._renderer.removeClass(nativeElement, `mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      this._renderer.addClass(nativeElement, `mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\nprivate _backgroundColor: ThemePalette;\n/**\n * Output to enable support for two-way binding on `[(selectedIndex)]`\n * @return {?}\n */\nget selectedIndexChange(): Observable<number> {\n    return map.call(this.selectChange, event => event.index);\n  }\n/**\n * Event emitted when focus has changed within a tab group.\n */\nfocusChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>();\n/**\n * Event emitted when the tab selection has changed.\n */\nselectChange: EventEmitter<MdTabChangeEvent> = new EventEmitter<MdTabChangeEvent>(true);\nprivate _groupId: number;\n/**\n * @param {?} _renderer\n * @param {?} elementRef\n * @param {?} _changeDetectorRef\n */\nconstructor(_renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    super(_renderer, elementRef);\n    this._groupId = nextId++;\n  }\n/**\n * After the content is checked, this component knows what tabs have been defined\n * and what the selected index should be. This is where we can know exactly what position\n * each tab should be in according to the new selected index, and additionally we know how\n * a new selected tab should transition in (from the left or right).\n * @return {?}\n */\nngAfterContentChecked(): void {\n    // Clamp the next selected index to the bounds of 0 and the tabs length. Note the `|| 0`, which\n    // ensures that values like NaN can't get through and which would otherwise throw the\n    // component into an infinite loop (since Math.max(NaN, 0) === NaN).\n    let /** @type {?} */ indexToSelect = this._indexToSelect =\n        Math.min(this._tabs.length - 1, Math.max(this._indexToSelect || 0, 0));\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect && this._selectedIndex != null) {\n      this.selectChange.emit(this._createChangeEvent(indexToSelect));\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MdTab, index: number) => {\n      tab.position = index - indexToSelect;\n      tab.isActive = index === indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._tabsSubscription) {\n      this._tabsSubscription.unsubscribe();\n    }\n\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n  }\n/**\n * Waits one frame for the view to update, then updates the ink bar\n * Note: This must be run outside of the zone or it will create an infinite change detection loop.\n * @return {?}\n */\nngAfterViewChecked(): void {\n    this._isInitialized = true;\n  }\n/**\n * @param {?} index\n * @return {?}\n */\n_focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n/**\n * @param {?} index\n * @return {?}\n */\nprivate _createChangeEvent(index: number): MdTabChangeEvent {\n    const /** @type {?} */ event = new MdTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n/**\n * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n * on the MdTab component, whereas the data binding is inside the MdTabGroup. In order for the\n * binding to be updated, we need to subscribe to changes in it and trigger change detection\n * manually.\n * @return {?}\n */\nprivate _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._labelChange)).subscribe(() => {\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * Returns a unique id for each tab label element\n * @param {?} i\n * @return {?}\n */\n_getTabLabelId(i: number): string {\n    return `md-tab-label-${this._groupId}-${i}`;\n  }\n/**\n * Returns a unique id for each tab content element\n * @param {?} i\n * @return {?}\n */\n_getTabContentId(i: number): string {\n    return `md-tab-content-${this._groupId}-${i}`;\n  }\n/**\n * Sets the height of the body wrapper to the height of the activating tab if dynamic\n * height property is true.\n * @param {?} tabHeight\n * @return {?}\n */\n_setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height',\n        this._tabBodyWrapperHeight + 'px');\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height',\n          tabHeight + 'px');\n    }\n  }\n/**\n * Removes the height of the tab body wrapper.\n * @return {?}\n */\n_removeTabBodyWrapperHeight(): void {\n    this._tabBodyWrapperHeight = this._tabBodyWrapper.nativeElement.clientHeight;\n    this._renderer.setStyle(this._tabBodyWrapper.nativeElement, 'height', '');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab-group, mat-tab-group',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_tabs': [{ type: ContentChildren, args: [MdTab, ] },],\n'_tabBodyWrapper': [{ type: ViewChild, args: ['tabBodyWrapper', ] },],\n'dynamicHeight': [{ type: Input },],\n'_dynamicHeightDeprecated': [{ type: Input, args: ['md-dynamic-height', ] },],\n'selectedIndex': [{ type: Input },],\n'headerPosition': [{ type: Input },],\n'backgroundColor': [{ type: Input },],\n'selectedIndexChange': [{ type: Output },],\n'focusChange': [{ type: Output },],\n'selectChange': [{ type: Output },],\n};\n}\n\nfunction MdTabGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabGroup.ctorParameters;\n/** @type {?} */\nMdTabGroup.propDecorators;\n/** @type {?} */\nMdTabGroup.prototype._tabs;\n/** @type {?} */\nMdTabGroup.prototype._tabBodyWrapper;\n/**\n * Whether this component has been initialized.\n * @type {?}\n */\nMdTabGroup.prototype._isInitialized;\n/**\n * The tab index that should be selected after the content has been checked.\n * @type {?}\n */\nMdTabGroup.prototype._indexToSelect;\n/**\n * Snapshot of the height of the tab body wrapper before another tab is activated.\n * @type {?}\n */\nMdTabGroup.prototype._tabBodyWrapperHeight;\n/**\n * Subscription to tabs being added/removed.\n * @type {?}\n */\nMdTabGroup.prototype._tabsSubscription;\n/**\n * Subscription to changes in the tab labels.\n * @type {?}\n */\nMdTabGroup.prototype._tabLabelSubscription;\n/** @type {?} */\nMdTabGroup.prototype._dynamicHeight;\n/** @type {?} */\nMdTabGroup.prototype._selectedIndex;\n/**\n * Position of the tab header.\n * @type {?}\n */\nMdTabGroup.prototype.headerPosition;\n/** @type {?} */\nMdTabGroup.prototype._backgroundColor;\n/**\n * Event emitted when focus has changed within a tab group.\n * @type {?}\n */\nMdTabGroup.prototype.focusChange;\n/**\n * Event emitted when the tab selection has changed.\n * @type {?}\n */\nMdTabGroup.prototype.selectChange;\n/** @type {?} */\nMdTabGroup.prototype._groupId;\n/** @type {?} */\nMdTabGroup.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {TemplatePortal} from '../core/portal/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\nimport {MdTabLabel} from './tab-label';\nimport {Subject} from 'rxjs/Subject';\n/**\n * \\@docs-private\n */\nexport class MdTabBase {}\nexport const /** @type {?} */ _MdTabMixinBase = mixinDisabled(MdTabBase);\nexport class MdTab extends _MdTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n/**\n * Content for the tab label given by <ng-template md-tab-label>.\n */\ntemplateLabel: MdTabLabel;\n/**\n * Template inside the MdTab view that contains an <ng-content>.\n */\n_content: TemplateRef<any>;\n/**\n * The plain text label for the tab, used when there is no template label.\n */\ntextLabel: string = '';\n/**\n * The portal that will be the hosted content of the tab\n */\nprivate _contentPortal: TemplatePortal<any> | null = null;\n/**\n * @return {?}\n */\nget content(): TemplatePortal<any> | null { return this._contentPortal; }\n/**\n * Emits whenever the label changes.\n */\n_labelChange = new Subject<void>();\n/**\n * The relatively indexed position where 0 represents the center, negative is left, and positive\n * represents the right.\n */\nposition: number | null = null;\n/**\n * The initial relatively index origin of the tab if it was created and selected after there\n * was already a selected tab. Provides context of what position the tab should originate from.\n */\norigin: number | null = null;\n/**\n * Whether the tab is currently active.\n */\nisActive = false;\n/**\n * @param {?} _viewContainerRef\n */\nconstructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes.hasOwnProperty('textLabel')) {\n      this._labelChange.next();\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._labelChange.complete();\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._contentPortal = new TemplatePortal(this._content, this._viewContainerRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-tab, mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'mdTab',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewContainerRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'templateLabel': [{ type: ContentChild, args: [MdTabLabel, ] },],\n'_content': [{ type: ViewChild, args: [TemplateRef, ] },],\n'textLabel': [{ type: Input, args: ['label', ] },],\n};\n}\n\nfunction MdTab_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTab.ctorParameters;\n/** @type {?} */\nMdTab.propDecorators;\n/**\n * Content for the tab label given by <ng-template md-tab-label>.\n * @type {?}\n */\nMdTab.prototype.templateLabel;\n/**\n * Template inside the MdTab view that contains an <ng-content>.\n * @type {?}\n */\nMdTab.prototype._content;\n/**\n * The plain text label for the tab, used when there is no template label.\n * @type {?}\n */\nMdTab.prototype.textLabel;\n/**\n * The portal that will be the hosted content of the tab\n * @type {?}\n */\nMdTab.prototype._contentPortal;\n/**\n * Emits whenever the label changes.\n * @type {?}\n */\nMdTab.prototype._labelChange;\n/**\n * The relatively indexed position where 0 represents the center, negative is left, and positive\n * represents the right.\n * @type {?}\n */\nMdTab.prototype.position;\n/**\n * The initial relatively index origin of the tab if it was created and selected after there\n * was already a selected tab. Provides context of what position the tab should originate from.\n * @type {?}\n */\nMdTab.prototype.origin;\n/**\n * Whether the tab is currently active.\n * @type {?}\n */\nMdTab.prototype.isActive;\n/** @type {?} */\nMdTab.prototype._viewContainerRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {TemplatePortalDirective} from '@angular/cdk/portal';\n/**\n * Workaround for https://github.com/angular/angular/issues/17849\n */\nexport const _MdTabLabelBaseClass = TemplatePortalDirective;\n/**\n * Used to flag tab labels for use with the portal directive\n */\nexport class MdTabLabel extends _MdTabLabelBaseClass {\n/**\n * @param {?} templateRef\n * @param {?} viewContainerRef\n */\nconstructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-tab-label], [mat-tab-label], [mdTabLabel], [matTabLabel]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n];\n}\n\nfunction MdTabLabel_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTabLabel.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTabLabel.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {LIVE_ANNOUNCER_PROVIDER} from '@angular/cdk/a11y';\nimport {MdCommonModule} from '../core';\nimport {MdSnackBar} from './snack-bar';\nimport {MdSnackBarContainer} from './snack-bar-container';\nimport {SimpleSnackBar} from './simple-snack-bar';\nexport class MdSnackBarModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    OverlayModule,\n    PortalModule,\n    CommonModule,\n    MdCommonModule,\n  ],\n  exports: [MdSnackBarContainer, MdCommonModule],\n  declarations: [MdSnackBarContainer, SimpleSnackBar],\n  entryComponents: [MdSnackBarContainer, SimpleSnackBar],\n  providers: [MdSnackBar, LIVE_ANNOUNCER_PROVIDER]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSnackBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSnackBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSnackBarModule.ctorParameters;\n}\n\n\n\nexport {MdSnackBar} from './snack-bar';\nexport {SnackBarState,SHOW_ANIMATION,HIDE_ANIMATION,MdSnackBarContainer} from './snack-bar-container';\nexport {MD_SNACK_BAR_DATA,MdSnackBarConfig} from './snack-bar-config';\nexport {MdSnackBarRef} from './snack-bar-ref';\nexport {SimpleSnackBar} from './simple-snack-bar';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ComponentRef, Injectable, Injector, Optional, SkipSelf } from '@angular/core';\nimport {Overlay, OverlayRef, OverlayState} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\nimport {PortalInjector} from '../core/portal/portal-injector';\nimport {extendObject} from '../core/util/object-extend';\nimport {MD_SNACK_BAR_DATA, MdSnackBarConfig} from './snack-bar-config';\nimport {MdSnackBarRef} from './snack-bar-ref';\nimport {MdSnackBarContainer} from './snack-bar-container';\nimport {SimpleSnackBar} from './simple-snack-bar';\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nexport class MdSnackBar {\n/**\n * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n * If there is a parent snack-bar service, all operations should delegate to that parent\n * via `_openedSnackBarRef`.\n */\nprivate _snackBarRefAtThisLevel: MdSnackBarRef<any> | null = null;\n/**\n * Reference to the currently opened snackbar at *any* level.\n * @return {?}\n */\nget _openedSnackBarRef(): MdSnackBarRef<any> | null {\n    const /** @type {?} */ parent = this._parentSnackBar;\n    return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset _openedSnackBarRef(value: MdSnackBarRef<any> | null) {\n    if (this._parentSnackBar) {\n      this._parentSnackBar._openedSnackBarRef = value;\n    } else {\n      this._snackBarRefAtThisLevel = value;\n    }\n  }\n/**\n * @param {?} _overlay\n * @param {?} _live\n * @param {?} _injector\n * @param {?} _parentSnackBar\n */\nconstructor(\nprivate _overlay: Overlay,\nprivate _live: LiveAnnouncer,\nprivate _injector: Injector,\nprivate _parentSnackBar: MdSnackBar) {}\n/**\n * Creates and dispatches a snack bar with a custom component for the content, removing any\n * currently opened snack bars.\n * \n * @template T\n * @param {?} component Component to be instantiated.\n * @param {?=} config Extra configuration for the snack bar.\n * @return {?}\n */\nopenFromComponent<T>(component: ComponentType<T>, config?: MdSnackBarConfig): MdSnackBarRef<T> {\n    const /** @type {?} */ _config = _applyConfigDefaults(config);\n    const /** @type {?} */ snackBarRef = this._attach(component, _config);\n\n    // When the snackbar is dismissed, clear the reference to it.\n    snackBarRef.afterDismissed().subscribe(() => {\n      // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n      if (this._openedSnackBarRef == snackBarRef) {\n        this._openedSnackBarRef = null;\n      }\n    });\n\n    if (this._openedSnackBarRef) {\n      // If a snack bar is already in view, dismiss it and enter the\n      // new snack bar after exit animation is complete.\n      this._openedSnackBarRef.afterDismissed().subscribe(() => {\n        snackBarRef.containerInstance.enter();\n      });\n      this._openedSnackBarRef.dismiss();\n    } else {\n      // If no snack bar is in view, enter the new snack bar.\n      snackBarRef.containerInstance.enter();\n    }\n\n    // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n    if (_config.duration && _config.duration > 0) {\n      snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter( /** @type {?} */(( /** @type {?} */((_config)).duration))));\n    }\n\n    if (_config.announcementMessage) {\n      this._live.announce(_config.announcementMessage, _config.politeness);\n    }\n\n    this._openedSnackBarRef = snackBarRef;\n    return this._openedSnackBarRef;\n  }\n/**\n * Opens a snackbar with a message and an optional action.\n * @param {?} message The message to show in the snackbar.\n * @param {?=} action The label for the snackbar action.\n * @param {?=} config Additional configuration options for the snackbar.\n * @return {?}\n */\nopen(message: string, action = '', config?: MdSnackBarConfig): MdSnackBarRef<SimpleSnackBar> {\n    const /** @type {?} */ _config = _applyConfigDefaults(config);\n\n    // Since the user doesn't have access to the component, we can\n    // override the data to pass in our own message and action.\n    _config.data = {message, action};\n    _config.announcementMessage = message;\n\n    return this.openFromComponent(SimpleSnackBar, _config);\n  }\n/**\n * Dismisses the currently-visible snack bar.\n * @return {?}\n */\ndismiss(): void {\n    if (this._openedSnackBarRef) {\n      this._openedSnackBarRef.dismiss();\n    }\n  }\n/**\n * Attaches the snack bar container component to the overlay.\n * @param {?} overlayRef\n * @param {?} config\n * @return {?}\n */\nprivate _attachSnackBarContainer(overlayRef: OverlayRef,\n                                   config: MdSnackBarConfig): MdSnackBarContainer {\n    const /** @type {?} */ containerPortal = new ComponentPortal(MdSnackBarContainer, config.viewContainerRef);\n    const /** @type {?} */ containerRef: ComponentRef<MdSnackBarContainer> = overlayRef.attach(containerPortal);\n    containerRef.instance.snackBarConfig = config;\n    return containerRef.instance;\n  }\n/**\n * Places a new component as the content of the snack bar container.\n * @template T\n * @param {?} component\n * @param {?} config\n * @return {?}\n */\nprivate _attach<T>(component: ComponentType<T>, config: MdSnackBarConfig): MdSnackBarRef<T> {\n    const /** @type {?} */ overlayRef = this._createOverlay(config);\n    const /** @type {?} */ container = this._attachSnackBarContainer(overlayRef, config);\n    const /** @type {?} */ snackBarRef = new MdSnackBarRef<T>(container, overlayRef);\n    const /** @type {?} */ injector = this._createInjector(config, snackBarRef);\n    const /** @type {?} */ portal = new ComponentPortal(component, undefined, injector);\n    const /** @type {?} */ contentRef = container.attachComponentPortal(portal);\n\n    // We can't pass this via the injector, because the injector is created earlier.\n    snackBarRef.instance = contentRef.instance;\n\n    return snackBarRef;\n  }\n/**\n * Creates a new overlay and places it in the correct location.\n * @param {?} config The user-specified snack bar config.\n * @return {?}\n */\nprivate _createOverlay(config: MdSnackBarConfig): OverlayRef {\n    const /** @type {?} */ state = new OverlayState();\n    state.direction = config.direction;\n    state.positionStrategy = this._overlay.position().global().centerHorizontally().bottom('0');\n    return this._overlay.create(state);\n  }\n/**\n * Creates an injector to be used inside of a snack bar component.\n * @template T\n * @param {?} config Config that was used to create the snack bar.\n * @param {?} snackBarRef Reference to the snack bar.\n * @return {?}\n */\nprivate _createInjector<T>(\n      config: MdSnackBarConfig,\n      snackBarRef: MdSnackBarRef<T>): PortalInjector {\n\n    const /** @type {?} */ userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const /** @type {?} */ injectionTokens = new WeakMap();\n\n    injectionTokens.set(MdSnackBarRef, snackBarRef);\n    injectionTokens.set(MD_SNACK_BAR_DATA, config.data);\n\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Overlay, },\n{type: LiveAnnouncer, },\n{type: Injector, },\n{type: MdSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction MdSnackBar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSnackBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSnackBar.ctorParameters;\n/**\n * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n * If there is a parent snack-bar service, all operations should delegate to that parent\n * via `_openedSnackBarRef`.\n * @type {?}\n */\nMdSnackBar.prototype._snackBarRefAtThisLevel;\n/** @type {?} */\nMdSnackBar.prototype._overlay;\n/** @type {?} */\nMdSnackBar.prototype._live;\n/** @type {?} */\nMdSnackBar.prototype._injector;\n/** @type {?} */\nMdSnackBar.prototype._parentSnackBar;\n}\n\n/**\n * Applies default options to the snackbar config.\n * @param {?=} config The configuration to which the defaults will be applied.\n * @return {?} The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(config?: MdSnackBarConfig): MdSnackBarConfig {\n  return extendObject(new MdSnackBarConfig(), config);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Component, ViewEncapsulation, Inject, ChangeDetectionStrategy} from '@angular/core';\nimport {MdSnackBarRef} from './snack-bar-ref';\nimport {MD_SNACK_BAR_DATA} from './snack-bar-config';\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nexport class SimpleSnackBar {\n/**\n * Data that was injected into the snack bar.\n */\ndata: { message: string, action: string };\n/**\n * @param {?} snackBarRef\n * @param {?} data\n */\nconstructor(\npublic snackBarRef: MdSnackBarRef<SimpleSnackBar>,\n     data: any) {\n    this.data = data;\n  }\n/**\n * Performs the action on the snack bar.\n * @return {?}\n */\naction(): void {\n    this.snackBarRef.closeWithAction();\n  }\n/**\n * If the action button should be shown.\n * @return {?}\n */\nget hasAction(): boolean {\n    return !!this.data.action;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'simple-snack-bar',\n  templateUrl: 'simple-snack-bar.html',\n  styleUrls: ['simple-snack-bar.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-simple-snackbar',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdSnackBarRef, },\n{type: undefined, decorators: [{ type: Inject, args: [MD_SNACK_BAR_DATA, ] }, ]},\n];\n}\n\nfunction SimpleSnackBar_tsickle_Closure_declarations() {\n/** @type {?} */\nSimpleSnackBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSimpleSnackBar.ctorParameters;\n/**\n * Data that was injected into the snack bar.\n * @type {?}\n */\nSimpleSnackBar.prototype.data;\n/** @type {?} */\nSimpleSnackBar.prototype.snackBarRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ComponentRef,\n  EmbeddedViewRef,\n  ViewChild,\n  NgZone,\n  OnDestroy,\n  Renderer2,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  AnimationEvent,\n} from '@angular/animations';\nimport {\n  BasePortalHost,\n  ComponentPortal,\n  PortalHostDirective,\n} from '@angular/cdk/portal';\nimport {first} from '@angular/cdk/rxjs';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {MdSnackBarConfig} from './snack-bar-config';\n\n\nexport type SnackBarState = 'initial' | 'visible' | 'complete' | 'void';\n\n// TODO(jelbourn): we can't use constants from animation.ts here because you can't use\n// a text interpolation in anything that is analyzed statically with ngc (for AoT compile).\nexport const /** @type {?} */ SHOW_ANIMATION = '225ms cubic-bezier(0.4,0.0,1,1)';\nexport const /** @type {?} */ HIDE_ANIMATION = '195ms cubic-bezier(0.0,0.0,0.2,1)';\n/**\n * Internal component that wraps user-provided snack bar content.\n * \\@docs-private\n */\nexport class MdSnackBarContainer extends BasePortalHost implements OnDestroy {\n/**\n * The portal host inside of this container into which the snack bar content will be loaded.\n */\n_portalHost: PortalHostDirective;\n/**\n * Subject for notifying that the snack bar has exited from view.\n */\nprivate onExit: Subject<any> = new Subject();\n/**\n * Subject for notifying that the snack bar has finished entering the view.\n */\nprivate onEnter: Subject<any> = new Subject();\n/**\n * The state of the snack bar animations.\n */\nanimationState: SnackBarState = 'initial';\n/**\n * The snack bar configuration.\n */\nsnackBarConfig: MdSnackBarConfig;\n/**\n * @param {?} _ngZone\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(\nprivate _ngZone: NgZone,\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef) {\n    super();\n  }\n/**\n * Attach a component portal as content to this snack bar container.\n * @template T\n * @param {?} portal\n * @return {?}\n */\nattachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalHost.hasAttached()) {\n      throw Error('Attempting to attach snack bar content after content is already attached');\n    }\n\n    if (this.snackBarConfig.extraClasses) {\n      // Not the most efficient way of adding classes, but the renderer doesn't allow us\n      // to pass in an array or a space-separated list.\n      for (let /** @type {?} */ cssClass of this.snackBarConfig.extraClasses) {\n        this._renderer.addClass(this._elementRef.nativeElement, cssClass);\n      }\n    }\n\n    return this._portalHost.attachComponentPortal(portal);\n  }\n/**\n * Attach a template portal as content to this snack bar container.\n * @return {?}\n */\nattachTemplatePortal(): EmbeddedViewRef<any> {\n    throw Error('Not yet implemented');\n  }\n/**\n * Handle end of animations, updating the state of the snackbar.\n * @param {?} event\n * @return {?}\n */\nonAnimationEnd(event: AnimationEvent) {\n    if (event.toState === 'void' || event.toState === 'complete') {\n      this._completeExit();\n    }\n\n    if (event.toState === 'visible') {\n      // Note: we shouldn't use `this` inside the zone callback,\n      // because it can cause a memory leak.\n      const /** @type {?} */ onEnter = this.onEnter;\n\n      this._ngZone.run(() => {\n        onEnter.next();\n        onEnter.complete();\n      });\n    }\n  }\n/**\n * Begin animation of snack bar entrance into view.\n * @return {?}\n */\nenter(): void {\n    this.animationState = 'visible';\n  }\n/**\n * Returns an observable resolving when the enter animation completes.\n * @return {?}\n */\n_onEnter(): Observable<void> {\n    this.animationState = 'visible';\n    return this.onEnter.asObservable();\n  }\n/**\n * Begin animation of the snack bar exiting from view.\n * @return {?}\n */\nexit(): Observable<void> {\n    this.animationState = 'complete';\n    return this._onExit();\n  }\n/**\n * Returns an observable that completes after the closing animation is done.\n * @return {?}\n */\n_onExit(): Observable<void> {\n    return this.onExit.asObservable();\n  }\n/**\n * Makes sure the exit callbacks have been invoked when the element is destroyed.\n * @return {?}\n */\nngOnDestroy() {\n    this._completeExit();\n  }\n/**\n * Waits for the zone to settle before removing the element. Helps prevent\n * errors where we end up removing an element which is in the middle of an animation.\n * @return {?}\n */\nprivate _completeExit() {\n    // Note: we shouldn't use `this` inside the zone callback,\n    // because it can cause a memory leak.\n    const /** @type {?} */ onExit = this.onExit;\n\n    first.call(this._ngZone.onMicrotaskEmpty).subscribe(() => {\n      onExit.next();\n      onExit.complete();\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'snack-bar-container',\n  templateUrl: 'snack-bar-container.html',\n  styleUrls: ['snack-bar-container.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'role': 'alert',\n    'class': 'mat-snack-bar-container',\n    '[@state]': 'animationState',\n    '(@state.done)': 'onAnimationEnd($event)'\n  },\n  animations: [\n    trigger('state', [\n      state('void', style({transform: 'translateY(100%)'})),\n      state('initial', style({transform: 'translateY(100%)'})),\n      state('visible', style({transform: 'translateY(0%)'})),\n      state('complete', style({transform: 'translateY(100%)'})),\n      transition('visible => complete', animate(HIDE_ANIMATION)),\n      transition('initial => visible, void => visible', animate(SHOW_ANIMATION)),\n    ])\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_portalHost': [{ type: ViewChild, args: [PortalHostDirective, ] },],\n};\n}\n\nfunction MdSnackBarContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSnackBarContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSnackBarContainer.ctorParameters;\n/** @type {?} */\nMdSnackBarContainer.propDecorators;\n/**\n * The portal host inside of this container into which the snack bar content will be loaded.\n * @type {?}\n */\nMdSnackBarContainer.prototype._portalHost;\n/**\n * Subject for notifying that the snack bar has exited from view.\n * @type {?}\n */\nMdSnackBarContainer.prototype.onExit;\n/**\n * Subject for notifying that the snack bar has finished entering the view.\n * @type {?}\n */\nMdSnackBarContainer.prototype.onEnter;\n/**\n * The state of the snack bar animations.\n * @type {?}\n */\nMdSnackBarContainer.prototype.animationState;\n/**\n * The snack bar configuration.\n * @type {?}\n */\nMdSnackBarContainer.prototype.snackBarConfig;\n/** @type {?} */\nMdSnackBarContainer.prototype._ngZone;\n/** @type {?} */\nMdSnackBarContainer.prototype._renderer;\n/** @type {?} */\nMdSnackBarContainer.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {MdSnackBarContainer} from './snack-bar-container';\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nexport class MdSnackBarRef<T> {\n/**\n * The instance of the component making up the content of the snack bar.\n */\ninstance: T;\n/**\n * The instance of the component making up the content of the snack bar.\n * \\@docs-private\n */\ncontainerInstance: MdSnackBarContainer;\n/**\n * Subject for notifying the user that the snack bar has closed.\n */\nprivate _afterClosed = new Subject<void>();\n/**\n * Subject for notifying the user that the snack bar has opened and appeared.\n */\nprivate _afterOpened = new Subject<void>();\n/**\n * Subject for notifying the user that the snack bar action was called.\n */\nprivate _onAction = new Subject<void>();\n/**\n * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n * dismissed before the duration passes.\n */\nprivate _durationTimeoutId: number;\n/**\n * @param {?} containerInstance\n * @param {?} _overlayRef\n */\nconstructor(containerInstance: MdSnackBarContainer,\nprivate _overlayRef: OverlayRef) {\n    this.containerInstance = containerInstance;\n    // Dismiss snackbar on action.\n    this.onAction().subscribe(() => this.dismiss());\n    containerInstance._onExit().subscribe(() => this._finishDismiss());\n  }\n/**\n * Dismisses the snack bar.\n * @return {?}\n */\ndismiss(): void {\n    if (!this._afterClosed.closed) {\n      this.containerInstance.exit();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n/**\n * Marks the snackbar action clicked.\n * @return {?}\n */\ncloseWithAction(): void {\n    if (!this._onAction.closed) {\n      this._onAction.next();\n      this._onAction.complete();\n    }\n  }\n/**\n * Dismisses the snack bar after some duration\n * @param {?} duration\n * @return {?}\n */\n_dismissAfter(duration: number): void {\n    this._durationTimeoutId = setTimeout(() => this.dismiss(), duration);\n  }\n/**\n * Marks the snackbar as opened\n * @return {?}\n */\n_open(): void {\n    if (!this._afterOpened.closed) {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    }\n  }\n/**\n * Cleans up the DOM after closing.\n * @return {?}\n */\nprivate _finishDismiss(): void {\n    this._overlayRef.dispose();\n    this._afterClosed.next();\n    this._afterClosed.complete();\n  }\n/**\n * Gets an observable that is notified when the snack bar is finished closing.\n * @return {?}\n */\nafterDismissed(): Observable<void> {\n    return this._afterClosed.asObservable();\n  }\n/**\n * Gets an observable that is notified when the snack bar has opened and appeared.\n * @return {?}\n */\nafterOpened(): Observable<void> {\n    return this.containerInstance._onEnter();\n  }\n/**\n * Gets an observable that is notified when the snack bar action is called.\n * @return {?}\n */\nonAction(): Observable<void> {\n    return this._onAction.asObservable();\n  }\n}\n\nfunction MdSnackBarRef_tsickle_Closure_declarations() {\n/**\n * The instance of the component making up the content of the snack bar.\n * @type {?}\n */\nMdSnackBarRef.prototype.instance;\n/**\n * The instance of the component making up the content of the snack bar.\n * \\@docs-private\n * @type {?}\n */\nMdSnackBarRef.prototype.containerInstance;\n/**\n * Subject for notifying the user that the snack bar has closed.\n * @type {?}\n */\nMdSnackBarRef.prototype._afterClosed;\n/**\n * Subject for notifying the user that the snack bar has opened and appeared.\n * @type {?}\n */\nMdSnackBarRef.prototype._afterOpened;\n/**\n * Subject for notifying the user that the snack bar action was called.\n * @type {?}\n */\nMdSnackBarRef.prototype._onAction;\n/**\n * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n * dismissed before the duration passes.\n * @type {?}\n */\nMdSnackBarRef.prototype._durationTimeoutId;\n/** @type {?} */\nMdSnackBarRef.prototype._overlayRef;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ViewContainerRef, InjectionToken} from '@angular/core';\nimport {AriaLivePoliteness} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\n\nexport const /** @type {?} */ MD_SNACK_BAR_DATA = new InjectionToken<any>('MdSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nexport class MdSnackBarConfig {\n/**\n * The politeness level for the MdAriaLiveAnnouncer announcement.\n */\npoliteness?: AriaLivePoliteness = 'assertive';\n/**\n * Message to be announced by the MdAriaLiveAnnouncer\n */\nannouncementMessage?: string = '';\n/**\n * The view container to place the overlay for the snack bar into.\n */\nviewContainerRef?: ViewContainerRef;\n/**\n * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n */\nduration?: number = 0;\n/**\n * Extra CSS classes to be added to the snack bar container.\n */\nextraClasses?: string[];\n/**\n * Text layout direction for the snack bar.\n */\ndirection?: Direction = 'ltr';\n/**\n * Data being injected into the child component.\n */\ndata?: any = null;\n}\n\nfunction MdSnackBarConfig_tsickle_Closure_declarations() {\n/**\n * The politeness level for the MdAriaLiveAnnouncer announcement.\n * @type {?}\n */\nMdSnackBarConfig.prototype.politeness;\n/**\n * Message to be announced by the MdAriaLiveAnnouncer\n * @type {?}\n */\nMdSnackBarConfig.prototype.announcementMessage;\n/**\n * The view container to place the overlay for the snack bar into.\n * @type {?}\n */\nMdSnackBarConfig.prototype.viewContainerRef;\n/**\n * The length of time in milliseconds to wait before automatically dismissing the snack bar.\n * @type {?}\n */\nMdSnackBarConfig.prototype.duration;\n/**\n * Extra CSS classes to be added to the snack bar container.\n * @type {?}\n */\nMdSnackBarConfig.prototype.extraClasses;\n/**\n * Text layout direction for the snack bar.\n * @type {?}\n */\nMdSnackBarConfig.prototype.direction;\n/**\n * Data being injected into the child component.\n * @type {?}\n */\nMdSnackBarConfig.prototype.data;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injector} from '@angular/core';\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nexport class PortalInjector implements Injector {\n/**\n * @param {?} _parentInjector\n * @param {?} _customTokens\n */\nconstructor(\nprivate _parentInjector: Injector,\nprivate _customTokens: WeakMap<any, any>) { }\n/**\n * @param {?} token\n * @param {?=} notFoundValue\n * @return {?}\n */\nget(token: any, notFoundValue?: any): any {\n    const /** @type {?} */ value = this._customTokens.get(token);\n\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n\n    return this._parentInjector.get<any>(token, notFoundValue);\n  }\n}\n\nfunction PortalInjector_tsickle_Closure_declarations() {\n/** @type {?} */\nPortalInjector.prototype._parentInjector;\n/** @type {?} */\nPortalInjector.prototype._customTokens;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdInput} from './input';\nimport {MdTextareaAutosize} from './autosize';\nimport {CommonModule} from '@angular/common';\nimport {PlatformModule} from '../core/platform/index';\nimport {MdFormFieldModule} from '../form-field/index';\nexport class MdInputModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    MdInput,\n    MdTextareaAutosize,\n  ],\n  imports: [\n    CommonModule,\n    MdFormFieldModule,\n    PlatformModule,\n  ],\n  exports: [\n    // We re-export the `MdFormFieldModule` since `MdInput` will almost always be used together with\n    // `MdFormField`.\n    MdFormFieldModule,\n    MdInput,\n    MdTextareaAutosize,\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdInputModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdInputModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdInputModule.ctorParameters;\n}\n\n\n\nexport {MdTextareaAutosize} from './autosize';\nexport {MdInput} from './input';\nexport {getMdInputUnsupportedTypeError} from './input-errors';\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, ElementRef, Input, AfterViewInit, Optional, Self} from '@angular/core';\nimport {NgControl} from '@angular/forms';\nimport {Platform} from '@angular/cdk/platform';\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nexport class MdTextareaAutosize implements AfterViewInit {\n/**\n * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n */\nprivate _previousValue: string;\nprivate _minRows: number;\nprivate _maxRows: number;\n/**\n * @return {?}\n */\nget minRows() { return this._minRows; }\n/**\n * @param {?} value\n * @return {?}\n */\nset minRows(value: number) {\n    this._minRows = value;\n    this._setMinHeight();\n  }\n/**\n * @return {?}\n */\nget maxRows() { return this._maxRows; }\n/**\n * @param {?} value\n * @return {?}\n */\nset maxRows(value: number) {\n    this._maxRows = value;\n    this._setMaxHeight();\n  }\n/**\n * @return {?}\n */\nget _matAutosizeMinRows() { return this.minRows; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matAutosizeMinRows(v) { this.minRows = v; }\n/**\n * @return {?}\n */\nget _matAutosizeMaxRows() { return this.maxRows; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matAutosizeMaxRows(v) { this.maxRows = v; }\n/**\n * Cached height of a textarea with a single row.\n */\nprivate _cachedLineHeight: number;\n/**\n * @param {?} _elementRef\n * @param {?} _platform\n * @param {?} formControl\n */\nconstructor(\nprivate _elementRef: ElementRef,\nprivate _platform: Platform,\n      formControl: NgControl) {\n\n    if (formControl && formControl.valueChanges) {\n      formControl.valueChanges.subscribe(() => this.resizeToFitContent());\n    }\n  }\n/**\n * Sets the minimum height of the textarea as determined by minRows.\n * @return {?}\n */\n_setMinHeight(): void {\n    const /** @type {?} */ minHeight = this.minRows && this._cachedLineHeight ?\n        `${this.minRows * this._cachedLineHeight}px` : null;\n\n    if (minHeight)  {\n      this._setTextareaStyle('minHeight', minHeight);\n    }\n  }\n/**\n * Sets the maximum height of the textarea as determined by maxRows.\n * @return {?}\n */\n_setMaxHeight(): void {\n    const /** @type {?} */ maxHeight = this.maxRows && this._cachedLineHeight ?\n        `${this.maxRows * this._cachedLineHeight}px` : null;\n\n    if (maxHeight) {\n      this._setTextareaStyle('maxHeight', maxHeight);\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._cacheTextareaLineHeight();\n      this.resizeToFitContent();\n    }\n  }\n/**\n * Sets a style property on the textarea element.\n * @param {?} property\n * @param {?} value\n * @return {?}\n */\nprivate _setTextareaStyle(property: string, value: string): void {\n    const /** @type {?} */ textarea = /** @type {?} */(( this._elementRef.nativeElement as HTMLTextAreaElement));\n    textarea.style[property] = value;\n  }\n/**\n * Cache the height of a single-row textarea.\n * \n * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n * maxRows. For the initial version, we will assume that the height of a single line in the\n * textarea does not ever change.\n * @return {?}\n */\nprivate _cacheTextareaLineHeight(): void {\n    let /** @type {?} */ textarea = /** @type {?} */(( this._elementRef.nativeElement as HTMLTextAreaElement));\n\n    // Use a clone element because we have to override some styles.\n    let /** @type {?} */ textareaClone = /** @type {?} */(( textarea.cloneNode(false) as HTMLTextAreaElement));\n    textareaClone.rows = 1;\n\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n    textareaClone.style.position = 'absolute';\n    textareaClone.style.visibility = 'hidden';\n    textareaClone.style.border = 'none';\n    textareaClone.style.padding = '0';\n    textareaClone.style.height = '';\n    textareaClone.style.minHeight = '';\n    textareaClone.style.maxHeight = '';\n\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    textareaClone.style.overflow = 'hidden'; /** @type {?} */((\n\n    textarea.parentNode)).appendChild(textareaClone);\n    this._cachedLineHeight = textareaClone.clientHeight; /** @type {?} */((\n    textarea.parentNode)).removeChild(textareaClone);\n\n    // Min and max heights have to be re-calculated if the cached line height changes\n    this._setMinHeight();\n    this._setMaxHeight();\n  }\n/**\n * Resize the textarea to fit its content.\n * @return {?}\n */\nresizeToFitContent() {\n    const /** @type {?} */ textarea = /** @type {?} */(( this._elementRef.nativeElement as HTMLTextAreaElement));\n\n    if (textarea.value === this._previousValue) {\n      return;\n    }\n\n    // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    textarea.style.height = 'auto';\n    textarea.style.overflow = 'hidden';\n\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n    textarea.style.height = `${textarea.scrollHeight}px`;\n    textarea.style.overflow = '';\n\n    this._previousValue = textarea.value;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `textarea[md-autosize], textarea[mdTextareaAutosize],\n             textarea[mat-autosize], textarea[matTextareaAutosize]`,\n  exportAs: 'mdTextareaAutosize',\n  host: {\n    '(input)': 'resizeToFitContent()',\n    // Textarea elements that have the directive applied should have a single row by default.\n    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n    'rows': '1',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Platform, },\n{type: NgControl, decorators: [{ type: Optional }, { type: Self }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'minRows': [{ type: Input, args: ['mdAutosizeMinRows', ] },],\n'maxRows': [{ type: Input, args: ['mdAutosizeMaxRows', ] },],\n'_matAutosizeMinRows': [{ type: Input, args: ['matAutosizeMinRows', ] },],\n'_matAutosizeMaxRows': [{ type: Input, args: ['matAutosizeMaxRows', ] },],\n};\n}\n\nfunction MdTextareaAutosize_tsickle_Closure_declarations() {\n/** @type {?} */\nMdTextareaAutosize.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdTextareaAutosize.ctorParameters;\n/** @type {?} */\nMdTextareaAutosize.propDecorators;\n/**\n * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n * @type {?}\n */\nMdTextareaAutosize.prototype._previousValue;\n/** @type {?} */\nMdTextareaAutosize.prototype._minRows;\n/** @type {?} */\nMdTextareaAutosize.prototype._maxRows;\n/**\n * Cached height of a textarea with a single row.\n * @type {?}\n */\nMdTextareaAutosize.prototype._cachedLineHeight;\n/** @type {?} */\nMdTextareaAutosize.prototype._elementRef;\n/** @type {?} */\nMdTextareaAutosize.prototype._platform;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {Platform, getSupportedInputTypes} from '@angular/cdk/platform';\nimport {getMdInputUnsupportedTypeError} from './input-errors';\nimport {\n  defaultErrorStateMatcher,\n  ErrorOptions,\n  ErrorStateMatcher,\n  MD_ERROR_GLOBAL_OPTIONS\n} from '../core/error/error-options';\nimport {Subject} from 'rxjs/Subject';\nimport {MdFormFieldControl} from '../form-field/index';\n\n// Invalid input type. Using one of these will throw an MdInputUnsupportedTypeError.\nconst /** @type {?} */ MD_INPUT_INVALID_TYPES = [\n  'button',\n  'checkbox',\n  'color',\n  'file',\n  'hidden',\n  'image',\n  'radio',\n  'range',\n  'reset',\n  'submit'\n];\n\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Directive that allows a native input to work inside a `MdFormField`.\n */\nexport class MdInput implements MdFormFieldControl<any>, OnChanges, OnDestroy, DoCheck {\n/**\n * Variables used as cache for getters and setters.\n */\nprivate _type = 'text';\nprivate _disabled = false;\nprivate _required = false;\nprivate _id: string;\nprivate _uid = `md-input-${nextUniqueId++}`;\nprivate _errorOptions: ErrorOptions;\nprivate _previousNativeValue = this.value;\n/**\n * Whether the input is focused.\n */\nfocused = false;\n/**\n * Whether the input is in an error state.\n */\nerrorState = false;\n/**\n * The aria-describedby attribute on the input for improved a11y.\n */\n_ariaDescribedby: string;\n/**\n * Stream that emits whenever the state of the input changes such that the wrapping `MdFormField`\n * needs to run change detection.\n */\nstateChanges = new Subject<void>();\n/**\n * Whether the element is disabled.\n * @return {?}\n */\nget disabled() { return this.ngControl ? this.ngControl.disabled : this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * Unique id of the element.\n * @return {?}\n */\nget id() { return this._id; }\n/**\n * @param {?} value\n * @return {?}\n */\nset id(value: string) { this._id = value || this._uid; }\n/**\n * Placeholder attribute of the element.\n */\nplaceholder: string = '';\n/**\n * Whether the element is required.\n * @return {?}\n */\nget required() { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: any) { this._required = coerceBooleanProperty(value); }\n/**\n * Input type of the element.\n * @return {?}\n */\nget type() { return this._type; }\n/**\n * @param {?} value\n * @return {?}\n */\nset type(value: string) {\n    this._type = value || 'text';\n    this._validateType();\n\n    // When using Angular inputs, developers are no longer able to set the properties on the native\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\n    // with the native property. Textarea elements don't support the type property or attribute.\n    if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n      this._renderer.setProperty(this._elementRef.nativeElement, 'type', this._type);\n    }\n  }\n/**\n * A function used to control when error messages are shown.\n */\nerrorStateMatcher: ErrorStateMatcher;\n/**\n * The input element's value.\n * @return {?}\n */\nget value() { return this._elementRef.nativeElement.value; }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: string) {\n    if (value !== this.value) {\n      this._elementRef.nativeElement.value = value;\n      this.stateChanges.next();\n    }\n  }\nprivate _neverEmptyInputTypes = [\n    'date',\n    'datetime',\n    'datetime-local',\n    'month',\n    'time',\n    'week'\n  ].filter(t => getSupportedInputTypes().has(t));\n/**\n * @param {?} _elementRef\n * @param {?} _renderer\n * @param {?} _platform\n * @param {?} ngControl\n * @param {?} _parentForm\n * @param {?} _parentFormGroup\n * @param {?} errorOptions\n */\nconstructor(private _elementRef: ElementRef,\nprivate _renderer: Renderer2,\nprivate _platform: Platform,\npublic ngControl: NgControl,\nprivate _parentForm: NgForm,\nprivate _parentFormGroup: FormGroupDirective,\n                errorOptions: ErrorOptions) {\n\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n    this._errorOptions = errorOptions ? errorOptions : {};\n    this.errorStateMatcher = this._errorOptions.errorStateMatcher || defaultErrorStateMatcher;\n\n    // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n    // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n    // exists on iOS, we only bother to install the listener on iOS.\n    if (_platform.IOS) {\n      _renderer.listen(_elementRef.nativeElement, 'keyup', (event: Event) => {\n        let el = event.target as HTMLInputElement;\n        if (!el.value && !el.selectionStart && !el.selectionEnd) {\n          // Note: Just setting `0, 0` doesn't fix the issue. Setting `1, 1` fixes it for the first\n          // time that you type text and then hold delete. Toggling to `1, 1` and then back to\n          // `0, 0` seems to completely fix it.\n          el.setSelectionRange(1, 1);\n          el.setSelectionRange(0, 0);\n        }\n      });\n    }\n  }\n/**\n * @return {?}\n */\nngOnChanges() {\n    this.stateChanges.next();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.stateChanges.complete();\n  }\n/**\n * @return {?}\n */\nngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this._updateErrorState();\n    } else {\n      // When the input isn't used together with `@angular/forms`, we need to check manually for\n      // changes to the native `value` property in order to update the floating label.\n      this._dirtyCheckNativeValue();\n    }\n  }\n/**\n * Callback for the cases where the focused state of the input changes.\n * @param {?} isFocused\n * @return {?}\n */\n_focusChanged(isFocused: boolean) {\n    if (isFocused !== this.focused) {\n      this.focused = isFocused;\n      this.stateChanges.next();\n    }\n  }\n/**\n * @return {?}\n */\n_onInput() {\n    // This is a noop function and is used to let Angular know whenever the value changes.\n    // Angular will run a new change detection each time the `input` event has been dispatched.\n    // It's necessary that Angular recognizes the value change, because when floatingLabel\n    // is set to false and Angular forms aren't used, the placeholder won't recognize the\n    // value changes and will not disappear.\n    // Listening to the input event wouldn't be necessary when the input is using the\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n  }\n/**\n * Re-evaluates the error state. This is only relevant with \\@angular/forms.\n * @return {?}\n */\nprivate _updateErrorState() {\n    const /** @type {?} */ oldState = this.errorState;\n    const /** @type {?} */ ngControl = this.ngControl;\n    const /** @type {?} */ parent = this._parentFormGroup || this._parentForm;\n    const /** @type {?} */ newState = ngControl && this.errorStateMatcher( /** @type {?} */((ngControl.control as FormControl)), parent);\n\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this.stateChanges.next();\n    }\n  }\n/**\n * Does some manual dirty checking on the native input `value` property.\n * @return {?}\n */\nprivate _dirtyCheckNativeValue() {\n    const /** @type {?} */ newValue = this.value;\n\n    if (this._previousNativeValue !== newValue) {\n      this._previousNativeValue = newValue;\n      this.stateChanges.next();\n    }\n  }\n/**\n * Make sure the input is a supported type.\n * @return {?}\n */\nprivate _validateType() {\n    if (MD_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n      throw getMdInputUnsupportedTypeError(this._type);\n    }\n  }\n/**\n * Checks whether the input type is one of the types that are never empty.\n * @return {?}\n */\nprivate _isNeverEmpty() {\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n  }\n/**\n * Checks whether the input is invalid based on the native validation.\n * @return {?}\n */\nprivate _isBadInput() {\n    // The `validity` property won't be present on platform-server.\n    let /** @type {?} */ validity = ( /** @type {?} */((this._elementRef.nativeElement as HTMLInputElement))).validity;\n    return validity && validity.badInput;\n  }\n/**\n * Determines if the component host is a textarea. If not recognizable it returns false.\n * @return {?}\n */\nprivate _isTextarea() {\n    let /** @type {?} */ nativeElement = this._elementRef.nativeElement;\n\n    // In Universal, we don't have access to `nodeName`, but the same can be achieved with `name`.\n    // Note that this shouldn't be necessary once Angular switches to an API that resembles the\n    // DOM closer.\n    let /** @type {?} */ nodeName = this._platform.isBrowser ? nativeElement.nodeName : nativeElement.name;\n    return nodeName ? nodeName.toLowerCase() === 'textarea' : false;\n  }\n/**\n * @return {?}\n */\nget empty(): boolean {\n    return !this._isNeverEmpty() &&\n        (this.value == null || this.value === '') &&\n        // Check if the input contains bad input. If so, we know that it only appears empty because\n        // the value failed to parse. From the user's perspective it is not empty.\n        // TODO(mmalerba): Add e2e test for bad input case.\n        !this._isBadInput();\n  }\n/**\n * @param {?} ids\n * @return {?}\n */\nsetDescribedByIds(ids: string[]) { this._ariaDescribedby = ids.join(' '); }\n/**\n * @return {?}\n */\nfocus() { this._elementRef.nativeElement.focus(); }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `input[mdInput], textarea[mdInput], input[matInput], textarea[matInput]`,\n  host: {\n    'class': 'mat-input-element',\n    // Native input properties that are overwritten by Angular inputs need to be synced with\n    // the native input element. Otherwise property bindings for those don't work.\n    '[id]': 'id',\n    '[placeholder]': 'placeholder',\n    '[disabled]': 'disabled',\n    '[required]': 'required',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-invalid]': 'errorState',\n    '(blur)': '_focusChanged(false)',\n    '(focus)': '_focusChanged(true)',\n    '(input)': '_onInput()',\n  },\n  providers: [{provide: MdFormFieldControl, useExisting: MdInput}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: Platform, },\n{type: NgControl, decorators: [{ type: Optional }, { type: Self }, ]},\n{type: NgForm, decorators: [{ type: Optional }, ]},\n{type: FormGroupDirective, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_ERROR_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'id': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'required': [{ type: Input },],\n'type': [{ type: Input },],\n'errorStateMatcher': [{ type: Input },],\n};\n}\n\nfunction MdInput_tsickle_Closure_declarations() {\n/** @type {?} */\nMdInput.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdInput.ctorParameters;\n/** @type {?} */\nMdInput.propDecorators;\n/**\n * Variables used as cache for getters and setters.\n * @type {?}\n */\nMdInput.prototype._type;\n/** @type {?} */\nMdInput.prototype._disabled;\n/** @type {?} */\nMdInput.prototype._required;\n/** @type {?} */\nMdInput.prototype._id;\n/** @type {?} */\nMdInput.prototype._uid;\n/** @type {?} */\nMdInput.prototype._errorOptions;\n/** @type {?} */\nMdInput.prototype._previousNativeValue;\n/**\n * Whether the input is focused.\n * @type {?}\n */\nMdInput.prototype.focused;\n/**\n * Whether the input is in an error state.\n * @type {?}\n */\nMdInput.prototype.errorState;\n/**\n * The aria-describedby attribute on the input for improved a11y.\n * @type {?}\n */\nMdInput.prototype._ariaDescribedby;\n/**\n * Stream that emits whenever the state of the input changes such that the wrapping `MdFormField`\n * needs to run change detection.\n * @type {?}\n */\nMdInput.prototype.stateChanges;\n/**\n * Placeholder attribute of the element.\n * @type {?}\n */\nMdInput.prototype.placeholder;\n/**\n * A function used to control when error messages are shown.\n * @type {?}\n */\nMdInput.prototype.errorStateMatcher;\n/** @type {?} */\nMdInput.prototype._neverEmptyInputTypes;\n/** @type {?} */\nMdInput.prototype._elementRef;\n/** @type {?} */\nMdInput.prototype._renderer;\n/** @type {?} */\nMdInput.prototype._platform;\n/** @type {?} */\nMdInput.prototype.ngControl;\n/** @type {?} */\nMdInput.prototype._parentForm;\n/** @type {?} */\nMdInput.prototype._parentFormGroup;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdError} from './error';\nimport {MdFormField} from './form-field';\nimport {MdHint} from './hint';\nimport {MdPlaceholder} from './placeholder';\nimport {MdPrefix} from './prefix';\nimport {MdSuffix} from './suffix';\nimport {CommonModule} from '@angular/common';\nimport {PlatformModule} from '../core/platform/index';\nexport class MdFormFieldModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [\n    MdError,\n    MdHint,\n    MdFormField,\n    MdPlaceholder,\n    MdPrefix,\n    MdSuffix,\n  ],\n  imports: [\n    CommonModule,\n    PlatformModule,\n  ],\n  exports: [\n    MdError,\n    MdHint,\n    MdFormField,\n    MdPlaceholder,\n    MdPrefix,\n    MdSuffix,\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdFormFieldModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdFormFieldModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdFormFieldModule.ctorParameters;\n}\n\n\n\nexport {MdError} from './error';\nexport {MdFormField} from './form-field';\nexport {MdFormFieldControl} from './form-field-control';\nexport {getMdFormFieldPlaceholderConflictError,getMdFormFieldDuplicatedHintError,getMdFormFieldMissingControlError} from './form-field-errors';\nexport {MdHint} from './hint';\nexport {MdPlaceholder} from './placeholder';\nexport {MdPrefix} from './prefix';\nexport {MdSuffix} from './suffix';\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Input,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {coerceBooleanProperty} from '../core';\nimport {\n  getMdFormFieldDuplicatedHintError,\n  getMdFormFieldMissingControlError,\n  getMdFormFieldPlaceholderConflictError,\n} from './form-field-errors';\nimport {\n  FloatPlaceholderType,\n  MD_PLACEHOLDER_GLOBAL_OPTIONS,\n  PlaceholderOptions\n} from '../core/placeholder/placeholder-options';\nimport {startWith, first} from '@angular/cdk/rxjs';\nimport {MdError} from './error';\nimport {MdFormFieldControl} from './form-field-control';\nimport {MdHint} from './hint';\nimport {MdPlaceholder} from './placeholder';\nimport {MdPrefix} from './prefix';\nimport {MdSuffix} from './suffix';\nimport {fromEvent} from 'rxjs/observable/fromEvent';\n\n\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nexport class MdFormField implements AfterViewInit, AfterContentInit, AfterContentChecked {\nprivate _placeholderOptions: PlaceholderOptions;\n/**\n * Color of the form field underline, based on the theme.\n */\ncolor: 'primary' | 'accent' | 'warn' = 'primary';\n/**\n * @deprecated Use `color` instead.\n * @return {?}\n */\nget dividerColor() { return this.color; }\n/**\n * @param {?} value\n * @return {?}\n */\nset dividerColor(value) { this.color = value; }\n/**\n * Whether the required marker should be hidden.\n * @return {?}\n */\nget hideRequiredMarker() { return this._hideRequiredMarker; }\n/**\n * @param {?} value\n * @return {?}\n */\nset hideRequiredMarker(value: any) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\nprivate _hideRequiredMarker: boolean;\n/**\n * Override for the logic that disables the placeholder animation in certain cases.\n */\nprivate _showAlwaysAnimate = false;\n/**\n * Whether the floating label should always float or not.\n * @return {?}\n */\nget _shouldAlwaysFloat() {\n    return this._floatPlaceholder === 'always' && !this._showAlwaysAnimate;\n  }\n/**\n * Whether the placeholder can float or not.\n * @return {?}\n */\nget _canPlaceholderFloat() { return this._floatPlaceholder !== 'never'; }\n/**\n * State of the md-hint and md-error animations.\n */\n_subscriptAnimationState: string = '';\n/**\n * Text for the form field hint.\n * @return {?}\n */\nget hintLabel() { return this._hintLabel; }\n/**\n * @param {?} value\n * @return {?}\n */\nset hintLabel(value: string) {\n    this._hintLabel = value;\n    this._processHints();\n  }\nprivate _hintLabel = '';\n\n  // Unique id for the hint label.\n  _hintLabelId: string = `md-hint-${nextUniqueId++}`;\n/**\n * Whether the placeholder should always float, never float or float as the user types.\n * @return {?}\n */\nget floatPlaceholder() { return this._floatPlaceholder; }\n/**\n * @param {?} value\n * @return {?}\n */\nset floatPlaceholder(value: FloatPlaceholderType) {\n    if (value !== this._floatPlaceholder) {\n      this._floatPlaceholder = value || this._placeholderOptions.float || 'auto';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\nprivate _floatPlaceholder: FloatPlaceholderType;\n/**\n * Reference to the form field's underline element.\n */\nunderlineRef: ElementRef;\n   _connectionContainerRef: ElementRef;\nprivate _placeholder: ElementRef;\n   _control: MdFormFieldControl<any>;\n   _placeholderChild: MdPlaceholder;\n   _errorChildren: QueryList<MdError>;\n   _hintChildren: QueryList<MdHint>;\n   _prefixChildren: QueryList<MdPrefix>;\n   _suffixChildren: QueryList<MdSuffix>;\n/**\n * @param {?} _elementRef\n * @param {?} _changeDetectorRef\n * @param {?} placeholderOptions\n */\nconstructor(\npublic _elementRef: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef,\n        placeholderOptions: PlaceholderOptions) {\n    this._placeholderOptions = placeholderOptions ? placeholderOptions : {};\n    this.floatPlaceholder = this._placeholderOptions.float || 'auto';\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._validateControlChild();\n\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    startWith.call(this._control.stateChanges, null).subscribe(() => {\n      this._validatePlaceholders();\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    let /** @type {?} */ ngControl = this._control.ngControl;\n    if (ngControl && ngControl.valueChanges) {\n      ngControl.valueChanges.subscribe(() => {\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Re-validate when the number of hints changes.\n    startWith.call(this._hintChildren.changes, null).subscribe(() => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Update the aria-described by when the number of errors changes.\n    startWith.call(this._errorChildren.changes, null).subscribe(() => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n/**\n * @return {?}\n */\nngAfterContentChecked() {\n    this._validateControlChild();\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    // Avoid animations on load.\n    this._subscriptAnimationState = 'enter';\n    this._changeDetectorRef.detectChanges();\n  }\n/**\n * Determines whether a class from the NgControl should be forwarded to the host element.\n * @param {?} prop\n * @return {?}\n */\n_shouldForward(prop: string): boolean {\n    let /** @type {?} */ ngControl = this._control ? this._control.ngControl : null;\n    return ngControl && ( /** @type {?} */((ngControl as any)))[prop];\n  }\n/**\n * Whether the form field has a placeholder.\n * @return {?}\n */\n_hasPlaceholder() {\n    return !!(this._control.placeholder || this._placeholderChild);\n  }\n/**\n * Determines whether to display hints or errors.\n * @return {?}\n */\n_getDisplayedMessages(): 'error' | 'hint' {\n    return (this._errorChildren && this._errorChildren.length > 0 &&\n        this._control.errorState) ? 'error' : 'hint';\n  }\n/**\n * Animates the placeholder up and locks it in position.\n * @return {?}\n */\n_animateAndLockPlaceholder(): void {\n    if (this._placeholder && this._canPlaceholderFloat) {\n      this._showAlwaysAnimate = true;\n      this._floatPlaceholder = 'always';\n\n      first.call(fromEvent(this._placeholder.nativeElement, 'transitionend')).subscribe(() => {\n        this._showAlwaysAnimate = false;\n      });\n\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n * or child element with the `md-placeholder` directive).\n * @return {?}\n */\nprivate _validatePlaceholders() {\n    if (this._control.placeholder && this._placeholderChild) {\n      throw getMdFormFieldPlaceholderConflictError();\n    }\n  }\n/**\n * Does any extra processing that is required when handling the hints.\n * @return {?}\n */\nprivate _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n/**\n * Ensure that there is a maximum of one of each `<md-hint>` alignment specified, with the\n * attribute being considered as `align=\"start\"`.\n * @return {?}\n */\nprivate _validateHints() {\n    if (this._hintChildren) {\n      let /** @type {?} */ startHint: MdHint;\n      let /** @type {?} */ endHint: MdHint;\n      this._hintChildren.forEach((hint: MdHint) => {\n        if (hint.align == 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMdFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align == 'end') {\n          if (endHint) {\n            throw getMdFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n/**\n * Sets the list of element IDs that describe the child control. This allows the control to update\n * its `aria-describedby` attribute accordingly.\n * @return {?}\n */\nprivate _syncDescribedByIds() {\n    if (this._control) {\n      let /** @type {?} */ ids: string[] = [];\n\n      if (this._getDisplayedMessages() === 'hint') {\n        let /** @type {?} */ startHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'start') : null;\n        let /** @type {?} */ endHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'end') : null;\n\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids = this._errorChildren.map(mdError => mdError.id);\n      }\n\n      this._control.setDescribedByIds(ids);\n    }\n  }\n/**\n * Throws an error if the form field's control is missing.\n * @return {?}\n */\nprotected _validateControlChild() {\n    if (!this._control) {\n      throw getMdFormFieldMissingControlError();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  // TODO(mmalerba): the input-container selectors and classes are deprecated and will be removed.\n  selector: 'md-input-container, mat-input-container, md-form-field, mat-form-field',\n  templateUrl: 'form-field.html',\n  // MdInput is a directive and can't have styles, so we need to include its styles here.\n  // The MdInput styles are fairly minimal so it shouldn't be a big deal for people who aren't using\n  // MdInput.\n  styleUrls: ['form-field.css', '../input/input.css'],\n  animations: [\n    // TODO(mmalerba): Use angular animations for placeholder animation as well.\n    trigger('transitionMessages', [\n      state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n      transition('void => enter', [\n        style({ opacity: 0, transform: 'translateY(-100%)' }),\n        animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n      ]),\n    ]),\n  ],\n  host: {\n    'class': 'mat-input-container mat-form-field',\n    '[class.mat-input-invalid]': '_control.errorState',\n    '[class.mat-form-field-invalid]': '_control.errorState',\n    '[class.mat-focused]': '_control.focused',\n    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n    '[class.ng-touched]': '_shouldForward(\"touched\")',\n    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n    '[class.ng-valid]': '_shouldForward(\"valid\")',\n    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n    '[class.ng-pending]': '_shouldForward(\"pending\")',\n    '(click)': '_control.focus()',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_PLACEHOLDER_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'dividerColor': [{ type: Input },],\n'hideRequiredMarker': [{ type: Input },],\n'hintLabel': [{ type: Input },],\n'floatPlaceholder': [{ type: Input },],\n'underlineRef': [{ type: ViewChild, args: ['underline', ] },],\n'_connectionContainerRef': [{ type: ViewChild, args: ['connectionContainer', ] },],\n'_placeholder': [{ type: ViewChild, args: ['placeholder', ] },],\n'_control': [{ type: ContentChild, args: [MdFormFieldControl, ] },],\n'_placeholderChild': [{ type: ContentChild, args: [MdPlaceholder, ] },],\n'_errorChildren': [{ type: ContentChildren, args: [MdError, ] },],\n'_hintChildren': [{ type: ContentChildren, args: [MdHint, ] },],\n'_prefixChildren': [{ type: ContentChildren, args: [MdPrefix, ] },],\n'_suffixChildren': [{ type: ContentChildren, args: [MdSuffix, ] },],\n};\n}\n\nfunction MdFormField_tsickle_Closure_declarations() {\n/** @type {?} */\nMdFormField.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdFormField.ctorParameters;\n/** @type {?} */\nMdFormField.propDecorators;\n/** @type {?} */\nMdFormField.prototype._placeholderOptions;\n/**\n * Color of the form field underline, based on the theme.\n * @type {?}\n */\nMdFormField.prototype.color;\n/** @type {?} */\nMdFormField.prototype._hideRequiredMarker;\n/**\n * Override for the logic that disables the placeholder animation in certain cases.\n * @type {?}\n */\nMdFormField.prototype._showAlwaysAnimate;\n/**\n * State of the md-hint and md-error animations.\n * @type {?}\n */\nMdFormField.prototype._subscriptAnimationState;\n/** @type {?} */\nMdFormField.prototype._hintLabel;\n/** @type {?} */\nMdFormField.prototype._hintLabelId;\n/** @type {?} */\nMdFormField.prototype._floatPlaceholder;\n/**\n * Reference to the form field's underline element.\n * @type {?}\n */\nMdFormField.prototype.underlineRef;\n/** @type {?} */\nMdFormField.prototype._connectionContainerRef;\n/** @type {?} */\nMdFormField.prototype._placeholder;\n/** @type {?} */\nMdFormField.prototype._control;\n/** @type {?} */\nMdFormField.prototype._placeholderChild;\n/** @type {?} */\nMdFormField.prototype._errorChildren;\n/** @type {?} */\nMdFormField.prototype._hintChildren;\n/** @type {?} */\nMdFormField.prototype._prefixChildren;\n/** @type {?} */\nMdFormField.prototype._suffixChildren;\n/** @type {?} */\nMdFormField.prototype._elementRef;\n/** @type {?} */\nMdFormField.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive} from '@angular/core';\n/**\n * Suffix to be placed at the end of the form field.\n */\nexport class MdSuffix {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdSuffix], [matSuffix]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSuffix_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSuffix.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSuffix.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive} from '@angular/core';\n/**\n * Prefix to be placed the the front of the form field.\n */\nexport class MdPrefix {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdPrefix], [matPrefix]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdPrefix_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPrefix.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPrefix.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive} from '@angular/core';\n/**\n * The floating placeholder for an `MdFormField`.\n */\nexport class MdPlaceholder {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-placeholder, mat-placeholder'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdPlaceholder_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPlaceholder.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPlaceholder.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Input} from '@angular/core';\n\n\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nexport class MdHint {\n/**\n * Whether to align the hint label at the start or end of the line.\n */\nalign: 'start' | 'end' = 'start';\n/**\n * Unique ID for the hint. Used for the aria-describedby on the form field control.\n */\nid: string = `mat-hint-${nextUniqueId++}`;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-hint, mat-hint',\n  host: {\n    'class': 'mat-hint',\n    '[class.mat-right]': 'align == \"end\"',\n    '[attr.id]': 'id',\n    // Remove align attribute to prevent it from interfering with layout.\n    '[attr.align]': 'null',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'align': [{ type: Input },],\n'id': [{ type: Input },],\n};\n}\n\nfunction MdHint_tsickle_Closure_declarations() {\n/** @type {?} */\nMdHint.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdHint.ctorParameters;\n/** @type {?} */\nMdHint.propDecorators;\n/**\n * Whether to align the hint label at the start or end of the line.\n * @type {?}\n */\nMdHint.prototype.align;\n/**\n * Unique ID for the hint. Used for the aria-describedby on the form field control.\n * @type {?}\n */\nMdHint.prototype.id;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Observable} from 'rxjs/Observable';\nimport {NgControl} from '@angular/forms';\n/**\n * An interface which allows a control to work inside of a `MdFormField`.\n * @abstract\n */\nexport abstract class MdFormFieldControl<T> {\n/**\n * The value of the control.\n */\nvalue: T;\n/**\n * Stream that emits whenever the state of the control changes such that the parent `MdFormField`\n * needs to run change detection.\n */\nreadonly stateChanges: Observable<void>;\n/**\n * The element ID for this control.\n */\nreadonly id: string;\n/**\n * The placeholder for this control.\n */\nreadonly placeholder: string;\n/**\n * Gets the NgControl for this control.\n */\nreadonly ngControl: NgControl | null;\n/**\n * Whether the control is focused.\n */\nreadonly focused: boolean;\n/**\n * Whether the control is empty.\n */\nreadonly empty: boolean;\n/**\n * Whether the control is required.\n */\nreadonly required: boolean;\n/**\n * Whether the control is disabled.\n */\nreadonly disabled: boolean;\n/**\n * Whether the control is in an error state.\n */\nreadonly errorState: boolean;\n/**\n * Sets the list of element IDs that currently describe this control.\n * @abstract\n * @param {?} ids\n * @return {?}\n */\nsetDescribedByIds(ids: string[]) {}\n/**\n * Focuses this control.\n * @abstract\n * @return {?}\n */\nfocus() {}\n}\n\nfunction MdFormFieldControl_tsickle_Closure_declarations() {\n/**\n * The value of the control.\n * @type {?}\n */\nMdFormFieldControl.prototype.value;\n/**\n * Stream that emits whenever the state of the control changes such that the parent `MdFormField`\n * needs to run change detection.\n * @type {?}\n */\nMdFormFieldControl.prototype.stateChanges;\n/**\n * The element ID for this control.\n * @type {?}\n */\nMdFormFieldControl.prototype.id;\n/**\n * The placeholder for this control.\n * @type {?}\n */\nMdFormFieldControl.prototype.placeholder;\n/**\n * Gets the NgControl for this control.\n * @type {?}\n */\nMdFormFieldControl.prototype.ngControl;\n/**\n * Whether the control is focused.\n * @type {?}\n */\nMdFormFieldControl.prototype.focused;\n/**\n * Whether the control is empty.\n * @type {?}\n */\nMdFormFieldControl.prototype.empty;\n/**\n * Whether the control is required.\n * @type {?}\n */\nMdFormFieldControl.prototype.required;\n/**\n * Whether the control is disabled.\n * @type {?}\n */\nMdFormFieldControl.prototype.disabled;\n/**\n * Whether the control is in an error state.\n * @type {?}\n */\nMdFormFieldControl.prototype.errorState;\n}\n\n","\n/**\n * \\@docs-private\n * @return {?}\n */\nexport function getMdFormFieldPlaceholderConflictError(): Error {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nexport function getMdFormFieldDuplicatedHintError(align: string): Error {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nexport function getMdFormFieldMissingControlError(): Error {\n  return Error('md-form-field must contain a MdFormFieldControl. ' +\n      'Did you forget to add mdInput to the native input or textarea element?');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Input} from '@angular/core';\n\n\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nexport class MdError {\n   id: string = `mat-error-${nextUniqueId++}`;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-error, mat-error',\n  host: {\n    'class': 'mat-error',\n    'role': 'alert',\n    '[attr.id]': 'id',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n};\n}\n\nfunction MdError_tsickle_Closure_declarations() {\n/** @type {?} */\nMdError.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdError.ctorParameters;\n/** @type {?} */\nMdError.propDecorators;\n/** @type {?} */\nMdError.prototype.id;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nexport function getMdInputUnsupportedTypeError(type: string): Error {\n  return Error(`Input type \"${type}\" isn't supported by mdInput.`);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdCommonModule} from '../core';\nimport {MdProgressBar} from './progress-bar';\nexport class MdProgressBarModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, MdCommonModule],\n  exports: [MdProgressBar, MdCommonModule],\n  declarations: [MdProgressBar],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdProgressBarModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdProgressBarModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdProgressBarModule.ctorParameters;\n}\n\n\n\nexport {MdProgressBar} from './progress-bar';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Component, ChangeDetectionStrategy, Input, ViewEncapsulation} from '@angular/core';\n/**\n * <md-progress-bar> component.\n */\nexport class MdProgressBar {\n/**\n * Color of the progress bar.\n */\ncolor: 'primary' | 'accent' | 'warn' = 'primary';\nprivate _value: number = 0;\n/**\n * Value of the progressbar. Defaults to zero. Mirrored to aria-valuenow.\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: number) { this._value = clamp(v || 0); }\nprivate _bufferValue: number = 0;\n/**\n * Buffer value of the progress bar. Defaults to zero.\n * @return {?}\n */\nget bufferValue() { return this._bufferValue; }\n/**\n * @param {?} v\n * @return {?}\n */\nset bufferValue(v: number) { this._bufferValue = clamp(v || 0); }\n/**\n * Mode of the progress bar.\n * \n * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n * 'determinate'.\n * Mirrored to mode attribute.\n */\nmode: 'determinate' | 'indeterminate' | 'buffer' | 'query' = 'determinate';\n/**\n * Gets the current transform value for the progress bar's primary indicator.\n * @return {?}\n */\n_primaryTransform() {\n    let /** @type {?} */ scale = this.value / 100;\n    return {transform: `scaleX(${scale})`};\n  }\n/**\n * Gets the current transform value for the progress bar's buffer indicator.  Only used if the\n * progress mode is set to buffer, otherwise returns an undefined, causing no transformation.\n * @return {?}\n */\n_bufferTransform() {\n    if (this.mode == 'buffer') {\n      let /** @type {?} */ scale = this.bufferValue / 100;\n      return {transform: `scaleX(${scale})`};\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-progress-bar, mat-progress-bar',\n  host: {\n    'role': 'progressbar',\n    'aria-valuemin': '0',\n    'aria-valuemax': '100',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.mode]': 'mode',\n    '[class.mat-primary]': 'color == \"primary\"',\n    '[class.mat-accent]': 'color == \"accent\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    'class': 'mat-progress-bar',\n  },\n  templateUrl: 'progress-bar.html',\n  styleUrls: ['progress-bar.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'color': [{ type: Input },],\n'value': [{ type: Input },],\n'bufferValue': [{ type: Input },],\n'mode': [{ type: Input },],\n};\n}\n\nfunction MdProgressBar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdProgressBar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdProgressBar.ctorParameters;\n/** @type {?} */\nMdProgressBar.propDecorators;\n/**\n * Color of the progress bar.\n * @type {?}\n */\nMdProgressBar.prototype.color;\n/** @type {?} */\nMdProgressBar.prototype._value;\n/** @type {?} */\nMdProgressBar.prototype._bufferValue;\n/**\n * Mode of the progress bar.\n * \n * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n * 'determinate'.\n * Mirrored to mode attribute.\n * @type {?}\n */\nMdProgressBar.prototype.mode;\n}\n\n/**\n * Clamps a value to be between two numbers, by default 0 and 100.\n * @param {?} v\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nfunction clamp(v: number, min = 0, max = 100) {\n  return Math.max(min, Math.min(max, v));\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdCommonModule} from '../core';\nimport {\n  MdProgressSpinner,\n  MdSpinner,\n  MdProgressSpinnerCssMatStyler,\n} from './progress-spinner';\nclass MdProgressSpinnerModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule],\n  exports: [\n    MdProgressSpinner,\n    MdSpinner,\n    MdCommonModule,\n    MdProgressSpinnerCssMatStyler\n  ],\n  declarations: [\n    MdProgressSpinner,\n    MdSpinner,\n    MdProgressSpinnerCssMatStyler\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdProgressSpinnerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdProgressSpinnerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdProgressSpinnerModule.ctorParameters;\n}\n\n\nexport {MdProgressSpinnerModule};\nexport {PROGRESS_SPINNER_STROKE_WIDTH,ProgressSpinnerMode,MdProgressSpinnerCssMatStyler,MdProgressSpinnerBase,_MdProgressSpinnerMixinBase,MdProgressSpinner,MdSpinner} from './progress-spinner';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  OnDestroy,\n  Input,\n  ElementRef,\n  NgZone,\n  Renderer2,\n  Directive,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\n/**\n * A single degree in radians.\n */\nconst DEGREE_IN_RADIANS = Math.PI / 180;\n/**\n * Duration of the indeterminate animation.\n */\nconst DURATION_INDETERMINATE = 667;\n/**\n * Duration of the indeterminate animation.\n */\nconst DURATION_DETERMINATE = 225;\n/**\n * Start animation value of the indeterminate animation\n */\nconst startIndeterminate = 3;\n/**\n * End animation value of the indeterminate animation\n */\nconst endIndeterminate = 80;\n/**\n * Maximum angle for the arc. The angle can't be exactly 360, because the arc becomes hidden.\n */\nconst MAX_ANGLE = 359.99 / 100;\n/**\n * Whether the user's browser supports requestAnimationFrame.\n */\nconst HAS_RAF = typeof requestAnimationFrame !== 'undefined';\n/**\n * Default stroke width as a percentage of the viewBox.\n */\nexport const PROGRESS_SPINNER_STROKE_WIDTH = 10;\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\ntype EasingFn = (currentTime: number, startValue: number,\n                 changeInValue: number, duration: number) => number;\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdProgressSpinnerCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-progress-spinner, mat-progress-spinner',\n  host: {'class': 'mat-progress-spinner'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdProgressSpinnerCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdProgressSpinnerCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdProgressSpinnerCssMatStyler.ctorParameters;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdProgressSpinnerBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdProgressSpinnerBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdProgressSpinnerBase.prototype._renderer;\n/** @type {?} */\nMdProgressSpinnerBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdProgressSpinnerMixinBase = mixinColor(MdProgressSpinnerBase, 'primary');\n/**\n * <md-progress-spinner> component.\n */\nexport class MdProgressSpinner extends _MdProgressSpinnerMixinBase\n    implements OnDestroy, CanColor {\n/**\n * The id of the last requested animation.\n */\nprivate _lastAnimationId: number = 0;\n/**\n * The id of the indeterminate interval.\n */\nprivate _interdeterminateInterval: number | null;\n/**\n * The SVG <path> node that is used to draw the circle.\n */\nprivate _path: ElementRef;\nprivate _mode: ProgressSpinnerMode = 'determinate';\nprivate _value: number;\n/**\n * Stroke width of the progress spinner. By default uses 10px as stroke width.\n */\nstrokeWidth: number = PROGRESS_SPINNER_STROKE_WIDTH;\n/**\n * Values for aria max and min are only defined as numbers when in a determinate mode.  We do this\n * because voiceover does not report the progress indicator as indeterminate if the aria min\n * and/or max value are number values.\n * @return {?}\n */\nget _ariaValueMin() {\n    return this.mode == 'determinate' ? 0 : null;\n  }\n/**\n * @return {?}\n */\nget _ariaValueMax() {\n    return this.mode == 'determinate' ? 100 : null;\n  }\n/**\n * \\@docs-private\n * @return {?}\n */\nget interdeterminateInterval() {\n    return this._interdeterminateInterval;\n  }\n/**\n * \\@docs-private\n * @param {?} interval\n * @return {?}\n */\nset interdeterminateInterval(interval: number | null) {\n    if (this._interdeterminateInterval) {\n      clearInterval(this._interdeterminateInterval);\n    }\n\n    this._interdeterminateInterval = interval;\n  }\n/**\n * Clean up any animations that were running.\n * @return {?}\n */\nngOnDestroy() {\n    this._cleanupIndeterminateAnimation();\n  }\n/**\n * Value of the progress circle. It is bound to the host as the attribute aria-valuenow.\n * @return {?}\n */\nget value() {\n    if (this.mode == 'determinate') {\n      return this._value;\n    }\n\n    return 0;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: number) {\n    if (v != null && this.mode == 'determinate') {\n      let /** @type {?} */ newValue = clamp(v);\n      this._animateCircle(this.value || 0, newValue);\n      this._value = newValue;\n    }\n  }\n/**\n * Mode of the progress circle\n * \n * Input must be one of the values from ProgressMode, defaults to 'determinate'.\n * mode is bound to the host as the attribute host.\n * @return {?}\n */\nget mode() { return this._mode; }\n/**\n * @param {?} mode\n * @return {?}\n */\nset mode(mode: ProgressSpinnerMode) {\n    if (mode !== this._mode) {\n      if (mode === 'indeterminate') {\n        this._startIndeterminateAnimation();\n      } else {\n        this._cleanupIndeterminateAnimation();\n        this._animateCircle(0, this._value);\n      }\n      this._mode = mode;\n    }\n  }\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _ngZone\n */\nconstructor(renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _ngZone: NgZone) {\n    super(renderer, elementRef);\n  }\n/**\n * Animates the circle from one percentage value to another.\n * \n * @param {?} animateFrom The percentage of the circle filled starting the animation.\n * @param {?} animateTo The percentage of the circle filled ending the animation.\n * @param {?=} ease The easing function to manage the pace of change in the animation.\n * @param {?=} duration The length of time to show the animation, in milliseconds.\n * @param {?=} rotation The starting angle of the circle fill, with 0° represented at the top center\n *    of the circle.\n * @return {?}\n */\nprivate _animateCircle(animateFrom: number, animateTo: number, ease: EasingFn = linearEase,\n                        duration = DURATION_DETERMINATE, rotation = 0) {\n\n    let /** @type {?} */ id = ++this._lastAnimationId;\n    let /** @type {?} */ startTime = Date.now();\n    let /** @type {?} */ changeInValue = animateTo - animateFrom;\n\n    // No need to animate it if the values are the same\n    if (animateTo === animateFrom) {\n      this._renderArc(animateTo, rotation);\n    } else {\n      let /** @type {?} */ animation = () => {\n        // If there is no requestAnimationFrame, skip ahead to the end of the animation.\n        let /** @type {?} */ elapsedTime = HAS_RAF ?\n            Math.max(0, Math.min(Date.now() - startTime, duration)) :\n            duration;\n\n        this._renderArc(\n          ease(elapsedTime, animateFrom, changeInValue, duration),\n          rotation\n        );\n\n        // Prevent overlapping animations by checking if a new animation has been called for and\n        // if the animation has lasted longer than the animation duration.\n        if (id === this._lastAnimationId && elapsedTime < duration) {\n          requestAnimationFrame(animation);\n        }\n      };\n\n      // Run the animation outside of Angular's zone, in order to avoid\n      // hitting ZoneJS and change detection on each frame.\n      this._ngZone.runOutsideAngular(animation);\n    }\n  }\n/**\n * Starts the indeterminate animation interval, if it is not already running.\n * @return {?}\n */\nprivate _startIndeterminateAnimation() {\n    let /** @type {?} */ rotationStartPoint = 0;\n    let /** @type {?} */ start = startIndeterminate;\n    let /** @type {?} */ end = endIndeterminate;\n    let /** @type {?} */ duration = DURATION_INDETERMINATE;\n    let /** @type {?} */ animate = () => {\n      this._animateCircle(start, end, materialEase, duration, rotationStartPoint);\n      // Prevent rotation from reaching Number.MAX_SAFE_INTEGER.\n      rotationStartPoint = (rotationStartPoint + end) % 100;\n      let /** @type {?} */ temp = start;\n      start = -end;\n      end = -temp;\n    };\n\n    if (!this.interdeterminateInterval) {\n      this._ngZone.runOutsideAngular(() => {\n        this.interdeterminateInterval = setInterval(animate, duration + 50, 0, false);\n        animate();\n      });\n    }\n  }\n/**\n * Removes interval, ending the animation.\n * @return {?}\n */\nprivate _cleanupIndeterminateAnimation() {\n    this.interdeterminateInterval = null;\n  }\n/**\n * Renders the arc onto the SVG element. Proxies `getArc` while setting the proper\n * DOM attribute on the `<path>`.\n * @param {?} currentValue\n * @param {?=} rotation\n * @return {?}\n */\nprivate _renderArc(currentValue: number, rotation = 0) {\n    if (this._path) {\n      const /** @type {?} */ svgArc = getSvgArc(currentValue, rotation, this.strokeWidth);\n      this._renderer.setAttribute(this._path.nativeElement, 'd', svgArc);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-progress-spinner, mat-progress-spinner',\n  host: {\n    'role': 'progressbar',\n    'class': 'mat-progress-spinner',\n    '[attr.aria-valuemin]': '_ariaValueMin',\n    '[attr.aria-valuemax]': '_ariaValueMax',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.mode]': 'mode',\n  },\n  inputs: ['color'],\n  templateUrl: 'progress-spinner.html',\n  styleUrls: ['progress-spinner.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: NgZone, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_path': [{ type: ViewChild, args: ['path', ] },],\n'strokeWidth': [{ type: Input },],\n'value': [{ type: Input },],\n'mode': [{ type: Input },],\n};\n}\n\nfunction MdProgressSpinner_tsickle_Closure_declarations() {\n/** @type {?} */\nMdProgressSpinner.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdProgressSpinner.ctorParameters;\n/** @type {?} */\nMdProgressSpinner.propDecorators;\n/**\n * The id of the last requested animation.\n * @type {?}\n */\nMdProgressSpinner.prototype._lastAnimationId;\n/**\n * The id of the indeterminate interval.\n * @type {?}\n */\nMdProgressSpinner.prototype._interdeterminateInterval;\n/**\n * The SVG <path> node that is used to draw the circle.\n * @type {?}\n */\nMdProgressSpinner.prototype._path;\n/** @type {?} */\nMdProgressSpinner.prototype._mode;\n/** @type {?} */\nMdProgressSpinner.prototype._value;\n/**\n * Stroke width of the progress spinner. By default uses 10px as stroke width.\n * @type {?}\n */\nMdProgressSpinner.prototype.strokeWidth;\n/** @type {?} */\nMdProgressSpinner.prototype._ngZone;\n}\n\n/**\n * <md-spinner> component.\n * \n * This is a component definition to be used as a convenience reference to create an\n * indeterminate <md-progress-spinner> instance.\n */\nexport class MdSpinner extends MdProgressSpinner {\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} renderer\n */\nconstructor(elementRef: ElementRef, ngZone: NgZone, renderer: Renderer2) {\n    super(renderer, elementRef, ngZone);\n    this.mode = 'indeterminate';\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-spinner, mat-spinner',\n  host: {\n    'role': 'progressbar',\n    'mode': 'indeterminate',\n    'class': 'mat-spinner mat-progress-spinner',\n  },\n  inputs: ['color'],\n  templateUrl: 'progress-spinner.html',\n  styleUrls: ['progress-spinner.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: Renderer2, },\n];\n}\n\nfunction MdSpinner_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSpinner.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSpinner.ctorParameters;\n}\n\n/**\n * Clamps a value to be between 0 and 100.\n * @param {?} v\n * @return {?}\n */\nfunction clamp(v: number) {\n  return Math.max(0, Math.min(100, v));\n}\n/**\n * Converts Polar coordinates to Cartesian.\n * @param {?} radius\n * @param {?} pathRadius\n * @param {?} angleInDegrees\n * @return {?}\n */\nfunction polarToCartesian(radius: number, pathRadius: number, angleInDegrees: number) {\n  let /** @type {?} */ angleInRadians = (angleInDegrees - 90) * DEGREE_IN_RADIANS;\n\n  return (radius + (pathRadius * Math.cos(angleInRadians))) +\n    ',' + (radius + (pathRadius * Math.sin(angleInRadians)));\n}\n/**\n * Easing function for linear animation.\n * @param {?} currentTime\n * @param {?} startValue\n * @param {?} changeInValue\n * @param {?} duration\n * @return {?}\n */\nfunction linearEase(currentTime: number, startValue: number,\n                    changeInValue: number, duration: number) {\n  return changeInValue * currentTime / duration + startValue;\n}\n/**\n * Easing function to match material design indeterminate animation.\n * @param {?} currentTime\n * @param {?} startValue\n * @param {?} changeInValue\n * @param {?} duration\n * @return {?}\n */\nfunction materialEase(currentTime: number, startValue: number,\n                      changeInValue: number, duration: number) {\n  let /** @type {?} */ time = currentTime / duration;\n  let /** @type {?} */ timeCubed = Math.pow(time, 3);\n  let /** @type {?} */ timeQuad = Math.pow(time, 4);\n  let /** @type {?} */ timeQuint = Math.pow(time, 5);\n  return startValue + changeInValue * ((6 * timeQuint) + (-15 * timeQuad) + (10 * timeCubed));\n}\n/**\n * Determines the path value to define the arc.  Converting percentage values to to polar\n * coordinates on the circle, and then to cartesian coordinates in the viewport.\n * \n * @param {?} currentValue The current percentage value of the progress circle, the percentage of the\n *    circle to fill.\n * @param {?} rotation The starting point of the circle with 0 being the 0 degree point.\n * @param {?} strokeWidth Stroke width of the progress spinner arc.\n * @return {?} A string for an SVG path representing a circle filled from the starting point to the\n *    percentage value provided.\n */\nfunction getSvgArc(currentValue: number, rotation: number, strokeWidth: number): string {\n  let /** @type {?} */ startPoint = rotation || 0;\n  let /** @type {?} */ radius = 50;\n  let /** @type {?} */ pathRadius = radius - strokeWidth;\n\n  let /** @type {?} */ startAngle = startPoint * MAX_ANGLE;\n  let /** @type {?} */ endAngle = currentValue * MAX_ANGLE;\n  let /** @type {?} */ start = polarToCartesian(radius, pathRadius, startAngle);\n  let /** @type {?} */ end = polarToCartesian(radius, pathRadius, endAngle + startAngle);\n  let /** @type {?} */ arcSweep = endAngle < 0 ? 0 : 1;\n  let /** @type {?} */ largeArcFlag: number;\n\n  if (endAngle < 0) {\n    largeArcFlag = endAngle >= -180 ? 0 : 1;\n  } else {\n    largeArcFlag = endAngle <= 180 ? 0 : 1;\n  }\n\n  return `M${start}A${pathRadius},${pathRadius} 0 ${largeArcFlag},${arcSweep} ${end}`;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdCommonModule} from '../core';\nimport {MdIcon} from './icon';\nimport {ICON_REGISTRY_PROVIDER} from './icon-registry';\nexport class MdIconModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule],\n  exports: [MdIcon, MdCommonModule],\n  declarations: [MdIcon],\n  providers: [ICON_REGISTRY_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdIconModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdIconModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdIconModule.ctorParameters;\n}\n\n\n\nexport {MdIconBase,_MdIconMixinBase,MdIcon} from './icon';\nexport {getMdIconNameNotFoundError,getMdIconNoHttpProviderError,getMdIconFailedToSanitizeError,MdIconRegistry,ICON_REGISTRY_PROVIDER_FACTORY,ICON_REGISTRY_PROVIDER} from './icon-registry';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Renderer2,\n  SimpleChanges,\n  ViewEncapsulation,\n  Attribute,\n} from '@angular/core';\nimport {MdIconRegistry} from './icon-registry';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nimport {first} from '../core/rxjs/index';\n/**\n * \\@docs-private\n */\nexport class MdIconBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdIconBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdIconBase.prototype._renderer;\n/** @type {?} */\nMdIconBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdIconMixinBase = mixinColor(MdIconBase);\n/**\n * Component to display an icon. It can be used in the following ways:\n * \n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MdIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     <md-icon svgIcon=\"left-arrow\"></md-icon>\n *     <md-icon svgIcon=\"animals:cat\"></md-icon>\n * \n * - Use a font ligature as an icon by putting the ligature text in the content of the <md-icon>\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MdIconRegistry.registerFontClassAlias.\n *   Examples:\n *     <md-icon>home</md-icon>\n *     <md-icon fontSet=\"myfont\">sun</md-icon>\n * \n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     <md-icon fontSet=\"fa\" fontIcon=\"alarm\"></md-icon>\n */\nexport class MdIcon extends _MdIconMixinBase implements OnChanges, OnInit, CanColor {\n/**\n * Name of the icon in the SVG icon set.\n */\nsvgIcon: string;\n/**\n * Font set that the icon is a part of.\n */\nfontSet: string;\n/**\n * Name of an icon within a font set.\n */\nfontIcon: string;\nprivate _previousFontSetClass: string;\nprivate _previousFontIconClass: string;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _mdIconRegistry\n * @param {?} ariaHidden\n */\nconstructor(\n      renderer: Renderer2,\n      elementRef: ElementRef,\nprivate _mdIconRegistry: MdIconRegistry,\n       ariaHidden: string) {\n    super(renderer, elementRef);\n\n    // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n    // the right thing to do for the majority of icon use-cases.\n    if (!ariaHidden) {\n      renderer.setAttribute(elementRef.nativeElement, 'aria-hidden', 'true');\n    }\n  }\n/**\n * Splits an svgIcon binding value into its icon set and icon name components.\n * Returns a 2-element array of [(icon set), (icon name)].\n * The separator for the two fields is ':'. If there is no separator, an empty\n * string is returned for the icon set and the entire value is returned for\n * the icon name. If the argument is falsy, returns an array of two empty strings.\n * Throws an error if the name contains two or more ':' separators.\n * Examples:\n *   'social:cake' -> ['social', 'cake']\n *   'penguin' -> ['', 'penguin']\n *   null -> ['', '']\n *   'a:b:c' -> (throws Error)\n * @param {?} iconName\n * @return {?}\n */\nprivate _splitIconName(iconName: string): [string, string] {\n    if (!iconName) {\n      return ['', ''];\n    }\n    const /** @type {?} */ parts = iconName.split(':');\n    switch (parts.length) {\n      case 1: return ['', parts[0]]; // Use default namespace.\n      case 2: return /** @type {?} */(( <[string, string]>parts));\n      default: throw Error(`Invalid icon name: \"${iconName}\"`);\n    }\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n    if (changes.svgIcon) {\n      if (this.svgIcon) {\n        const [namespace, iconName] = this._splitIconName(this.svgIcon);\n\n        first.call(this._mdIconRegistry.getNamedSvgIcon(iconName, namespace)).subscribe(\n            svg => this._setSvgElement(svg),\n            (err: Error) => console.log(`Error retrieving icon: ${err.message}`));\n      } else {\n        this._clearSvgElement();\n      }\n    }\n\n    if (this._usingFontIcon()) {\n      this._updateFontIconClasses();\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n    // e.g. <md-icon>arrow</md-icon>. In this case we need to add a CSS class for the default font.\n    if (this._usingFontIcon()) {\n      this._updateFontIconClasses();\n    }\n  }\n/**\n * @return {?}\n */\nprivate _usingFontIcon(): boolean {\n    return !this.svgIcon;\n  }\n/**\n * @param {?} svg\n * @return {?}\n */\nprivate _setSvgElement(svg: SVGElement) {\n    this._clearSvgElement();\n    this._renderer.appendChild(this._elementRef.nativeElement, svg);\n  }\n/**\n * @return {?}\n */\nprivate _clearSvgElement() {\n    const /** @type {?} */ layoutElement = this._elementRef.nativeElement;\n    const /** @type {?} */ childCount = layoutElement.childNodes.length;\n\n    // Remove existing child nodes and add the new SVG element. Note that we can't\n    // use innerHTML, because IE will throw if the element has a data binding.\n    for (let /** @type {?} */ i = 0; i < childCount; i++) {\n      this._renderer.removeChild(layoutElement, layoutElement.childNodes[i]);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _updateFontIconClasses() {\n    if (!this._usingFontIcon()) {\n      return;\n    }\n\n    const /** @type {?} */ elem = this._elementRef.nativeElement;\n    const /** @type {?} */ fontSetClass = this.fontSet ?\n        this._mdIconRegistry.classNameForFontAlias(this.fontSet) :\n        this._mdIconRegistry.getDefaultFontSetClass();\n\n    if (fontSetClass != this._previousFontSetClass) {\n      if (this._previousFontSetClass) {\n        this._renderer.removeClass(elem, this._previousFontSetClass);\n      }\n      if (fontSetClass) {\n        this._renderer.addClass(elem, fontSetClass);\n      }\n      this._previousFontSetClass = fontSetClass;\n    }\n\n    if (this.fontIcon != this._previousFontIconClass) {\n      if (this._previousFontIconClass) {\n        this._renderer.removeClass(elem, this._previousFontIconClass);\n      }\n      if (this.fontIcon) {\n        this._renderer.addClass(elem, this.fontIcon);\n      }\n      this._previousFontIconClass = this.fontIcon;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  template: '<ng-content></ng-content>',\n  selector: 'md-icon, mat-icon',\n  styleUrls: ['icon.css'],\n  inputs: ['color'],\n  host: {\n    'role': 'img',\n    'class': 'mat-icon',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: MdIconRegistry, },\n{type: undefined, decorators: [{ type: Attribute, args: ['aria-hidden', ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'svgIcon': [{ type: Input },],\n'fontSet': [{ type: Input },],\n'fontIcon': [{ type: Input },],\n};\n}\n\nfunction MdIcon_tsickle_Closure_declarations() {\n/** @type {?} */\nMdIcon.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdIcon.ctorParameters;\n/** @type {?} */\nMdIcon.propDecorators;\n/**\n * Name of the icon in the SVG icon set.\n * @type {?}\n */\nMdIcon.prototype.svgIcon;\n/**\n * Font set that the icon is a part of.\n * @type {?}\n */\nMdIcon.prototype.fontSet;\n/**\n * Name of an icon within a font set.\n * @type {?}\n */\nMdIcon.prototype.fontIcon;\n/** @type {?} */\nMdIcon.prototype._previousFontSetClass;\n/** @type {?} */\nMdIcon.prototype._previousFontIconClass;\n/** @type {?} */\nMdIcon.prototype._mdIconRegistry;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, SecurityContext, Optional, SkipSelf} from '@angular/core';\nimport {SafeResourceUrl, DomSanitizer} from '@angular/platform-browser';\nimport {Http} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport {_throw as observableThrow} from 'rxjs/observable/throw';\nimport {of as observableOf} from 'rxjs/observable/of';\nimport {forkJoin} from 'rxjs/observable/forkJoin';\nimport {RxChain, map, doOperator, catchOperator, finallyOperator, share} from '../core/rxjs/index';\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nexport function getMdIconNameNotFoundError(iconName: string): Error {\n  return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<md-icon>` without including \\@angular/http.\n * \\@docs-private\n * @return {?}\n */\nexport function getMdIconNoHttpProviderError(): Error {\n  return Error('Could not find Http provider for use with Angular Material icons. ' +\n               'Please include the HttpModule from @angular/http in your app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nexport function getMdIconFailedToSanitizeError(url: SafeResourceUrl): Error {\n  return Error(`The URL provided to MdIconRegistry was not trusted as a resource URL ` +\n               `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n  svgElement: SVGElement | null = null;\n/**\n * @param {?} url\n */\nconstructor(public url: SafeResourceUrl) { }\n}\n\nfunction SvgIconConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nSvgIconConfig.prototype.svgElement;\n/** @type {?} */\nSvgIconConfig.prototype.url;\n}\n\n/**\n * Service to register and display icons used by the <md-icon> component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nexport class MdIconRegistry {\n/**\n * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n */\nprivate _svgIconConfigs = new Map<string, SvgIconConfig>();\n/**\n * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n * Multiple icon sets can be registered under the same namespace.\n */\nprivate _iconSetConfigs = new Map<string, SvgIconConfig[]>();\n/**\n * Cache for icons loaded by direct URLs.\n */\nprivate _cachedIconsByUrl = new Map<string, SVGElement>();\n/**\n * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n */\nprivate _inProgressUrlFetches = new Map<string, Observable<string>>();\n/**\n * Map from font identifiers to their CSS class names. Used for icon fonts.\n */\nprivate _fontCssClassesByAlias = new Map<string, string>();\n/**\n * The CSS class to apply when an <md-icon> component has no icon name, url, or font specified.\n * The default 'material-icons' value assumes that the material icon font has been loaded as\n * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n */\nprivate _defaultFontSetClass = 'material-icons';\n/**\n * @param {?} _http\n * @param {?} _sanitizer\n */\nconstructor(\nprivate _http: Http,\nprivate _sanitizer: DomSanitizer) {}\n/**\n * Registers an icon by URL in the default namespace.\n * @param {?} iconName Name under which the icon should be registered.\n * @param {?} url\n * @return {?}\n */\naddSvgIcon(iconName: string, url: SafeResourceUrl): this {\n    return this.addSvgIconInNamespace('', iconName, url);\n  }\n/**\n * Registers an icon by URL in the specified namespace.\n * @param {?} namespace Namespace in which the icon should be registered.\n * @param {?} iconName Name under which the icon should be registered.\n * @param {?} url\n * @return {?}\n */\naddSvgIconInNamespace(namespace: string, iconName: string, url: SafeResourceUrl): this {\n    const /** @type {?} */ key = iconKey(namespace, iconName);\n    this._svgIconConfigs.set(key, new SvgIconConfig(url));\n    return this;\n  }\n/**\n * Registers an icon set by URL in the default namespace.\n * @param {?} url\n * @return {?}\n */\naddSvgIconSet(url: SafeResourceUrl): this {\n    return this.addSvgIconSetInNamespace('', url);\n  }\n/**\n * Registers an icon set by URL in the specified namespace.\n * @param {?} namespace Namespace in which to register the icon set.\n * @param {?} url\n * @return {?}\n */\naddSvgIconSetInNamespace(namespace: string, url: SafeResourceUrl): this {\n    const /** @type {?} */ config = new SvgIconConfig(url);\n    const /** @type {?} */ configNamespace = this._iconSetConfigs.get(namespace);\n\n    if (configNamespace) {\n      configNamespace.push(config);\n    } else {\n      this._iconSetConfigs.set(namespace, [config]);\n    }\n    return this;\n  }\n/**\n * Defines an alias for a CSS class name to be used for icon fonts. Creating an mdIcon\n * component with the alias as the fontSet input will cause the class name to be applied\n * to the <md-icon> element.\n * \n * @param {?} alias Alias for the font.\n * @param {?=} className Class name override to be used instead of the alias.\n * @return {?}\n */\nregisterFontClassAlias(alias: string, className = alias): this {\n    this._fontCssClassesByAlias.set(alias, className);\n    return this;\n  }\n/**\n * Returns the CSS class name associated with the alias by a previous call to\n * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n * @param {?} alias\n * @return {?}\n */\nclassNameForFontAlias(alias: string): string {\n    return this._fontCssClassesByAlias.get(alias) || alias;\n  }\n/**\n * Sets the CSS class name to be used for icon fonts when an <md-icon> component does not\n * have a fontSet input value, and is not loading an icon by name or URL.\n * \n * @param {?} className\n * @return {?}\n */\nsetDefaultFontSetClass(className: string): this {\n    this._defaultFontSetClass = className;\n    return this;\n  }\n/**\n * Returns the CSS class name to be used for icon fonts when an <md-icon> component does not\n * have a fontSet input value, and is not loading an icon by name or URL.\n * @return {?}\n */\ngetDefaultFontSetClass(): string {\n    return this._defaultFontSetClass;\n  }\n/**\n * Returns an Observable that produces the icon (as an <svg> DOM element) from the given URL.\n * The response from the URL may be cached so this will not always cause an HTTP request, but\n * the produced element will always be a new copy of the originally fetched icon. (That is,\n * it will not contain any modifications made to elements previously returned).\n * \n * @param {?} safeUrl URL from which to fetch the SVG icon.\n * @return {?}\n */\ngetSvgIconFromUrl(safeUrl: SafeResourceUrl): Observable<SVGElement> {\n    let /** @type {?} */ url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n\n    if (!url) {\n      throw getMdIconFailedToSanitizeError(safeUrl);\n    }\n\n    let /** @type {?} */ cachedIcon = this._cachedIconsByUrl.get(url);\n\n    if (cachedIcon) {\n      return observableOf(cloneSvg(cachedIcon));\n    }\n\n    return RxChain.from(this._loadSvgIconFromConfig(new SvgIconConfig(url)))\n      .call(doOperator, svg => this._cachedIconsByUrl.set( /** @type {?} */((url)), svg))\n      .call(map, svg => cloneSvg(svg))\n      .result();\n  }\n/**\n * Returns an Observable that produces the icon (as an <svg> DOM element) with the given name\n * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n * if not, the Observable will throw an error.\n * \n * @param {?} name Name of the icon to be retrieved.\n * @param {?=} namespace Namespace in which to look for the icon.\n * @return {?}\n */\ngetNamedSvgIcon(name: string, namespace = ''): Observable<SVGElement> {\n    // Return (copy of) cached icon if possible.\n    const /** @type {?} */ key = iconKey(namespace, name);\n    const /** @type {?} */ config = this._svgIconConfigs.get(key);\n\n    if (config) {\n      return this._getSvgFromConfig(config);\n    }\n\n    // See if we have any icon sets registered for the namespace.\n    const /** @type {?} */ iconSetConfigs = this._iconSetConfigs.get(namespace);\n\n    if (iconSetConfigs) {\n      return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n    }\n\n    return observableThrow(getMdIconNameNotFoundError(key));\n  }\n/**\n * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n * @param {?} config\n * @return {?}\n */\nprivate _getSvgFromConfig(config: SvgIconConfig): Observable<SVGElement> {\n    if (config.svgElement) {\n      // We already have the SVG element for this icon, return a copy.\n      return observableOf(cloneSvg(config.svgElement));\n    } else {\n      // Fetch the icon from the config's URL, cache it, and return a copy.\n      return RxChain.from(this._loadSvgIconFromConfig(config))\n          .call(doOperator, svg => config.svgElement = svg)\n          .call(map, svg => cloneSvg(svg))\n          .result();\n    }\n  }\n/**\n * Attempts to find an icon with the specified name in any of the SVG icon sets.\n * First searches the available cached icons for a nested element with a matching name, and\n * if found copies the element to a new <svg> element. If not found, fetches all icon sets\n * that have not been cached, and searches again after all fetches are completed.\n * The returned Observable produces the SVG element if possible, and throws\n * an error if no icon with the specified name can be found.\n * @param {?} name\n * @param {?} iconSetConfigs\n * @return {?}\n */\nprivate _getSvgFromIconSetConfigs(name: string, iconSetConfigs: SvgIconConfig[]):\n      Observable<SVGElement> {\n    // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n    // requested name.\n    const /** @type {?} */ namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n\n    if (namedIcon) {\n      // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n      // time anyway, there's probably not much advantage compared to just always extracting\n      // it from the icon set.\n      return observableOf(namedIcon);\n    }\n\n    // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n    // fetched, fetch them now and look for iconName in the results.\n    const /** @type {?} */ iconSetFetchRequests: Observable<SVGElement>[] = iconSetConfigs\n      .filter(iconSetConfig => !iconSetConfig.svgElement)\n      .map(iconSetConfig => {\n        return RxChain.from(this._loadSvgIconSetFromConfig(iconSetConfig))\n          .call(catchOperator, (err: any): Observable<SVGElement | null> => {\n            let /** @type {?} */ url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n\n            // Swallow errors fetching individual URLs so the combined Observable won't\n            // necessarily fail.\n            console.log(`Loading icon set URL: ${url} failed: ${err}`);\n            return observableOf(null);\n          })\n          .call(doOperator, svg => {\n            // Cache the SVG element.\n            if (svg) {\n              iconSetConfig.svgElement = svg;\n            }\n          })\n          .result();\n      });\n\n    // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n    // cached SVG element (unless the request failed), and we can check again for the icon.\n    return map.call(forkJoin.call(Observable, iconSetFetchRequests), () => {\n      const /** @type {?} */ foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n\n      if (!foundIcon) {\n        throw getMdIconNameNotFoundError(name);\n      }\n\n      return foundIcon;\n    });\n  }\n/**\n * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n * tag matches the specified name. If found, copies the nested element to a new SVG element and\n * returns it. Returns null if no matching element is found.\n * @param {?} iconName\n * @param {?} iconSetConfigs\n * @return {?}\n */\nprivate _extractIconWithNameFromAnySet(iconName: string, iconSetConfigs: SvgIconConfig[]):\n      SVGElement | null {\n    // Iterate backwards, so icon sets added later have precedence.\n    for (let /** @type {?} */ i = iconSetConfigs.length - 1; i >= 0; i--) {\n      const /** @type {?} */ config = iconSetConfigs[i];\n      if (config.svgElement) {\n        const /** @type {?} */ foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName);\n        if (foundIcon) {\n          return foundIcon;\n        }\n      }\n    }\n    return null;\n  }\n/**\n * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n * from it.\n * @param {?} config\n * @return {?}\n */\nprivate _loadSvgIconFromConfig(config: SvgIconConfig): Observable<SVGElement> {\n    return map.call(this._fetchUrl(config.url),\n        svgText => this._createSvgElementForSingleIcon(svgText));\n  }\n/**\n * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n * from it.\n * @param {?} config\n * @return {?}\n */\nprivate _loadSvgIconSetFromConfig(config: SvgIconConfig): Observable<SVGElement> {\n      // TODO: Document that icons should only be loaded from trusted sources.\n    return map.call(this._fetchUrl(config.url),\n        svgText => this._svgElementFromString(svgText));\n  }\n/**\n * Creates a DOM element from the given SVG string, and adds default attributes.\n * @param {?} responseText\n * @return {?}\n */\nprivate _createSvgElementForSingleIcon(responseText: string): SVGElement {\n    const /** @type {?} */ svg = this._svgElementFromString(responseText);\n    this._setSvgAttributes(svg);\n    return svg;\n  }\n/**\n * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n * tag matches the specified name. If found, copies the nested element to a new SVG element and\n * returns it. Returns null if no matching element is found.\n * @param {?} iconSet\n * @param {?} iconName\n * @return {?}\n */\nprivate _extractSvgIconFromSet(iconSet: SVGElement, iconName: string): SVGElement | null {\n    const /** @type {?} */ iconNode = iconSet.querySelector('#' + iconName);\n\n    if (!iconNode) {\n      return null;\n    }\n\n    // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n    // the content of a new <svg> node.\n    if (iconNode.tagName.toLowerCase() === 'svg') {\n      return this._setSvgAttributes( /** @type {?} */((iconNode.cloneNode(true) as SVGElement)));\n    }\n\n    // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n    // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n    // tag is problematic on Firefox, because it needs to include the current page path.\n    if (iconNode.nodeName.toLowerCase() === 'symbol') {\n      return this._setSvgAttributes(this._toSvgElement(iconNode));\n    }\n\n    // createElement('SVG') doesn't work as expected; the DOM ends up with\n    // the correct nodes, but the SVG content doesn't render. Instead we\n    // have to create an empty SVG node using innerHTML and append its content.\n    // Elements created using DOMParser.parseFromString have the same problem.\n    // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n    const /** @type {?} */ svg = this._svgElementFromString('<svg></svg>');\n    // Clone the node so we don't remove it from the parent icon set element.\n    svg.appendChild(iconNode.cloneNode(true));\n\n    return this._setSvgAttributes(svg);\n  }\n/**\n * Creates a DOM element from the given SVG string.\n * @param {?} str\n * @return {?}\n */\nprivate _svgElementFromString(str: string): SVGElement {\n    // TODO: Is there a better way than innerHTML? Renderer doesn't appear to have a method for\n    // creating an element from an HTML string.\n    const /** @type {?} */ div = document.createElement('DIV');\n    div.innerHTML = str;\n    const /** @type {?} */ svg = /** @type {?} */(( div.querySelector('svg') as SVGElement));\n    if (!svg) {\n      throw Error('<svg> tag not found');\n    }\n    return svg;\n  }\n/**\n * Converts an element into an SVG node by cloning all of its children.\n * @param {?} element\n * @return {?}\n */\nprivate _toSvgElement(element: Element): SVGElement {\n    let /** @type {?} */ svg = this._svgElementFromString('<svg></svg>');\n\n    for (let /** @type {?} */ i = 0; i < element.childNodes.length; i++) {\n      if (element.childNodes[i].nodeType === Node.ELEMENT_NODE) {\n        svg.appendChild(element.childNodes[i].cloneNode(true));\n      }\n    }\n\n    return svg;\n  }\n/**\n * Sets the default attributes for an SVG element to be used as an icon.\n * @param {?} svg\n * @return {?}\n */\nprivate _setSvgAttributes(svg: SVGElement): SVGElement {\n    if (!svg.getAttribute('xmlns')) {\n      svg.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n    }\n    svg.setAttribute('fit', '');\n    svg.setAttribute('height', '100%');\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n    svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n    return svg;\n  }\n/**\n * Returns an Observable which produces the string contents of the given URL. Results may be\n * cached, so future calls with the same URL may not cause another HTTP request.\n * @param {?} safeUrl\n * @return {?}\n */\nprivate _fetchUrl(safeUrl: SafeResourceUrl): Observable<string> {\n    if (!this._http) {\n      throw getMdIconNoHttpProviderError();\n    }\n\n    const /** @type {?} */ url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n\n    if (!url) {\n      throw getMdIconFailedToSanitizeError(safeUrl);\n    }\n\n    // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n    // already a request in progress for that URL. It's necessary to call share() on the\n    // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n    const /** @type {?} */ inProgressFetch = this._inProgressUrlFetches.get(url);\n\n    if (inProgressFetch) {\n      return inProgressFetch;\n    }\n\n    // TODO(jelbourn): for some reason, the `finally` operator \"loses\" the generic type on the\n    // Observable. Figure out why and fix it.\n    const /** @type {?} */ req = RxChain.from(this._http.get(url))\n      .call(map, response => response.text())\n      .call(finallyOperator, () => this._inProgressUrlFetches.delete(url))\n      .call(share)\n      .result();\n\n    this._inProgressUrlFetches.set(url, req);\n    return req;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, decorators: [{ type: Optional }, ]},\n{type: DomSanitizer, },\n];\n}\n\nfunction MdIconRegistry_tsickle_Closure_declarations() {\n/** @type {?} */\nMdIconRegistry.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdIconRegistry.ctorParameters;\n/**\n * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n * @type {?}\n */\nMdIconRegistry.prototype._svgIconConfigs;\n/**\n * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n * Multiple icon sets can be registered under the same namespace.\n * @type {?}\n */\nMdIconRegistry.prototype._iconSetConfigs;\n/**\n * Cache for icons loaded by direct URLs.\n * @type {?}\n */\nMdIconRegistry.prototype._cachedIconsByUrl;\n/**\n * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n * @type {?}\n */\nMdIconRegistry.prototype._inProgressUrlFetches;\n/**\n * Map from font identifiers to their CSS class names. Used for icon fonts.\n * @type {?}\n */\nMdIconRegistry.prototype._fontCssClassesByAlias;\n/**\n * The CSS class to apply when an <md-icon> component has no icon name, url, or font specified.\n * The default 'material-icons' value assumes that the material icon font has been loaded as\n * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n * @type {?}\n */\nMdIconRegistry.prototype._defaultFontSetClass;\n/** @type {?} */\nMdIconRegistry.prototype._http;\n/** @type {?} */\nMdIconRegistry.prototype._sanitizer;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} http\n * @param {?} sanitizer\n * @return {?}\n */\nexport function ICON_REGISTRY_PROVIDER_FACTORY(\n    parentRegistry: MdIconRegistry, http: Http, sanitizer: DomSanitizer) {\n  return parentRegistry || new MdIconRegistry(http, sanitizer);\n}\n/**\n * \\@docs-private\n */\nexport const ICON_REGISTRY_PROVIDER = {\n  // If there is already an MdIconRegistry available, use that. Otherwise, provide a new one.\n  provide: MdIconRegistry,\n  deps: [[new Optional(), new SkipSelf(), MdIconRegistry], [new Optional(), Http], DomSanitizer],\n  useFactory: ICON_REGISTRY_PROVIDER_FACTORY\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg: SVGElement): SVGElement {\n  return /** @type {?} */(( svg.cloneNode(true) as SVGElement));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace: string, name: string) {\n  return namespace + ':' + name;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdChipList} from './chip-list';\nimport {MdBasicChip, MdChip, MdChipRemove} from './chip';\nimport {MdChipInput} from './chip-input';\n\nexport {MdChipList} from './chip-list';\nexport {MdChipEvent,MdChipBase,_MdChipMixinBase,MdBasicChip,MdChip,MdChipRemove} from './chip';\nexport {MdChipInputEvent,MdChipInput} from './chip-input';\nexport class MdChipsModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [],\n  exports: [MdChipList, MdChip, MdChipInput, MdChipRemove, MdChipRemove, MdBasicChip],\n  declarations: [MdChipList, MdChip, MdChipInput, MdChipRemove,  MdChipRemove, MdBasicChip]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdChipsModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdChipsModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdChipsModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Directive, Output, EventEmitter, ElementRef, Input} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ENTER} from '../core/keyboard/keycodes';\nimport {MdChipList} from './chip-list';\n\nexport interface MdChipInputEvent {\n  input: HTMLInputElement;\n  value: string;\n}\nexport class MdChipInput {\n\n  _chipList: MdChipList;\n/**\n * Register input for chip list\n * @param {?} value\n * @return {?}\n */\nset chipList(value: MdChipList) {\n    if (value) {\n      this._chipList = value;\n      this._chipList.registerInput(this._inputElement);\n    }\n  }\n/**\n * Whether or not the chipEnd event will be emitted when the input is blurred.\n * @return {?}\n */\nget addOnBlur() { return this._addOnBlur; }\n/**\n * @param {?} value\n * @return {?}\n */\nset addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n  _addOnBlur: boolean = false;\n\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[ENTER]`.\n   */\n  // TODO(tinayuangao): Support Set here\n   separatorKeyCodes: number[] = [ENTER];\n/**\n * Emitted when a chip is to be added.\n */\nchipEnd = new EventEmitter<MdChipInputEvent>();\n/**\n * @param {?} value\n * @return {?}\n */\nset matChipList(value: MdChipList) { this.chipList = value; }\n/**\n * @return {?}\n */\nget matAddOnBlur() { return this._addOnBlur; }\n/**\n * @param {?} value\n * @return {?}\n */\nset matAddOnBlur(value) { this.addOnBlur = value; }\n/**\n * @return {?}\n */\nget matSeparatorKeyCodes() { return this.separatorKeyCodes; }\n/**\n * @param {?} v\n * @return {?}\n */\nset matSeparatorKeyCodes(v: number[]) { this.separatorKeyCodes = v; }\n/**\n * The native input element to which this directive is attached.\n */\nprotected _inputElement: HTMLInputElement;\n/**\n * @param {?} _elementRef\n */\nconstructor(protected _elementRef: ElementRef) {\n    this._inputElement = this._elementRef.nativeElement as HTMLInputElement;\n  }\n/**\n * Utility method to make host definition/tests more clear.\n * @param {?=} event\n * @return {?}\n */\n_keydown(event?: KeyboardEvent) {\n    this._emitChipEnd(event);\n  }\n/**\n * Checks to see if the blur should emit the (chipEnd) event.\n * @return {?}\n */\n_blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n  }\n/**\n * Checks to see if the (chipEnd) event needs to be emitted.\n * @param {?=} event\n * @return {?}\n */\n_emitChipEnd(event?: KeyboardEvent) {\n    if (!this._inputElement.value && !!event) {\n      this._chipList._keydown(event);\n    }\n    if (!event || this.separatorKeyCodes.indexOf(event.keyCode) > -1) {\n      this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'input[mdChipInputFor], input[matChipInputFor]',\n  host: {\n    'class': 'mat-chip-input',\n    '(keydown)': '_keydown($event)',\n    '(blur)': '_blur()'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'chipList': [{ type: Input, args: ['mdChipInputFor', ] },],\n'addOnBlur': [{ type: Input, args: ['mdChipInputAddOnBlur', ] },],\n'separatorKeyCodes': [{ type: Input, args: ['mdChipInputSeparatorKeyCodes', ] },],\n'chipEnd': [{ type: Output, args: ['mdChipInputTokenEnd', ] },],\n'matChipList': [{ type: Input, args: ['matChipInputFor', ] },],\n'matAddOnBlur': [{ type: Input, args: ['matChipInputAddOnBlur', ] },],\n'matSeparatorKeyCodes': [{ type: Input, args: ['matChipInputSeparatorKeyCodes', ] },],\n};\n}\n\nfunction MdChipInput_tsickle_Closure_declarations() {\n/** @type {?} */\nMdChipInput.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdChipInput.ctorParameters;\n/** @type {?} */\nMdChipInput.propDecorators;\n/** @type {?} */\nMdChipInput.prototype._chipList;\n/** @type {?} */\nMdChipInput.prototype._addOnBlur;\n/** @type {?} */\nMdChipInput.prototype.separatorKeyCodes;\n/**\n * Emitted when a chip is to be added.\n * @type {?}\n */\nMdChipInput.prototype.chipEnd;\n/**\n * The native input element to which this directive is attached.\n * @type {?}\n */\nMdChipInput.prototype._inputElement;\n/** @type {?} */\nMdChipInput.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Input,\n  QueryList,\n  ViewEncapsulation,\n  OnDestroy,\n  Optional,\n  ElementRef,\n  Renderer2,\n} from '@angular/core';\n\nimport {MdChip} from './chip';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {BACKSPACE, DELETE, LEFT_ARROW, RIGHT_ARROW, UP_ARROW} from '../core/keyboard/keycodes';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Subscription} from 'rxjs/Subscription';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n/**\n * A material design chips component (named ChipList for it's similarity to the List component).\n * \n * Example:\n * \n *     <md-chip-list>\n *       <md-chip>Chip 1<md-chip>\n *       <md-chip>Chip 2<md-chip>\n *     </md-chip-list>\n */\nexport class MdChipList implements AfterContentInit, OnDestroy {\n/**\n * When a chip is destroyed, we track the index so we can focus the appropriate next chip.\n */\nprotected _lastDestroyedIndex: number|null = null;\n/**\n * Track which chips we're listening to for focus/destruction.\n */\nprotected _chipSet: WeakMap<MdChip, boolean> = new WeakMap();\n/**\n * Subscription to tabbing out from the chip list.\n */\nprivate _tabOutSubscription: Subscription;\n/**\n * Whether or not the chip is selectable.\n */\nprotected _selectable: boolean = true;\n\n  protected _inputElement: HTMLInputElement;\n/**\n * Tab index for the chip list.\n */\n_tabIndex = 0;\n/**\n * User defined tab index.\n * When it is not null, use user defined tab index. Otherwise use _tabIndex\n */\n_userTabIndex: number | null = null;\n/**\n * The FocusKeyManager which handles focus.\n */\n_keyManager: FocusKeyManager<MdChip>;\n/**\n * The chip components contained within this chip list.\n */\nchips: QueryList<MdChip>;\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _dir\n */\nconstructor(protected _renderer: Renderer2, protected _elementRef: ElementRef,\nprivate _dir: Directionality) {\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this._keyManager = new FocusKeyManager<MdChip>(this.chips).withWrap();\n\n    // Prevents the chip list from capturing focus and redirecting\n    // it back to the first chip when the user tabs out.\n    this._tabOutSubscription = this._keyManager.tabOut.subscribe(() => {\n      this._tabIndex = -1;\n      setTimeout(() => this._tabIndex = this._userTabIndex || 0);\n    });\n\n    // Go ahead and subscribe all of the initial chips\n    this._subscribeChips(this.chips);\n\n    // Make sure we set our tab index at the start\n    this._updateTabIndex();\n\n    // When the list changes, re-subscribe\n    this.chips.changes.subscribe((chips: QueryList<MdChip>) => {\n      this._subscribeChips(chips);\n\n      // If we have 0 chips, attempt to focus an input (if available)\n      if (chips.length === 0) {\n        this._focusInput();\n      }\n\n      // Check to see if we need to update our tab index\n      this._updateTabIndex();\n\n      // Check to see if we have a destroyed chip and need to refocus\n      this._updateFocusForDestroyedChips();\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._tabOutSubscription) {\n      this._tabOutSubscription.unsubscribe();\n    }\n  }\n/**\n * Whether or not this chip is selectable. When a chip is not selectable,\n * it's selected state is always ignored.\n * @return {?}\n */\nget selectable(): boolean {\n    return this._selectable;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset tabIndex(value: number) {\n    this._userTabIndex = value;\n    this._tabIndex = value;\n  }\n/**\n * Associates an HTML input element with this chip list.\n * @param {?} inputElement\n * @return {?}\n */\nregisterInput(inputElement: HTMLInputElement) {\n    this._inputElement = inputElement;\n  }\n/**\n * Focuses the the first non-disabled chip in this chip list, or the associated input when there\n * are no eligible chips.\n * @return {?}\n */\nfocus() {\n    // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n    if (this.chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._focusInput();\n    }\n  }\n/**\n * Attempt to focus an input if we have one.\n * @return {?}\n */\n_focusInput() {\n    if (this._inputElement) {\n      this._inputElement.focus();\n    }\n  }\n/**\n * Pass events to the keyboard manager. Available here for tests.\n * @param {?} event\n * @return {?}\n */\n_keydown(event: KeyboardEvent) {\n    let /** @type {?} */ code = event.keyCode;\n    let /** @type {?} */ target = /** @type {?} */(( event.target as HTMLElement));\n    let /** @type {?} */ isInputEmpty = this._isInputEmpty(target);\n    let /** @type {?} */ isRtl = this._dir && this._dir.value == 'rtl';\n\n    let /** @type {?} */ isPrevKey = (code === (isRtl ? RIGHT_ARROW : LEFT_ARROW));\n    let /** @type {?} */ isNextKey = (code === (isRtl ? LEFT_ARROW : RIGHT_ARROW));\n    let /** @type {?} */ isBackKey = (code === BACKSPACE || code == DELETE || code == UP_ARROW || isPrevKey);\n    // If they are on an empty input and hit backspace/delete/left arrow, focus the last chip\n    if (isInputEmpty && isBackKey) {\n      this._keyManager.setLastItemActive();\n      event.preventDefault();\n      return;\n    }\n\n    // If they are on a chip, check for space/left/right, otherwise pass to our key manager (like\n    // up/down keys)\n    if (target && target.classList.contains('mat-chip')) {\n      if (isPrevKey) {\n        this._keyManager.setPreviousItemActive();\n        event.preventDefault();\n      } else if (isNextKey) {\n        this._keyManager.setNextItemActive();\n        event.preventDefault();\n      } else {\n        this._keyManager.onKeydown(event);\n      }\n    }\n  }\n/**\n * Iterate through the list of chips and add them to our list of\n * subscribed chips.\n * \n * @param {?} chips The list of chips to be subscribed.\n * @return {?}\n */\nprotected _subscribeChips(chips: QueryList<MdChip>): void {\n    chips.forEach(chip => this._addChip(chip));\n  }\n/**\n * Check the tab index as you should not be allowed to focus an empty list.\n * @return {?}\n */\nprotected _updateTabIndex(): void {\n    // If we have 0 chips, we should not allow keyboard focus\n    this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n  }\n/**\n * Add a specific chip to our subscribed list. If the chip has\n * already been subscribed, this ensures it is only subscribed\n * once.\n * \n * @param {?} chip The chip to be subscribed (or checked for existing\n * subscription).\n * @return {?}\n */\nprotected _addChip(chip: MdChip) {\n    // If we've already been subscribed to a parent, do nothing\n    if (this._chipSet.has(chip)) {\n      return;\n    }\n\n    // Watch for focus events outside of the keyboard navigation\n    chip._onFocus.subscribe(() => {\n      let /** @type {?} */ chipIndex: number = this.chips.toArray().indexOf(chip);\n\n      if (this._isValidIndex(chipIndex)) {\n        this._keyManager.updateActiveItemIndex(chipIndex);\n      }\n    });\n\n    // On destroy, remove the item from our list, and setup our destroyed focus check\n    chip.destroy.subscribe(() => {\n      let /** @type {?} */ chipIndex: number = this.chips.toArray().indexOf(chip);\n      if (this._isValidIndex(chipIndex)) {\n        if (chip._hasFocus) {\n          // Check whether the chip is the last item\n          if (chipIndex < this.chips.length - 1) {\n            this._keyManager.setActiveItem(chipIndex);\n          } else if (chipIndex - 1 >= 0) {\n            this._keyManager.setActiveItem(chipIndex - 1);\n          }\n        }\n        if (this._keyManager.activeItemIndex === chipIndex) {\n          this._lastDestroyedIndex = chipIndex;\n        }\n\n      }\n\n      this._chipSet.delete(chip);\n      chip.destroy.unsubscribe();\n    });\n\n    this._chipSet.set(chip, true);\n  }\n/**\n * Checks to see if a focus chip was recently destroyed so that we can refocus the next closest\n * one.\n * @return {?}\n */\nprotected _updateFocusForDestroyedChips() {\n    let /** @type {?} */ chipsArray = this.chips;\n\n    if (this._lastDestroyedIndex != null && chipsArray.length > 0) {\n      // Check whether the destroyed chip was the last item\n      const /** @type {?} */ newFocusIndex = Math.min(this._lastDestroyedIndex, chipsArray.length - 1);\n      this._keyManager.setActiveItem(newFocusIndex);\n      let /** @type {?} */ focusChip = this._keyManager.activeItem;\n\n      // Focus the chip\n      if (focusChip) {\n        focusChip.focus();\n      }\n    }\n\n    // Reset our destroyed index\n    this._lastDestroyedIndex = null;\n  }\n/**\n * Utility to ensure all indexes are valid.\n * \n * @param {?} index The index to be checked.\n * @return {?} True if the index is valid for our list of chips.\n */\nprivate _isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.chips.length;\n  }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate _isInputEmpty(element: HTMLElement): boolean {\n    if (element && element.nodeName.toLowerCase() === 'input') {\n      let /** @type {?} */ input = /** @type {?} */(( element as HTMLInputElement));\n\n      return !input.value;\n    }\n\n    return false;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-chip-list, mat-chip-list',\n  template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n  exportAs: 'mdChipList',\n  host: {\n    '[attr.tabindex]': '_tabIndex',\n    'role': 'listbox',\n    'class': 'mat-chip-list',\n\n    '(focus)': 'focus()',\n    '(keydown)': '_keydown($event)'\n  },\n  queries: {\n    chips: new ContentChildren(MdChip)\n  },\n  styleUrls: ['chips.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'selectable': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n};\n}\n\nfunction MdChipList_tsickle_Closure_declarations() {\n/** @type {?} */\nMdChipList.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdChipList.ctorParameters;\n/** @type {?} */\nMdChipList.propDecorators;\n/**\n * When a chip is destroyed, we track the index so we can focus the appropriate next chip.\n * @type {?}\n */\nMdChipList.prototype._lastDestroyedIndex;\n/**\n * Track which chips we're listening to for focus/destruction.\n * @type {?}\n */\nMdChipList.prototype._chipSet;\n/**\n * Subscription to tabbing out from the chip list.\n * @type {?}\n */\nMdChipList.prototype._tabOutSubscription;\n/**\n * Whether or not the chip is selectable.\n * @type {?}\n */\nMdChipList.prototype._selectable;\n/** @type {?} */\nMdChipList.prototype._inputElement;\n/**\n * Tab index for the chip list.\n * @type {?}\n */\nMdChipList.prototype._tabIndex;\n/**\n * User defined tab index.\n * When it is not null, use user defined tab index. Otherwise use _tabIndex\n * @type {?}\n */\nMdChipList.prototype._userTabIndex;\n/**\n * The FocusKeyManager which handles focus.\n * @type {?}\n */\nMdChipList.prototype._keyManager;\n/**\n * The chip components contained within this chip list.\n * @type {?}\n */\nMdChipList.prototype.chips;\n/** @type {?} */\nMdChipList.prototype._renderer;\n/** @type {?} */\nMdChipList.prototype._elementRef;\n/** @type {?} */\nMdChipList.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  Renderer2,\n  forwardRef,\n} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {FocusableOption} from '../core/a11y/focus-key-manager';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\nimport {SPACE, BACKSPACE, DELETE} from '../core/keyboard/keycodes';\n\nexport interface MdChipEvent {\n  chip: MdChip;\n}\n/**\n * \\@docs-private\n */\nexport class MdChipBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdChipBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdChipBase.prototype._renderer;\n/** @type {?} */\nMdChipBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdChipMixinBase = mixinColor(mixinDisabled(MdChipBase), 'primary');\n/**\n * Dummy directive to add CSS class to basic chips.\n * \\@docs-private\n */\nexport class MdBasicChip { static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `md-basic-chip, [md-basic-chip], mat-basic-chip, [mat-basic-chip]`,\n  host: {'class': 'mat-basic-chip'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdBasicChip_tsickle_Closure_declarations() {\n/** @type {?} */\nMdBasicChip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdBasicChip.ctorParameters;\n}\n\n/**\n * Material design styled Chip component. Used inside the MdChipList component.\n */\nexport class MdChip extends _MdChipMixinBase implements FocusableOption, OnDestroy, CanColor,\n  CanDisable {\n\n   _chipRemove: MdChipRemove;\n/**\n * Whether the chip is selected.\n * @return {?}\n */\nget selected(): boolean { return this._selected; }\n/**\n * @param {?} value\n * @return {?}\n */\nset selected(value: boolean) {\n    this._selected = coerceBooleanProperty(value);\n    (this.selected ? this.select : this.deselect).emit({chip: this});\n  }\n  protected _selected: boolean = false;\n/**\n * Whether or not the chips are selectable. When a chip is not selectable,\n * changes to it's selected state are always ignored.\n * @return {?}\n */\nget selectable(): boolean {\n    return this._selectable;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n  }\n  protected _selectable: boolean = true;\n/**\n * Determines whether or not the chip displays the remove styling and emits (remove) events.\n * @return {?}\n */\nget removable(): boolean {\n    return this._removable;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  protected _removable: boolean = true;\n/**\n * Whether the chip has focus.\n */\n_hasFocus: boolean = false;\n/**\n * Emits when the chip is focused.\n */\n_onFocus = new Subject<MdChipEvent>();\n/**\n * Emitted when the chip is selected.\n */\nselect = new EventEmitter<MdChipEvent>();\n/**\n * Emitted when the chip is deselected.\n */\ndeselect = new EventEmitter<MdChipEvent>();\n/**\n * Emitted when the chip is destroyed.\n */\ndestroy = new EventEmitter<MdChipEvent>();\n/**\n * @return {?}\n */\nget ariaSelected(): string | null {\n    return this.selectable ? this.selected.toString() : null;\n  }\n/**\n * @param {?} renderer\n * @param {?} elementRef\n */\nconstructor(renderer: Renderer2, elementRef: ElementRef) {\n    super(renderer, elementRef);\n  }\n/**\n * Emitted when a chip is to be removed.\n */\nonRemove = new EventEmitter<MdChipEvent>();\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this.destroy.emit({chip: this});\n  }\n/**\n * Toggles the current selected state of this chip.\n * @return {?}\n */\ntoggleSelected(): boolean {\n    this.selected = !this.selected;\n    return this.selected;\n  }\n/**\n * Allows for programmatic focusing of the chip.\n * @return {?}\n */\nfocus(): void {\n    this._elementRef.nativeElement.focus();\n    this._onFocus.next({chip: this});\n  }\n/**\n * Allows for programmatic removal of the chip. Called by the MdChipList when the DELETE or\n * BACKSPACE keys are pressed.\n * \n * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n * @return {?}\n */\nremove(): void {\n    if (this.removable) {\n      this.onRemove.emit({chip: this});\n    }\n  }\n/**\n * Ensures events fire properly upon click.\n * @param {?} event\n * @return {?}\n */\n_handleClick(event: Event) {\n    // Check disabled\n    if (this.disabled) {\n      return;\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.focus();\n  }\n/**\n * Handle custom key presses.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent) {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        // If we are removable, remove the focused chip\n        this.remove();\n        // Always prevent so page navigation does not occur\n        event.preventDefault();\n        break;\n      case SPACE:\n        // If we are selectable, toggle the focused chip\n        if (this.selectable) {\n          this.toggleSelected();\n        }\n\n        // Always prevent space from scrolling the page since the list has focus\n        event.preventDefault();\n        break;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `md-basic-chip, [md-basic-chip], md-chip, [md-chip],\n             mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n  inputs: ['color', 'disabled'],\n  exportAs: 'mdChip',\n  host: {\n    'class': 'mat-chip',\n    'tabindex': '-1',\n    'role': 'option',\n    '[class.mat-chip-selected]': 'selected',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-selected]': 'ariaSelected',\n    '(click)': '_handleClick($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': '_hasFocus = true',\n    '(blur)': '_hasFocus = false',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_chipRemove': [{ type: ContentChild, args: [forwardRef(() => MdChipRemove), ] },],\n'selected': [{ type: Input },],\n'selectable': [{ type: Input },],\n'removable': [{ type: Input },],\n'select': [{ type: Output },],\n'deselect': [{ type: Output },],\n'destroy': [{ type: Output },],\n'onRemove': [{ type: Output, args: ['remove', ] },],\n};\n}\n\nfunction MdChip_tsickle_Closure_declarations() {\n/** @type {?} */\nMdChip.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdChip.ctorParameters;\n/** @type {?} */\nMdChip.propDecorators;\n/** @type {?} */\nMdChip.prototype._chipRemove;\n/** @type {?} */\nMdChip.prototype._selected;\n/** @type {?} */\nMdChip.prototype._selectable;\n/** @type {?} */\nMdChip.prototype._removable;\n/**\n * Whether the chip has focus.\n * @type {?}\n */\nMdChip.prototype._hasFocus;\n/**\n * Emits when the chip is focused.\n * @type {?}\n */\nMdChip.prototype._onFocus;\n/**\n * Emitted when the chip is selected.\n * @type {?}\n */\nMdChip.prototype.select;\n/**\n * Emitted when the chip is deselected.\n * @type {?}\n */\nMdChip.prototype.deselect;\n/**\n * Emitted when the chip is destroyed.\n * @type {?}\n */\nMdChip.prototype.destroy;\n/**\n * Emitted when a chip is to be removed.\n * @type {?}\n */\nMdChip.prototype.onRemove;\n}\n\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n * \n * Example:\n * \n *     <md-chip>\n *       <md-icon mdChipRemove>cancel</md-icon>\n *     </md-chip>\n * \n * You *may* use a custom icon, but you may need to override the `md-chip-remove` positioning styles\n * to properly center the icon within the chip.\n */\nexport class MdChipRemove {\n/**\n * @param {?} _parentChip\n */\nconstructor(protected _parentChip: MdChip) {}\n/**\n * Calls the parent chip's public `remove()` method if applicable.\n * @return {?}\n */\n_handleClick() {\n    if (this._parentChip.removable) {\n      this._parentChip.remove();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[mdChipRemove], [matChipRemove]',\n  host: {\n    'class': 'mat-chip-remove',\n    '(click)': '_handleClick($event)'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdChip, },\n];\n}\n\nfunction MdChipRemove_tsickle_Closure_declarations() {\n/** @type {?} */\nMdChipRemove.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdChipRemove.ctorParameters;\n/** @type {?} */\nMdChipRemove.prototype._parentChip;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdCommonModule} from '../core';\nimport {\n  MdCard,\n  MdCardHeader,\n  MdCardTitleGroup,\n  MdCardContent,\n  MdCardTitle,\n  MdCardSubtitle,\n  MdCardActions,\n  MdCardFooter,\n  MdCardSmImage,\n  MdCardMdImage,\n  MdCardLgImage,\n  MdCardImage,\n  MdCardXlImage,\n  MdCardAvatar,\n} from './card';\nexport class MdCardModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule],\n  exports: [\n    MdCard,\n    MdCardHeader,\n    MdCardTitleGroup,\n    MdCardContent,\n    MdCardTitle,\n    MdCardSubtitle,\n    MdCardActions,\n    MdCardFooter,\n    MdCardSmImage,\n    MdCardMdImage,\n    MdCardLgImage,\n    MdCardImage,\n    MdCardXlImage,\n    MdCardAvatar,\n    MdCommonModule,\n  ],\n  declarations: [\n    MdCard, MdCardHeader, MdCardTitleGroup, MdCardContent, MdCardTitle, MdCardSubtitle,\n    MdCardActions, MdCardFooter, MdCardSmImage, MdCardMdImage, MdCardLgImage, MdCardImage,\n    MdCardXlImage, MdCardAvatar,\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardModule.ctorParameters;\n}\n\n\n\nexport {MdCardContent,MdCardTitle,MdCardSubtitle,MdCardActions,MdCardFooter,MdCardImage,MdCardSmImage,MdCardMdImage,MdCardLgImage,MdCardXlImage,MdCardAvatar,MdCard,MdCardHeader,MdCardTitleGroup} from './card';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Directive,\n  Input,\n} from '@angular/core';\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nexport class MdCardContent {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-card-content, mat-card-content',\n  host: {'class': 'mat-card-content'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardContent_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardContent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardContent.ctorParameters;\n}\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nexport class MdCardTitle {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `md-card-title, mat-card-title, [md-card-title], [mat-card-title],\n             [mdCardTitle], [matCardTitle]`,\n  host: {\n    'class': 'mat-card-title'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardTitle_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardTitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardTitle.ctorParameters;\n}\n\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nexport class MdCardSubtitle {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `md-card-subtitle, mat-card-subtitle, [md-card-subtitle], [mat-card-subtitle],\n             [mdCardSubtitle], [matCardSubtitle]`,\n  host: {\n    'class': 'mat-card-subtitle'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardSubtitle_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardSubtitle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardSubtitle.ctorParameters;\n}\n\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nexport class MdCardActions {\n/**\n * Position of the actions inside the card.\n */\nalign: 'start' | 'end' = 'start';\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-card-actions, mat-card-actions',\n  host: {\n    'class': 'mat-card-actions',\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'align': [{ type: Input },],\n};\n}\n\nfunction MdCardActions_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardActions.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardActions.ctorParameters;\n/** @type {?} */\nMdCardActions.propDecorators;\n/**\n * Position of the actions inside the card.\n * @type {?}\n */\nMdCardActions.prototype.align;\n}\n\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * \\@docs-private\n */\nexport class MdCardFooter {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-card-footer, mat-card-footer',\n  host: {'class': 'mat-card-footer'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardFooter_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardFooter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardFooter.ctorParameters;\n}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nexport class MdCardImage {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-card-image], [mat-card-image], [mdCardImage], [matCardImage]',\n  host: {'class': 'mat-card-image'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardImage_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardImage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardImage.ctorParameters;\n}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nexport class MdCardSmImage {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-card-sm-image], [mat-card-sm-image], [mdCardImageSmall], [matCardImageSmall]',\n  host: {'class': 'mat-card-sm-image'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardSmImage_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardSmImage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardSmImage.ctorParameters;\n}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nexport class MdCardMdImage {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-card-md-image], [mat-card-md-image], [mdCardImageMedium], [matCardImageMedium]',\n  host: {'class': 'mat-card-md-image'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardMdImage_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardMdImage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardMdImage.ctorParameters;\n}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nexport class MdCardLgImage {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-card-lg-image], [mat-card-lg-image], [mdCardImageLarge], [matCardImageLarge]',\n  host: {'class': 'mat-card-lg-image'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardLgImage_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardLgImage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardLgImage.ctorParameters;\n}\n\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nexport class MdCardXlImage {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-card-xl-image], [mat-card-xl-image], [mdCardImageXLarge], [matCardImageXLarge]',\n  host: {'class': 'mat-card-xl-image'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardXlImage_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardXlImage.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardXlImage.ctorParameters;\n}\n\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * \\@docs-private\n */\nexport class MdCardAvatar {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-card-avatar], [mat-card-avatar], [mdCardAvatar], [matCardAvatar]',\n  host: {'class': 'mat-card-avatar'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardAvatar_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardAvatar.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardAvatar.ctorParameters;\n}\n\n/**\n * A basic content container component that adds the styles of a Material design card.\n * \n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - md-card-title\n * - md-card-subtitle\n * - md-card-content\n * - md-card-actions\n * - md-card-footer\n */\nexport class MdCard {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-card, mat-card',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCard_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCard.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCard.ctorParameters;\n}\n\n/**\n * Component intended to be used within the `<md-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * \\@docs-private\n */\nexport class MdCardHeader {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-card-header, mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-header'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardHeader_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardHeader.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardHeader.ctorParameters;\n}\n\n/**\n * Component intended to be used within the <md-card> component. It adds styles for a preset\n * layout that groups an image with a title section.\n * \\@docs-private\n */\nexport class MdCardTitleGroup {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-card-title-group, mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-title-group'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCardTitleGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCardTitleGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCardTitleGroup.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdLineModule, MdCommonModule} from '../core';\nimport {\n  MdGridTile, MdGridTileText, MdGridTileFooterCssMatStyler,\n  MdGridTileHeaderCssMatStyler, MdGridAvatarCssMatStyler\n} from './grid-tile';\nimport {MdGridList} from './grid-list';\nexport class MdGridListModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdLineModule, MdCommonModule],\n  exports: [\n    MdGridList,\n    MdGridTile,\n    MdGridTileText,\n    MdLineModule,\n    MdCommonModule,\n    MdGridTileHeaderCssMatStyler,\n    MdGridTileFooterCssMatStyler,\n    MdGridAvatarCssMatStyler\n  ],\n  declarations: [\n    MdGridList,\n    MdGridTile,\n    MdGridTileText,\n    MdGridTileHeaderCssMatStyler,\n    MdGridTileFooterCssMatStyler,\n    MdGridAvatarCssMatStyler\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridListModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridListModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridListModule.ctorParameters;\n}\n\n\n\nexport {MdGridList} from './grid-list';\nexport {MdGridTile} from './grid-tile';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ViewEncapsulation,\n  AfterContentChecked,\n  OnInit,\n  Input,\n  ContentChildren,\n  QueryList,\n  Renderer2,\n  ElementRef,\n  Optional,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {MdGridTile} from './grid-tile';\nimport {TileCoordinator} from './tile-coordinator';\nimport {TileStyler, FitTileStyler, RatioTileStyler, FixedTileStyler} from './tile-styler';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  coerceToString,\n  coerceToNumber,\n} from './grid-list-measure';\n\n\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\n\nconst /** @type {?} */ MD_FIT_MODE = 'fit';\nexport class MdGridList implements OnInit, AfterContentChecked {\n/**\n * Number of columns being rendered.\n */\nprivate _cols: number;\n/**\n * Row height value passed in by user. This can be one of three types:\n * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n */\nprivate _rowHeight: string;\n/**\n * The amount of space between tiles. This will be something like '5px' or '2em'.\n */\nprivate _gutter: string = '1px';\n/**\n * Sets position and size styles for a tile\n */\nprivate _tileStyler: TileStyler;\n/**\n * Query list of tiles that are being rendered.\n */\n_tiles: QueryList<MdGridTile>;\n/**\n * @param {?} _renderer\n * @param {?} _element\n * @param {?} _dir\n */\nconstructor(\nprivate _renderer: Renderer2,\nprivate _element: ElementRef,\nprivate _dir: Directionality) {}\n/**\n * Amount of columns in the grid list.\n * @return {?}\n */\nget cols() { return this._cols; }\n/**\n * @param {?} value\n * @return {?}\n */\nset cols(value: any) { this._cols = coerceToNumber(value); }\n/**\n * Size of the grid list's gutter in pixels.\n * @return {?}\n */\nget gutterSize() { return this._gutter; }\n/**\n * @param {?} value\n * @return {?}\n */\nset gutterSize(value: any) { this._gutter = coerceToString(value); }\n/**\n * Set internal representation of row height from the user-provided value.\n * @param {?} value\n * @return {?}\n */\nset rowHeight(value: string | number) {\n    this._rowHeight = coerceToString(value);\n    this._setTileStyler();\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._checkCols();\n    this._checkRowHeight();\n  }\n/**\n * The layout calculation is fairly cheap if nothing changes, so there's little cost\n * to run it frequently.\n * @return {?}\n */\nngAfterContentChecked() {\n    this._layoutTiles();\n  }\n/**\n * Throw a friendly error if cols property is missing\n * @return {?}\n */\nprivate _checkCols() {\n    if (!this.cols) {\n      throw Error(`md-grid-list: must pass in number of columns. ` +\n                      `Example: <md-grid-list cols=\"3\">`);\n    }\n  }\n/**\n * Default to equal width:height if rowHeight property is missing\n * @return {?}\n */\nprivate _checkRowHeight(): void {\n    if (!this._rowHeight) {\n      this._tileStyler = new RatioTileStyler('1:1');\n    }\n  }\n/**\n * Creates correct Tile Styler subtype based on rowHeight passed in by user\n * @return {?}\n */\nprivate _setTileStyler(): void {\n    if (this._rowHeight === MD_FIT_MODE) {\n      this._tileStyler = new FitTileStyler();\n    } else if (this._rowHeight && this._rowHeight.indexOf(':') > -1) {\n      this._tileStyler = new RatioTileStyler(this._rowHeight);\n    } else {\n      this._tileStyler = new FixedTileStyler(this._rowHeight);\n    }\n  }\n/**\n * Computes and applies the size and position for all children grid tiles.\n * @return {?}\n */\nprivate _layoutTiles(): void {\n    let /** @type {?} */ tracker = new TileCoordinator(this.cols, this._tiles);\n    let /** @type {?} */ direction = this._dir ? this._dir.value : 'ltr';\n    this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n\n    this._tiles.forEach((tile, index) => {\n      let /** @type {?} */ pos = tracker.positions[index];\n      this._tileStyler.setStyle(tile, pos.row, pos.col);\n    });\n\n    this._setListStyle(this._tileStyler.getComputedHeight());\n  }\n/**\n * Sets style on the main grid-list element, given the style name and value.\n * @param {?} style\n * @return {?}\n */\n_setListStyle(style: [string, string] | null): void {\n    if (style) {\n      this._renderer.setStyle(this._element.nativeElement, style[0], style[1]);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-grid-list, mat-grid-list',\n  templateUrl: 'grid-list.html',\n  styleUrls: ['grid-list.css'],\n  host: {\n    'class': 'mat-grid-list',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_tiles': [{ type: ContentChildren, args: [MdGridTile, ] },],\n'cols': [{ type: Input },],\n'gutterSize': [{ type: Input },],\n'rowHeight': [{ type: Input },],\n};\n}\n\nfunction MdGridList_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridList.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridList.ctorParameters;\n/** @type {?} */\nMdGridList.propDecorators;\n/**\n * Number of columns being rendered.\n * @type {?}\n */\nMdGridList.prototype._cols;\n/**\n * Row height value passed in by user. This can be one of three types:\n * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n * @type {?}\n */\nMdGridList.prototype._rowHeight;\n/**\n * The amount of space between tiles. This will be something like '5px' or '2em'.\n * @type {?}\n */\nMdGridList.prototype._gutter;\n/**\n * Sets position and size styles for a tile\n * @type {?}\n */\nMdGridList.prototype._tileStyler;\n/**\n * Query list of tiles that are being rendered.\n * @type {?}\n */\nMdGridList.prototype._tiles;\n/** @type {?} */\nMdGridList.prototype._renderer;\n/** @type {?} */\nMdGridList.prototype._element;\n/** @type {?} */\nMdGridList.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {MdGridTile} from './grid-tile';\nimport {TileCoordinator} from './tile-coordinator';\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * \\@docs-private\n * @abstract\n */\nexport abstract class TileStyler {\n  _gutterSize: string;\n  _rows: number = 0;\n  _rowspan: number = 0;\n  _cols: number;\n  _direction: string;\n/**\n * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n * because these properties haven't been calculated by that point.\n * \n * @param {?} gutterSize Size of the grid's gutter.\n * @param {?} tracker Instance of the TileCoordinator.\n * @param {?} cols Amount of columns in the grid.\n * @param {?} direction Layout direction of the grid.\n * @return {?}\n */\ninit(gutterSize: string, tracker: TileCoordinator, cols: number, direction: string): void {\n    this._gutterSize = normalizeUnits(gutterSize);\n    this._rows = tracker.rowCount;\n    this._rowspan = tracker.rowspan;\n    this._cols = cols;\n    this._direction = direction;\n  }\n/**\n * Computes the amount of space a single 1x1 tile would take up (width or height).\n * Used as a basis for other calculations.\n * @param {?} sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n * @param {?} gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n * @return {?} The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n */\ngetBaseTileSize(sizePercent: number, gutterFraction: number): string {\n    // Take the base size percent (as would be if evenly dividing the size between cells),\n    // and then subtracting the size of one gutter. However, since there are no gutters on the\n    // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n    // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n    // edge evenly among the cells).\n    return `(${sizePercent}% - ( ${this._gutterSize} * ${gutterFraction} ))`;\n  }\n/**\n * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n * @param {?} offset Number of tiles that have already been rendered in the row/column.\n * @return {?} Position of the tile as a CSS calc() expression.\n */\ngetTilePosition(baseSize: string, offset: number): string {\n    // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n    // row/column (offset).\n    return calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n  }\n/**\n * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n * @param {?} baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n * @param {?} span The tile's rowspan or colspan.\n * @return {?} Size of the tile as a CSS calc() expression.\n */\ngetTileSize(baseSize: string, span: number): string {\n    return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n  }\n/**\n * Sets the style properties to be applied to a tile for the given row and column index.\n * @param {?} tile Tile to which to apply the styling.\n * @param {?} rowIndex Index of the tile's row.\n * @param {?} colIndex Index of the tile's column.\n * @return {?}\n */\nsetStyle(tile: MdGridTile, rowIndex: number, colIndex: number): void {\n    // Percent of the available horizontal space that one column takes up.\n    let /** @type {?} */ percentWidthPerTile = 100 / this._cols;\n\n    // Fraction of the vertical gutter size that each column takes up.\n    // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n    let /** @type {?} */ gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n\n    this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n  }\n/**\n * Sets the horizontal placement of the tile in the list.\n * @param {?} tile\n * @param {?} colIndex\n * @param {?} percentWidth\n * @param {?} gutterWidth\n * @return {?}\n */\nsetColStyles(tile: MdGridTile, colIndex: number, percentWidth: number,\n               gutterWidth: number) {\n    // Base horizontal size of a column.\n    let /** @type {?} */ baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n\n    // The width and horizontal position of each tile is always calculated the same way, but the\n    // height and vertical position depends on the rowMode.\n    let /** @type {?} */ side = this._direction === 'ltr' ? 'left' : 'right';\n    tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n    tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n  }\n/**\n * Calculates the total size taken up by gutters across one axis of a list.\n * @return {?}\n */\ngetGutterSpan(): string {\n    return `${this._gutterSize} * (${this._rowspan} - 1)`;\n  }\n/**\n * Calculates the total size taken up by tiles across one axis of a list.\n * @param {?} tileHeight Height of the tile.\n * @return {?}\n */\ngetTileSpan(tileHeight: string): string {\n    return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n  }\n/**\n * Sets the vertical placement of the tile in the list.\n * This method will be implemented by each type of TileStyler.\n * \\@docs-private\n * @abstract\n * @param {?} tile\n * @param {?} rowIndex\n * @param {?} percentWidth\n * @param {?} gutterWidth\n * @return {?}\n */\nsetRowStyles(tile: MdGridTile, rowIndex: number, percentWidth: number,\n                        gutterWidth: number) {}\n/**\n * Calculates the computed height and returns the correct style property to set.\n * This method can be implemented by each type of TileStyler.\n * \\@docs-private\n * @return {?}\n */\ngetComputedHeight(): [string, string] | null { return null; }\n}\n\nfunction TileStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nTileStyler.prototype._gutterSize;\n/** @type {?} */\nTileStyler.prototype._rows;\n/** @type {?} */\nTileStyler.prototype._rowspan;\n/** @type {?} */\nTileStyler.prototype._cols;\n/** @type {?} */\nTileStyler.prototype._direction;\n}\n\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example <md-grid-list cols=\"3\" rowHeight=\"100px\">\n * \\@docs-private\n */\nexport class FixedTileStyler extends TileStyler {\n/**\n * @param {?} fixedRowHeight\n */\nconstructor(public fixedRowHeight: string) { super(); }\n/**\n * @param {?} gutterSize\n * @param {?} tracker\n * @param {?} cols\n * @param {?} direction\n * @return {?}\n */\ninit(gutterSize: string, tracker: TileCoordinator, cols: number, direction: string) {\n    super.init(gutterSize, tracker, cols, direction);\n    this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n  }\n/**\n * @param {?} tile\n * @param {?} rowIndex\n * @return {?}\n */\nsetRowStyles(tile: MdGridTile, rowIndex: number): void {\n    tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n    tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n  }\n/**\n * @return {?}\n */\ngetComputedHeight(): [string, string] {\n    return [\n      'height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)\n    ];\n  }\n}\n\nfunction FixedTileStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nFixedTileStyler.prototype.fixedRowHeight;\n}\n\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example <md-grid-list cols=\"3\" rowHeight=\"3:1\">\n * \\@docs-private\n */\nexport class RatioTileStyler extends TileStyler {\n/**\n * Ratio width:height given by user to determine row height.\n */\nrowHeightRatio: number;\n  baseTileHeight: string;\n/**\n * @param {?} value\n */\nconstructor(value: string) {\n    super();\n    this._parseRatio(value);\n  }\n/**\n * @param {?} tile\n * @param {?} rowIndex\n * @param {?} percentWidth\n * @param {?} gutterWidth\n * @return {?}\n */\nsetRowStyles(tile: MdGridTile, rowIndex: number, percentWidth: number,\n               gutterWidth: number): void {\n    let /** @type {?} */ percentHeightPerTile = percentWidth / this.rowHeightRatio;\n    this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n\n    // Use padding-top and margin-top to maintain the given aspect ratio, as\n    // a percentage-based value for these properties is applied versus the *width* of the\n    // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n    tile._setStyle('margin-top', this.getTilePosition(this.baseTileHeight, rowIndex));\n    tile._setStyle('padding-top', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n  }\n/**\n * @return {?}\n */\ngetComputedHeight(): [string, string] {\n    return [\n      'padding-bottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)\n    ];\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate _parseRatio(value: string): void {\n    let /** @type {?} */ ratioParts = value.split(':');\n\n    if (ratioParts.length !== 2) {\n      throw Error(`md-grid-list: invalid ratio given for row-height: \"${value}\"`);\n    }\n\n    this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n  }\n}\n\nfunction RatioTileStyler_tsickle_Closure_declarations() {\n/**\n * Ratio width:height given by user to determine row height.\n * @type {?}\n */\nRatioTileStyler.prototype.rowHeightRatio;\n/** @type {?} */\nRatioTileStyler.prototype.baseTileHeight;\n}\n\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example <md-grid-list cols=\"3\" rowHeight=\"fit\">\n * \n * \\@docs-private\n */\nexport class FitTileStyler extends TileStyler {\n/**\n * @param {?} tile\n * @param {?} rowIndex\n * @return {?}\n */\nsetRowStyles(tile: MdGridTile, rowIndex: number): void {\n    // Percent of the available vertical space that one row takes up.\n    let /** @type {?} */ percentHeightPerTile = 100 / this._rowspan;\n\n    // Fraction of the horizontal gutter size that each column takes up.\n    let /** @type {?} */ gutterHeightPerTile = (this._rows - 1) / this._rows;\n\n    // Base vertical size of a column.\n    let /** @type {?} */ baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n\n    tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n    tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n  }\n\n}\n/**\n * Wraps a CSS string in a calc function\n * @param {?} exp\n * @return {?}\n */\nfunction calc(exp: string): string { return `calc(${exp})`; }\n/**\n * Appends pixels to a CSS string if no units are given.\n * @param {?} value\n * @return {?}\n */\nfunction normalizeUnits(value: string): string {\n  return (value.match(/px|em|rem/)) ? value : value + 'px';\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {QueryList} from '@angular/core';\nimport {MdGridTile} from './grid-tile';\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n * \n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n * \n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n * \n * \\@docs-private\n */\nexport class TileCoordinator {\n/**\n * Tracking array (see class description).\n */\ntracker: number[];\n/**\n * Index at which the search for the next gap will start.\n */\ncolumnIndex: number = 0;\n/**\n * The current row index.\n */\nrowIndex: number = 0;\n/**\n * Gets the total number of rows occupied by tiles\n * @return {?}\n */\nget rowCount(): number { return this.rowIndex + 1; }\n/**\n * Gets the total span of rows occupied by tiles.\n * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n * @return {?}\n */\nget rowspan() {\n    let /** @type {?} */ lastRowMax = Math.max(...this.tracker);\n    // if any of the tiles has a rowspan that pushes it beyond the total row count,\n    // add the difference to the rowcount\n    return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n  }\n/**\n * The computed (row, col) position of each tile (the output).\n */\npositions: TilePosition[];\n/**\n * @param {?} numColumns\n * @param {?} tiles\n */\nconstructor(numColumns: number, tiles: QueryList<MdGridTile>) {\n    this.tracker = new Array(numColumns);\n    this.tracker.fill(0, 0, this.tracker.length);\n\n    this.positions = tiles.map(tile => this._trackTile(tile));\n  }\n/**\n * Calculates the row and col position of a tile.\n * @param {?} tile\n * @return {?}\n */\nprivate _trackTile(tile: MdGridTile): TilePosition {\n    // Find a gap large enough for this tile.\n    let /** @type {?} */ gapStartIndex = this._findMatchingGap(tile.colspan);\n\n    // Place tile in the resulting gap.\n    this._markTilePosition(gapStartIndex, tile);\n\n    // The next time we look for a gap, the search will start at columnIndex, which should be\n    // immediately after the tile that has just been placed.\n    this.columnIndex = gapStartIndex + tile.colspan;\n\n    return new TilePosition(this.rowIndex, gapStartIndex);\n  }\n/**\n * Finds the next available space large enough to fit the tile.\n * @param {?} tileCols\n * @return {?}\n */\nprivate _findMatchingGap(tileCols: number): number {\n    if (tileCols > this.tracker.length) {\n      throw Error(`md-grid-list: tile with colspan ${tileCols} is wider than ` +\n                      `grid with cols=\"${this.tracker.length}\".`);\n    }\n\n    // Start index is inclusive, end index is exclusive.\n    let /** @type {?} */ gapStartIndex = -1;\n    let /** @type {?} */ gapEndIndex = -1;\n\n    // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n    do {\n      // If we've reached the end of the row, go to the next row.\n      if (this.columnIndex + tileCols > this.tracker.length) {\n        this._nextRow();\n        continue;\n      }\n\n      gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n\n      // If there are no more empty spaces in this row at all, move on to the next row.\n      if (gapStartIndex == -1) {\n        this._nextRow();\n        continue;\n      }\n\n      gapEndIndex = this._findGapEndIndex(gapStartIndex);\n\n      // If a gap large enough isn't found, we want to start looking immediately after the current\n      // gap on the next iteration.\n      this.columnIndex = gapStartIndex + 1;\n\n      // Continue iterating until we find a gap wide enough for this tile.\n    } while (gapEndIndex - gapStartIndex < tileCols);\n    return gapStartIndex;\n  }\n/**\n * Move \"down\" to the next row.\n * @return {?}\n */\nprivate _nextRow(): void {\n    this.columnIndex = 0;\n    this.rowIndex++;\n\n    // Decrement all spaces by one to reflect moving down one row.\n    for (let /** @type {?} */ i = 0; i < this.tracker.length; i++) {\n      this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n    }\n  }\n/**\n * Finds the end index (exclusive) of a gap given the index from which to start looking.\n * The gap ends when a non-zero value is found.\n * @param {?} gapStartIndex\n * @return {?}\n */\nprivate _findGapEndIndex(gapStartIndex: number): number {\n    for (let /** @type {?} */ i = gapStartIndex + 1; i < this.tracker.length; i++) {\n      if (this.tracker[i] != 0) {\n        return i;\n      }\n    }\n\n    // The gap ends with the end of the row.\n    return this.tracker.length;\n  }\n/**\n * Update the tile tracker to account for the given tile in the given space.\n * @param {?} start\n * @param {?} tile\n * @return {?}\n */\nprivate _markTilePosition(start: number, tile: MdGridTile): void {\n    for (let /** @type {?} */ i = 0; i < tile.colspan; i++) {\n      this.tracker[start + i] = tile.rowspan;\n    }\n  }\n}\n\nfunction TileCoordinator_tsickle_Closure_declarations() {\n/**\n * Tracking array (see class description).\n * @type {?}\n */\nTileCoordinator.prototype.tracker;\n/**\n * Index at which the search for the next gap will start.\n * @type {?}\n */\nTileCoordinator.prototype.columnIndex;\n/**\n * The current row index.\n * @type {?}\n */\nTileCoordinator.prototype.rowIndex;\n/**\n * The computed (row, col) position of each tile (the output).\n * @type {?}\n */\nTileCoordinator.prototype.positions;\n}\n\n/**\n * Simple data structure for tile position (row, col).\n * \\@docs-private\n */\nexport class TilePosition {\n/**\n * @param {?} row\n * @param {?} col\n */\nconstructor(public row: number,\npublic col: number) {}\n}\n\nfunction TilePosition_tsickle_Closure_declarations() {\n/** @type {?} */\nTilePosition.prototype.row;\n/** @type {?} */\nTilePosition.prototype.col;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ViewEncapsulation,\n  Renderer2,\n  ElementRef,\n  Input,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  Directive,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {MdLine, MdLineSetter} from '../core';\nimport {coerceToNumber} from './grid-list-measure';\nexport class MdGridTile {\n  _rowspan: number = 1;\n  _colspan: number = 1;\n/**\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _renderer: Renderer2,\nprivate _element: ElementRef) {}\n/**\n * Amount of rows that the grid tile takes up.\n * @return {?}\n */\nget rowspan() { return this._rowspan; }\n/**\n * @param {?} value\n * @return {?}\n */\nset rowspan(value) { this._rowspan = coerceToNumber(value); }\n/**\n * Amount of columns that the grid tile takes up.\n * @return {?}\n */\nget colspan() { return this._colspan; }\n/**\n * @param {?} value\n * @return {?}\n */\nset colspan(value) { this._colspan = coerceToNumber(value); }\n/**\n * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n * \"Changed after checked\" errors that would occur with HostBinding.\n * @param {?} property\n * @param {?} value\n * @return {?}\n */\n_setStyle(property: string, value: string): void {\n    this._renderer.setStyle(this._element.nativeElement, property, value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-grid-tile, mat-grid-tile',\n  host: {\n    'class': 'mat-grid-tile',\n  },\n  templateUrl: 'grid-tile.html',\n  styleUrls: ['grid-list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'rowspan': [{ type: Input },],\n'colspan': [{ type: Input },],\n};\n}\n\nfunction MdGridTile_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTile.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTile.ctorParameters;\n/** @type {?} */\nMdGridTile.propDecorators;\n/** @type {?} */\nMdGridTile.prototype._rowspan;\n/** @type {?} */\nMdGridTile.prototype._colspan;\n/** @type {?} */\nMdGridTile.prototype._renderer;\n/** @type {?} */\nMdGridTile.prototype._element;\n}\n\nexport class MdGridTileText implements AfterContentInit {\n/**\n *  Helper that watches the number of lines in a text area and sets\n * a class on the host element that matches the line count.\n */\n_lineSetter: MdLineSetter;\n   _lines: QueryList<MdLine>;\n/**\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _renderer: Renderer2,\nprivate _element: ElementRef) {}\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-grid-tile-header, mat-grid-tile-header, md-grid-tile-footer, mat-grid-tile-footer',\n  templateUrl: 'grid-tile-text.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_lines': [{ type: ContentChildren, args: [MdLine, ] },],\n};\n}\n\nfunction MdGridTileText_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTileText.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTileText.ctorParameters;\n/** @type {?} */\nMdGridTileText.propDecorators;\n/**\n *  Helper that watches the number of lines in a text area and sets\n * a class on the host element that matches the line count.\n * @type {?}\n */\nMdGridTileText.prototype._lineSetter;\n/** @type {?} */\nMdGridTileText.prototype._lines;\n/** @type {?} */\nMdGridTileText.prototype._renderer;\n/** @type {?} */\nMdGridTileText.prototype._element;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdGridAvatarCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-grid-avatar], [mat-grid-avatar], [mdGridAvatar], [matGridAvatar]',\n  host: {'class': 'mat-grid-avatar'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridAvatarCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridAvatarCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridAvatarCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdGridTileHeaderCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-grid-tile-header, mat-grid-tile-header',\n  host: {'class': 'mat-grid-tile-header'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridTileHeaderCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTileHeaderCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTileHeaderCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdGridTileFooterCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-grid-tile-footer, mat-grid-tile-footer',\n  host: {'class': 'mat-grid-tile-footer'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdGridTileFooterCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdGridTileFooterCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdGridTileFooterCssMatStyler.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Converts values into strings. Falsy values become empty strings.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nexport function coerceToString(value: string | number): string {\n  return `${value || ''}`;\n}\n/**\n * Converts a value that might be a string into a number.\n * \\@docs-private\n * @param {?} value\n * @return {?}\n */\nexport function coerceToNumber(value: string | number): number {\n  return typeof value === 'string' ? parseInt(value, 10) : value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdCommonModule, MdLineModule, MdPseudoCheckboxModule, MdRippleModule} from '../core';\nimport {CommonModule} from '@angular/common';\nimport {\n  MdDividerCssMatStyler,\n  MdList,\n  MdListAvatarCssMatStyler,\n  MdListCssMatStyler,\n  MdListDivider,\n  MdListIconCssMatStyler,\n  MdListItem,\n  MdListSubheaderCssMatStyler,\n  MdNavListCssMatStyler\n} from './list';\nimport {MdListOption, MdSelectionList} from './selection-list';\nexport class MdListModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdLineModule, MdRippleModule, MdCommonModule, MdPseudoCheckboxModule, CommonModule],\n  exports: [\n    MdList,\n    MdListItem,\n    MdListDivider,\n    MdListAvatarCssMatStyler,\n    MdLineModule,\n    MdCommonModule,\n    MdListIconCssMatStyler,\n    MdListCssMatStyler,\n    MdNavListCssMatStyler,\n    MdDividerCssMatStyler,\n    MdListSubheaderCssMatStyler,\n    MdPseudoCheckboxModule,\n    MdSelectionList,\n    MdListOption\n  ],\n  declarations: [\n    MdList,\n    MdListItem,\n    MdListDivider,\n    MdListAvatarCssMatStyler,\n    MdListIconCssMatStyler,\n    MdListCssMatStyler,\n    MdNavListCssMatStyler,\n    MdDividerCssMatStyler,\n    MdListSubheaderCssMatStyler,\n    MdSelectionList,\n    MdListOption\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdListModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdListModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdListModule.ctorParameters;\n}\n\n\n\nexport {MdListBase,_MdListMixinBase,MdListItemBase,_MdListItemMixinBase,MdListDivider,MdList,MdListCssMatStyler,MdNavListCssMatStyler,MdDividerCssMatStyler,MdListAvatarCssMatStyler,MdListIconCssMatStyler,MdListSubheaderCssMatStyler,MdListItem} from './list';\nexport {MdSelectionListBase,_MdSelectionListMixinBase,MdSelectionListOptionEvent,MdListOption,MdSelectionList} from './selection-list';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  QueryList,\n  ViewEncapsulation,\n  Optional,\n  Renderer2,\n  EventEmitter,\n  Output,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnDestroy,\n  forwardRef,\n  Inject,\n} from '@angular/core';\nimport {coerceBooleanProperty, SelectionModel, MdLine, MdLineSetter} from '../core';\nimport {FocusKeyManager} from '../core/a11y/focus-key-manager';\nimport {Subscription} from 'rxjs/Subscription';\nimport {SPACE} from '../core/keyboard/keycodes';\nimport {FocusableOption} from '../core/a11y/focus-key-manager';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\nimport {RxChain, switchMap, startWith} from '../core/rxjs/index';\nimport {merge} from 'rxjs/observable/merge';\nexport class MdSelectionListBase {}\nexport const /** @type {?} */ _MdSelectionListMixinBase = mixinDisabled(MdSelectionListBase);\n\n\nexport interface MdSelectionListOptionEvent {\n  option: MdListOption;\n}\n\nconst /** @type {?} */ FOCUSED_STYLE: string = 'mat-list-item-focus';\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is checked.\n */\nexport class MdListOption implements AfterContentInit, OnDestroy, FocusableOption {\nprivate _lineSetter: MdLineSetter;\nprivate _disableRipple: boolean = false;\nprivate _selected: boolean = false;\n/**\n * Whether the checkbox is disabled.\n */\nprivate _disabled: boolean = false;\nprivate _value: any;\n/**\n * Whether the option has focus.\n */\n_hasFocus: boolean = false;\n/**\n * Whether the ripple effect on click should be disabled. This applies only to list items that are\n * part of a selection list. The value of `disableRipple` on the `md-selection-list` overrides\n * this flag\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) { this._disableRipple = coerceBooleanProperty(value); }\n\n   _lines: QueryList<MdLine>;\n/**\n * Whether the label should appear before or after the checkbox. Defaults to 'after'\n */\ncheckboxPosition: 'before' | 'after' = 'after';\n/**\n * Whether the option is disabled.\n * @return {?}\n */\nget disabled() { return (this.selectionList && this.selectionList.disabled) || this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @param {?} val\n * @return {?}\n */\nset value( val: any) { this._value = coerceBooleanProperty(val); }\n/**\n * @return {?}\n */\nget selected() { return this._selected; }\n/**\n * @param {?} val\n * @return {?}\n */\nset selected( val: boolean) { this._selected = coerceBooleanProperty(val); }\n/**\n * Emitted when the option is focused.\n */\nonFocus = new EventEmitter<MdSelectionListOptionEvent>();\n/**\n * Emitted when the option is selected.\n */\nselectChange = new EventEmitter<MdSelectionListOptionEvent>();\n/**\n * Emitted when the option is deselected.\n */\ndeselected = new EventEmitter<MdSelectionListOptionEvent>();\n/**\n * Emitted when the option is destroyed.\n */\ndestroyed = new EventEmitter<MdSelectionListOptionEvent>();\n/**\n * @param {?} _renderer\n * @param {?} _element\n * @param {?} _changeDetector\n * @param {?} selectionList\n */\nconstructor(private _renderer: Renderer2,\nprivate _element: ElementRef,\nprivate _changeDetector: ChangeDetectorRef,\npublic selectionList: MdSelectionList) {}\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n\n    if (this.selectionList.disabled) {\n      this.disabled = true;\n    }\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this.destroyed.emit({option: this});\n  }\n/**\n * @return {?}\n */\ntoggle(): void {\n    this.selected = !this.selected;\n    this.selectionList.selectedOptions.toggle(this);\n    this._changeDetector.markForCheck();\n  }\n/**\n * Allows for programmatic focusing of the option.\n * @return {?}\n */\nfocus(): void {\n    this._element.nativeElement.focus();\n    this.onFocus.emit({option: this});\n  }\n/**\n * Whether this list item should show a ripple effect when clicked.\n * @return {?}\n */\nisRippleEnabled() {\n    return !this.disableRipple && !this.selectionList.disableRipple;\n  }\n/**\n * @return {?}\n */\n_handleClick() {\n    if (!this.disabled) {\n      this.toggle();\n    }\n  }\n/**\n * @return {?}\n */\n_handleFocus() {\n    this._hasFocus = true;\n    this._renderer.addClass(this._element.nativeElement, FOCUSED_STYLE);\n  }\n/**\n * @return {?}\n */\n_handleBlur() {\n    this._renderer.removeClass(this._element.nativeElement, FOCUSED_STYLE);\n  }\n/**\n * Retrieves the DOM element of the component host.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-list-option, mat-list-option',\n  host: {\n    'role': 'option',\n    'class': 'mat-list-item mat-list-option',\n    '(focus)': '_handleFocus()',\n    '(blur)': '_handleBlur()',\n    '(click)': '_handleClick()',\n    'tabindex': '-1',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n  },\n  templateUrl: 'list-option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: MdSelectionList, decorators: [{ type: Optional }, { type: Inject, args: [forwardRef(() => MdSelectionList), ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disableRipple': [{ type: Input },],\n'_lines': [{ type: ContentChildren, args: [MdLine, ] },],\n'checkboxPosition': [{ type: Input },],\n'disabled': [{ type: Input },],\n'value': [{ type: Input },],\n'selected': [{ type: Input },],\n'selectChange': [{ type: Output },],\n'deselected': [{ type: Output },],\n'destroyed': [{ type: Output },],\n};\n}\n\nfunction MdListOption_tsickle_Closure_declarations() {\n/** @type {?} */\nMdListOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdListOption.ctorParameters;\n/** @type {?} */\nMdListOption.propDecorators;\n/** @type {?} */\nMdListOption.prototype._lineSetter;\n/** @type {?} */\nMdListOption.prototype._disableRipple;\n/** @type {?} */\nMdListOption.prototype._selected;\n/**\n * Whether the checkbox is disabled.\n * @type {?}\n */\nMdListOption.prototype._disabled;\n/** @type {?} */\nMdListOption.prototype._value;\n/**\n * Whether the option has focus.\n * @type {?}\n */\nMdListOption.prototype._hasFocus;\n/** @type {?} */\nMdListOption.prototype._lines;\n/**\n * Whether the label should appear before or after the checkbox. Defaults to 'after'\n * @type {?}\n */\nMdListOption.prototype.checkboxPosition;\n/**\n * Emitted when the option is focused.\n * @type {?}\n */\nMdListOption.prototype.onFocus;\n/**\n * Emitted when the option is selected.\n * @type {?}\n */\nMdListOption.prototype.selectChange;\n/**\n * Emitted when the option is deselected.\n * @type {?}\n */\nMdListOption.prototype.deselected;\n/**\n * Emitted when the option is destroyed.\n * @type {?}\n */\nMdListOption.prototype.destroyed;\n/** @type {?} */\nMdListOption.prototype._renderer;\n/** @type {?} */\nMdListOption.prototype._element;\n/** @type {?} */\nMdListOption.prototype._changeDetector;\n/** @type {?} */\nMdListOption.prototype.selectionList;\n}\n\nexport class MdSelectionList extends _MdSelectionListMixinBase\n  implements FocusableOption, CanDisable, AfterContentInit, OnDestroy {\nprivate _disableRipple: boolean = false;\n/**\n * Tab index for the selection-list.\n */\n_tabIndex = 0;\n/**\n * Subscription to all list options' onFocus events\n */\nprivate _optionFocusSubscription: Subscription;\n/**\n * Subscription to all list options' destroy events\n */\nprivate _optionDestroyStream: Subscription;\n/**\n * The FocusKeyManager which handles focus.\n */\n_keyManager: FocusKeyManager<MdListOption>;\n/**\n * The option components contained within this selection-list.\n */\noptions: QueryList<MdListOption>;\n/**\n * options which are selected.\n */\nselectedOptions: SelectionModel<MdListOption> = new SelectionModel<MdListOption>(true);\n/**\n * Whether the ripple effect should be disabled on the list-items or not.\n * This flag only has an effect for `mat-selection-list` components.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) { this._disableRipple = coerceBooleanProperty(value); }\n/**\n * @param {?} _element\n */\nconstructor(private _element: ElementRef) {\n    super();\n  }\n/**\n * @return {?}\n */\nngAfterContentInit(): void {\n    this._keyManager = new FocusKeyManager<MdListOption>(this.options).withWrap();\n\n    if (this.disabled) {\n      this._tabIndex = -1;\n    }\n\n    this._optionFocusSubscription = this._onFocusSubscription();\n    this._optionDestroyStream = this._onDestroySubscription();\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    if (this._optionDestroyStream) {\n      this._optionDestroyStream.unsubscribe();\n    }\n\n    if (this._optionFocusSubscription) {\n      this._optionFocusSubscription.unsubscribe();\n    }\n  }\n/**\n * @return {?}\n */\nfocus() {\n    this._element.nativeElement.focus();\n  }\n/**\n * Map all the options' destroy event subscriptions and merge them into one stream.\n * @return {?}\n */\nprivate _onDestroySubscription(): Subscription {\n    return RxChain.from(this.options.changes)\n      .call(startWith, this.options)\n      .call(switchMap, (options: MdListOption[]) => {\n        return merge(...options.map(option => option.destroyed));\n      }).subscribe((e: MdSelectionListOptionEvent) => {\n        let /** @type {?} */ optionIndex: number = this.options.toArray().indexOf(e.option);\n        if (e.option._hasFocus) {\n          // Check whether the option is the last item\n          if (optionIndex < this.options.length - 1) {\n            this._keyManager.setActiveItem(optionIndex);\n          } else if (optionIndex - 1 >= 0) {\n            this._keyManager.setActiveItem(optionIndex - 1);\n          }\n        }\n        e.option.destroyed.unsubscribe();\n      });\n  }\n/**\n * Map all the options' onFocus event subscriptions and merge them into one stream.\n * @return {?}\n */\nprivate _onFocusSubscription(): Subscription {\n    return RxChain.from(this.options.changes)\n      .call(startWith, this.options)\n      .call(switchMap, (options: MdListOption[]) => {\n        return merge(...options.map(option => option.onFocus));\n      }).subscribe((e: MdSelectionListOptionEvent) => {\n      let /** @type {?} */ optionIndex: number = this.options.toArray().indexOf(e.option);\n      this._keyManager.updateActiveItemIndex(optionIndex);\n    });\n  }\n/**\n * Passes relevant key presses to our key manager.\n * @param {?} event\n * @return {?}\n */\n_keydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case SPACE:\n        this._toggleSelectOnFocusedOption();\n        // Always prevent space from scrolling the page since the list has focus\n        event.preventDefault();\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n/**\n * Toggles the selected state of the currently focused option.\n * @return {?}\n */\nprivate _toggleSelectOnFocusedOption(): void {\n    let /** @type {?} */ focusedIndex = this._keyManager.activeItemIndex;\n\n    if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n      let /** @type {?} */ focusedOption: MdListOption = this.options.toArray()[focusedIndex];\n\n      if (focusedOption) {\n        focusedOption.toggle();\n      }\n    }\n  }\n/**\n * Utility to ensure all indexes are valid.\n * \n * @param {?} index The index to be checked.\n * @return {?} True if the index is valid for our list of options.\n */\nprivate _isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.options.length;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-selection-list, mat-selection-list',\n  inputs: ['disabled'],\n  host: {\n    'role': 'listbox',\n    '[attr.tabindex]': '_tabIndex',\n    'class': 'mat-selection-list',\n    '(focus)': 'focus()',\n    '(keydown)': '_keydown($event)',\n    '[attr.aria-disabled]': 'disabled.toString()'},\n  template: '<ng-content></ng-content>',\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'options': [{ type: ContentChildren, args: [MdListOption, ] },],\n'disableRipple': [{ type: Input },],\n};\n}\n\nfunction MdSelectionList_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectionList.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelectionList.ctorParameters;\n/** @type {?} */\nMdSelectionList.propDecorators;\n/** @type {?} */\nMdSelectionList.prototype._disableRipple;\n/**\n * Tab index for the selection-list.\n * @type {?}\n */\nMdSelectionList.prototype._tabIndex;\n/**\n * Subscription to all list options' onFocus events\n * @type {?}\n */\nMdSelectionList.prototype._optionFocusSubscription;\n/**\n * Subscription to all list options' destroy events\n * @type {?}\n */\nMdSelectionList.prototype._optionDestroyStream;\n/**\n * The FocusKeyManager which handles focus.\n * @type {?}\n */\nMdSelectionList.prototype._keyManager;\n/**\n * The option components contained within this selection-list.\n * @type {?}\n */\nMdSelectionList.prototype.options;\n/**\n * options which are selected.\n * @type {?}\n */\nMdSelectionList.prototype.selectedOptions;\n/** @type {?} */\nMdSelectionList.prototype._element;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Optional,\n  QueryList,\n  Renderer2,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport {MdLine, MdLineSetter} from '../core';\nimport {CanDisableRipple, mixinDisableRipple} from '../core/common-behaviors/disable-ripple';\n/**\n * \\@docs-private\n */\nexport class MdListBase {}\nexport const /** @type {?} */ _MdListMixinBase = mixinDisableRipple(MdListBase);\n/**\n * \\@docs-private\n */\nexport class MdListItemBase {}\nexport const /** @type {?} */ _MdListItemMixinBase = mixinDisableRipple(MdListItemBase);\nexport class MdListDivider {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-divider, mat-divider',\n  host: {\n    'role': 'separator',\n    'aria-orientation': 'horizontal'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdListDivider_tsickle_Closure_declarations() {\n/** @type {?} */\nMdListDivider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdListDivider.ctorParameters;\n}\n\nexport class MdList extends _MdListMixinBase implements CanDisableRipple {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-list, mat-list, md-nav-list, mat-nav-list',\n  host: {'role': 'list'},\n  template: '<ng-content></ng-content>',\n  styleUrls: ['list.css'],\n  inputs: ['disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdList_tsickle_Closure_declarations() {\n/** @type {?} */\nMdList.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdList.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdListCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-list, mat-list',\n  host: {'class': 'mat-list'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdListCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdListCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdListCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdNavListCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-nav-list, mat-nav-list',\n  host: {'class': 'mat-nav-list'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdNavListCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdNavListCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdNavListCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdDividerCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-divider, mat-divider',\n  host: {'class': 'mat-divider'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdDividerCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDividerCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDividerCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdListAvatarCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-list-avatar], [mat-list-avatar], [mdListAvatar], [matListAvatar]',\n  host: {'class': 'mat-list-avatar'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdListAvatarCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdListAvatarCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdListAvatarCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdListIconCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-list-icon], [mat-list-icon], [mdListIcon], [matListIcon]',\n  host: {'class': 'mat-list-icon'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdListIconCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdListIconCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdListIconCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdListSubheaderCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-subheader], [mat-subheader], [mdSubheader], [matSubheader]',\n  host: {'class': 'mat-subheader'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdListSubheaderCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdListSubheaderCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdListSubheaderCssMatStyler.ctorParameters;\n}\n\nexport class MdListItem extends _MdListItemMixinBase implements AfterContentInit, CanDisableRipple {\nprivate _lineSetter: MdLineSetter;\nprivate _isNavList: boolean = false;\n\n   _lines: QueryList<MdLine>;\n/**\n * @param {?} avatar\n * @return {?}\n */\nset _hasAvatar(avatar: MdListAvatarCssMatStyler) {\n    if (avatar != null) {\n      this._renderer.addClass(this._element.nativeElement, 'mat-list-item-avatar');\n    } else {\n      this._renderer.removeClass(this._element.nativeElement, 'mat-list-item-avatar');\n    }\n  }\n/**\n * @param {?} _renderer\n * @param {?} _element\n * @param {?} _list\n * @param {?} navList\n */\nconstructor(private _renderer: Renderer2,\nprivate _element: ElementRef,\nprivate _list: MdList,\n               navList: MdNavListCssMatStyler) {\n    super();\n    this._isNavList = !!navList;\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n  }\n/**\n * Whether this list item should show a ripple effect when clicked.\n * @return {?}\n */\nisRippleEnabled() {\n    return !this.disableRipple && this._isNavList && !this._list.disableRipple;\n  }\n/**\n * @return {?}\n */\n_handleFocus() {\n    this._renderer.addClass(this._element.nativeElement, 'mat-list-item-focus');\n  }\n/**\n * @return {?}\n */\n_handleBlur() {\n    this._renderer.removeClass(this._element.nativeElement, 'mat-list-item-focus');\n  }\n/**\n * Retrieves the DOM element of the component host.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-list-item, mat-list-item, a[md-list-item], a[mat-list-item]',\n  host: {\n    'role': 'listitem',\n    'class': 'mat-list-item',\n    '(focus)': '_handleFocus()',\n    '(blur)': '_handleBlur()',\n  },\n  inputs: ['disableRipple'],\n  templateUrl: 'list-item.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: MdList, decorators: [{ type: Optional }, ]},\n{type: MdNavListCssMatStyler, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_lines': [{ type: ContentChildren, args: [MdLine, ] },],\n'_hasAvatar': [{ type: ContentChild, args: [MdListAvatarCssMatStyler, ] },],\n};\n}\n\nfunction MdListItem_tsickle_Closure_declarations() {\n/** @type {?} */\nMdListItem.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdListItem.ctorParameters;\n/** @type {?} */\nMdListItem.propDecorators;\n/** @type {?} */\nMdListItem.prototype._lineSetter;\n/** @type {?} */\nMdListItem.prototype._isNavList;\n/** @type {?} */\nMdListItem.prototype._lines;\n/** @type {?} */\nMdListItem.prototype._renderer;\n/** @type {?} */\nMdListItem.prototype._element;\n/** @type {?} */\nMdListItem.prototype._list;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MdCommonModule} from '../core';\nimport {MdDrawer, MdDrawerContainer} from './drawer';\nimport {MdSidenav, MdSidenavContainer} from './sidenav';\nexport class MdSidenavModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, MdCommonModule, A11yModule, OverlayModule],\n  exports: [MdDrawerContainer, MdDrawer, MdSidenavContainer, MdSidenav, MdCommonModule],\n  declarations: [MdDrawerContainer, MdDrawer, MdSidenavContainer, MdSidenav],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSidenavModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSidenavModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSidenavModule.ctorParameters;\n}\n\n\n\nexport {throwMdDuplicatedDrawerError,MdDrawerToggleResult,MdDrawer,MdDrawerContainer} from './drawer';\nexport {MdSidenav,MdSidenavContainer} from './sidenav';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport {MdDrawer, MdDrawerContainer} from './drawer';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nexport class MdSidenav extends MdDrawer {static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-sidenav, mat-sidenav',\n  templateUrl: 'drawer.html',\n  animations: [\n    trigger('transform', [\n      state('open, open-instant', style({\n        transform: 'translate3d(0, 0, 0)',\n        visibility: 'visible',\n      })),\n      state('void', style({\n        visibility: 'hidden',\n      })),\n      transition('void => open-instant', animate('0ms')),\n      transition('void <=> open, open-instant => void',\n        animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n  ],\n  host: {\n    'class': 'mat-drawer mat-sidenav',\n    '[@transform]': '_animationState',\n    '(@transform.start)': '_onAnimationStart()',\n    '(@transform.done)': '_onAnimationEnd($event)',\n    '(keydown)': 'handleKeydown($event)',\n    // must prevent the browser from aligning text based on value\n    '[attr.align]': 'null',\n    '[class.mat-drawer-end]': 'position === \"end\"',\n    '[class.mat-drawer-over]': 'mode === \"over\"',\n    '[class.mat-drawer-push]': 'mode === \"push\"',\n    '[class.mat-drawer-side]': 'mode === \"side\"',\n    'tabIndex': '-1',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSidenav_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSidenav.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSidenav.ctorParameters;\n}\n\nexport class MdSidenavContainer extends MdDrawerContainer {\n   _drawers;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-sidenav-container, mat-sidenav-container',\n  templateUrl: 'drawer-container.html',\n  styleUrls: [\n    'drawer.css',\n    'drawer-transitions.css',\n  ],\n  host: {\n    'class': 'mat-drawer-container mat-sidenav-container',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_drawers': [{ type: ContentChildren, args: [MdSidenav, ] },],\n};\n}\n\nfunction MdSidenavContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSidenavContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSidenavContainer.ctorParameters;\n/** @type {?} */\nMdSidenavContainer.propDecorators;\n/** @type {?} */\nMdSidenavContainer.prototype._drawers;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Input,\n  Optional,\n  Output,\n  QueryList,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  Renderer2,\n  ViewEncapsulation,\n  NgZone,\n  OnDestroy,\n  Inject,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {animate, state, style, transition, trigger, AnimationEvent} from '@angular/animations';\nimport {Directionality, coerceBooleanProperty} from '../core';\nimport {FocusTrapFactory, FocusTrap} from '../core/a11y/focus-trap';\nimport {ESCAPE} from '../core/keyboard/keycodes';\nimport {first, takeUntil, startWith} from '../core/rxjs/index';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {merge} from 'rxjs/observable/merge';\n/**\n * Throws an exception when two MdDrawer are matching the same position.\n * @param {?} position\n * @return {?}\n */\nexport function throwMdDuplicatedDrawerError(position: string) {\n  throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/**\n * Drawer toggle promise result.\n * @deprecated\n */\nexport class MdDrawerToggleResult {\n/**\n * @param {?} type\n * @param {?} animationFinished\n */\nconstructor(public type: 'open' | 'close',\npublic animationFinished: boolean) {}\n}\n\nfunction MdDrawerToggleResult_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDrawerToggleResult.prototype.type;\n/** @type {?} */\nMdDrawerToggleResult.prototype.animationFinished;\n}\n\n/**\n * <md-drawer> component.\n * \n * This component corresponds to a drawer that can be opened on the drawer container.\n * \n * Please refer to README.md for examples on how to use it.\n */\nexport class MdDrawer implements AfterContentInit, OnDestroy {\nprivate _focusTrap: FocusTrap;\nprivate _elementFocusedBeforeDrawerWasOpened: HTMLElement | null = null;\n/**\n * Whether the drawer is initialized. Used for disabling the initial animation.\n */\nprivate _enableAnimations = false;\n/**\n * The side that the drawer is attached to.\n * @return {?}\n */\nget position() { return this._position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset position(value) {\n    // Make sure we have a valid value.\n    value = value === 'end' ? 'end' : 'start';\n    if (value != this._position) {\n      this._position = value;\n      this.onAlignChanged.emit();\n      this.onPositionChanged.emit();\n    }\n  }\nprivate _position: 'start' | 'end' = 'start';\n/**\n * @deprecated\n * @return {?}\n */\nget align() { return this.position; }\n/**\n * @param {?} value\n * @return {?}\n */\nset align(value) { this.position = value; }\n/**\n * Mode of the drawer; one of 'over', 'push' or 'side'.\n */\nmode: 'over' | 'push' | 'side' = 'over';\n/**\n * Whether the drawer can be closed with the escape key or not.\n * @return {?}\n */\nget disableClose(): boolean { return this._disableClose; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableClose(value: boolean) { this._disableClose = coerceBooleanProperty(value); }\nprivate _disableClose: boolean = false;\n/**\n * Whether the drawer is opened.\n */\nprivate _opened: boolean = false;\n/**\n * Emits whenever the drawer has started animating.\n */\n_animationStarted = new EventEmitter<void>();\n/**\n * Whether the drawer is animating. Used to prevent overlapping animations.\n */\n_isAnimating = false;\n/**\n * Current state of the sidenav animation.\n */\n_animationState: 'open-instant' | 'open' | 'void' = 'void';\n/**\n * Promise that resolves when the open/close animation completes. It is here for backwards\n * compatibility and should be removed next time we do drawer breaking changes.\n * @deprecated\n */\nprivate _currentTogglePromise: Promise<MdDrawerToggleResult> | null;\n/**\n * Event emitted when the drawer is fully opened.\n */\nonOpen = new EventEmitter<MdDrawerToggleResult | void>();\n/**\n * Event emitted when the drawer is fully closed.\n */\nonClose = new EventEmitter<MdDrawerToggleResult | void>();\n/**\n * Event emitted when the drawer's position changes.\n */\nonPositionChanged = new EventEmitter<void>();\n/**\n * @deprecated\n */\nonAlignChanged = new EventEmitter<void>();\n/**\n * @return {?}\n */\nget isFocusTrapEnabled() {\n    // The focus trap is only enabled when the drawer is open in any mode other than side.\n    return this.opened && this.mode !== 'side';\n  }\n/**\n * @param {?} _elementRef\n * @param {?} _focusTrapFactory\n * @param {?} _doc\n */\nconstructor(private _elementRef: ElementRef,\nprivate _focusTrapFactory: FocusTrapFactory,\nprivate _doc: any) {\n    this.onOpen.subscribe(() => {\n      if (this._doc) {\n        this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement as HTMLElement;\n      }\n\n      if (this.isFocusTrapEnabled && this._focusTrap) {\n        this._focusTrap.focusInitialElementWhenReady();\n      }\n    });\n\n    this.onClose.subscribe(() => this._restoreFocus());\n  }\n/**\n * If focus is currently inside the drawer, restores it to where it was before the drawer\n * opened.\n * @return {?}\n */\nprivate _restoreFocus() {\n    let /** @type {?} */ activeEl = this._doc && this._doc.activeElement;\n    if (activeEl && this._elementRef.nativeElement.contains(activeEl)) {\n      if (this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement) {\n        this._elementFocusedBeforeDrawerWasOpened.focus();\n      } else {\n        this._elementRef.nativeElement.blur();\n      }\n    }\n\n    this._elementFocusedBeforeDrawerWasOpened = null;\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    this._focusTrap.enabled = this.isFocusTrapEnabled;\n    this._enableAnimations = true;\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n/**\n * Whether the drawer is opened. We overload this because we trigger an event when it\n * starts or end.\n * @return {?}\n */\nget opened(): boolean { return this._opened; }\n/**\n * @param {?} v\n * @return {?}\n */\nset opened(v: boolean) {\n    this.toggle(coerceBooleanProperty(v));\n  }\n/**\n * Open the drawer.\n * @return {?}\n */\nopen(): Promise<MdDrawerToggleResult> {\n    return this.toggle(true);\n  }\n/**\n * Close the drawer.\n * @return {?}\n */\nclose(): Promise<MdDrawerToggleResult> {\n    return this.toggle(false);\n  }\n/**\n * Toggle this drawer.\n * @param {?=} isOpen Whether the drawer should be open.\n * @return {?}\n */\ntoggle(isOpen: boolean = !this.opened): Promise<MdDrawerToggleResult> {\n    if (!this._isAnimating) {\n      this._opened = isOpen;\n\n      if (isOpen) {\n        this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n      } else {\n        this._animationState = 'void';\n      }\n\n      this._currentTogglePromise = new Promise(resolve => {\n        first.call(isOpen ? this.onOpen : this.onClose).subscribe(resolve);\n      });\n\n      if (this._focusTrap) {\n        this._focusTrap.enabled = this.isFocusTrapEnabled;\n      }\n    }\n\n    // TODO(crisbeto): This promise is here for backwards-compatibility.\n    // It should be removed next time we do breaking changes in the drawer.\n    return /** @type {?} */(( this._currentTogglePromise));\n  }\n/**\n * Handles the keyboard events.\n * \\@docs-private\n * @param {?} event\n * @return {?}\n */\nhandleKeydown(event: KeyboardEvent) {\n    if (event.keyCode === ESCAPE && !this.disableClose) {\n      this.close();\n      event.stopPropagation();\n    }\n  }\n/**\n * @return {?}\n */\n_onAnimationStart() {\n    this._isAnimating = true;\n    this._animationStarted.emit();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onAnimationEnd(event: AnimationEvent) {\n    const {fromState, toState} = event;\n\n    if (toState === 'open' && fromState === 'void') {\n      this.onOpen.emit(new MdDrawerToggleResult('open', true));\n    } else if (toState === 'void' && fromState === 'open') {\n      this.onClose.emit(new MdDrawerToggleResult('close', true));\n    }\n\n    // Note: as of Angular 4.3, the animations module seems to fire the `start` callback before\n    // the end if animations are disabled. Make this call async to ensure that it still fires\n    // at the appropriate time.\n    Promise.resolve().then(() => {\n      this._isAnimating = false;\n      this._currentTogglePromise = null;\n    });\n  }\n/**\n * @return {?}\n */\nget _width() {\n    return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-drawer, mat-drawer',\n  templateUrl: 'drawer.html',\n  animations: [\n    trigger('transform', [\n      state('open, open-instant', style({\n        transform: 'translate3d(0, 0, 0)',\n        visibility: 'visible',\n      })),\n      state('void', style({\n        visibility: 'hidden',\n      })),\n      transition('void => open-instant', animate('0ms')),\n      transition('void <=> open, open-instant => void',\n          animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n  ],\n  host: {\n    'class': 'mat-drawer',\n    '[@transform]': '_animationState',\n    '(@transform.start)': '_onAnimationStart()',\n    '(@transform.done)': '_onAnimationEnd($event)',\n    '(keydown)': 'handleKeydown($event)',\n    // must prevent the browser from aligning text based on value\n    '[attr.align]': 'null',\n    '[class.mat-drawer-end]': 'position === \"end\"',\n    '[class.mat-drawer-over]': 'mode === \"over\"',\n    '[class.mat-drawer-push]': 'mode === \"push\"',\n    '[class.mat-drawer-side]': 'mode === \"side\"',\n    'tabIndex': '-1',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: FocusTrapFactory, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'position': [{ type: Input },],\n'align': [{ type: Input },],\n'mode': [{ type: Input },],\n'disableClose': [{ type: Input },],\n'onOpen': [{ type: Output, args: ['open', ] },],\n'onClose': [{ type: Output, args: ['close', ] },],\n'onPositionChanged': [{ type: Output, args: ['positionChanged', ] },],\n'onAlignChanged': [{ type: Output, args: ['align-changed', ] },],\n'opened': [{ type: Input },],\n};\n}\n\nfunction MdDrawer_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDrawer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDrawer.ctorParameters;\n/** @type {?} */\nMdDrawer.propDecorators;\n/** @type {?} */\nMdDrawer.prototype._focusTrap;\n/** @type {?} */\nMdDrawer.prototype._elementFocusedBeforeDrawerWasOpened;\n/**\n * Whether the drawer is initialized. Used for disabling the initial animation.\n * @type {?}\n */\nMdDrawer.prototype._enableAnimations;\n/** @type {?} */\nMdDrawer.prototype._position;\n/**\n * Mode of the drawer; one of 'over', 'push' or 'side'.\n * @type {?}\n */\nMdDrawer.prototype.mode;\n/** @type {?} */\nMdDrawer.prototype._disableClose;\n/**\n * Whether the drawer is opened.\n * @type {?}\n */\nMdDrawer.prototype._opened;\n/**\n * Emits whenever the drawer has started animating.\n * @type {?}\n */\nMdDrawer.prototype._animationStarted;\n/**\n * Whether the drawer is animating. Used to prevent overlapping animations.\n * @type {?}\n */\nMdDrawer.prototype._isAnimating;\n/**\n * Current state of the sidenav animation.\n * @type {?}\n */\nMdDrawer.prototype._animationState;\n/**\n * Promise that resolves when the open/close animation completes. It is here for backwards\n * compatibility and should be removed next time we do drawer breaking changes.\n * @deprecated\n * @type {?}\n */\nMdDrawer.prototype._currentTogglePromise;\n/**\n * Event emitted when the drawer is fully opened.\n * @type {?}\n */\nMdDrawer.prototype.onOpen;\n/**\n * Event emitted when the drawer is fully closed.\n * @type {?}\n */\nMdDrawer.prototype.onClose;\n/**\n * Event emitted when the drawer's position changes.\n * @type {?}\n */\nMdDrawer.prototype.onPositionChanged;\n/**\n * @deprecated\n * @type {?}\n */\nMdDrawer.prototype.onAlignChanged;\n/** @type {?} */\nMdDrawer.prototype._elementRef;\n/** @type {?} */\nMdDrawer.prototype._focusTrapFactory;\n/** @type {?} */\nMdDrawer.prototype._doc;\n}\n\n/**\n * <md-drawer-container> component.\n * \n * This is the parent component to one or two <md-drawer>s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nexport class MdDrawerContainer implements AfterContentInit {\n   _drawers: QueryList<MdDrawer>;\n/**\n * The drawer child with the `start` position.\n * @return {?}\n */\nget start() { return this._start; }\n/**\n * The drawer child with the `end` position.\n * @return {?}\n */\nget end() { return this._end; }\n/**\n * Event emitted when the drawer backdrop is clicked.\n */\nbackdropClick = new EventEmitter<void>();\n/**\n * The drawer at the start/end position, independent of direction.\n */\nprivate _start: MdDrawer | null;\nprivate _end: MdDrawer | null;\n/**\n * The drawer at the left/right. When direction changes, these will change as well.\n * They're used as aliases for the above to set the left/right style properly.\n * In LTR, _left == _start and _right == _end.\n * In RTL, _left == _end and _right == _start.\n */\nprivate _left: MdDrawer | null;\nprivate _right: MdDrawer | null;\n/**\n * Inline styles to be applied to the container.\n */\n_styles: { marginLeft: string; marginRight: string; transform: string; };\n/**\n * @param {?} _dir\n * @param {?} _element\n * @param {?} _renderer\n * @param {?} _ngZone\n * @param {?} _changeDetectorRef\n */\nconstructor(\nprivate _dir: Directionality,\nprivate _element: ElementRef,\nprivate _renderer: Renderer2,\nprivate _ngZone: NgZone,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    // If a `Dir` directive exists up the tree, listen direction changes and update the left/right\n    // properties to point to the proper start/end.\n    if (_dir != null) {\n      _dir.change.subscribe(() => this._validateDrawers());\n    }\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    startWith.call(this._drawers.changes, null).subscribe(() => {\n      this._validateDrawers();\n      this._drawers.forEach((drawer: MdDrawer) => {\n        this._watchDrawerToggle(drawer);\n        this._watchDrawerPosition(drawer);\n      });\n    });\n  }\n/**\n * Calls `open` of both start and end drawers\n * @return {?}\n */\nopen(): void {\n    this._drawers.forEach(drawer => drawer.open());\n  }\n/**\n * Calls `close` of both start and end drawers\n * @return {?}\n */\nclose(): void {\n    this._drawers.forEach(drawer => drawer.close());\n  }\n/**\n * Subscribes to drawer events in order to set a class on the main container element when the\n * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n * is properly hidden.\n * @param {?} drawer\n * @return {?}\n */\nprivate _watchDrawerToggle(drawer: MdDrawer): void {\n    takeUntil.call(drawer._animationStarted, this._drawers.changes).subscribe(() => {\n      // Set the transition class on the container so that the animations occur. This should not\n      // be set initially because animations should only be triggered via a change in state.\n      this._renderer.addClass(this._element.nativeElement, 'mat-drawer-transition');\n      this._updateStyles();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (drawer.mode !== 'side') {\n      takeUntil.call(merge(drawer.onOpen, drawer.onClose), this._drawers.changes).subscribe(() =>\n          this._setContainerClass(drawer.opened));\n    }\n  }\n/**\n * Subscribes to drawer onPositionChanged event in order to re-validate drawers when the position\n * changes.\n * @param {?} drawer\n * @return {?}\n */\nprivate _watchDrawerPosition(drawer: MdDrawer): void {\n    if (!drawer) {\n      return;\n    }\n    // NOTE: We need to wait for the microtask queue to be empty before validating,\n    // since both drawers may be swapping positions at the same time.\n    takeUntil.call(drawer.onPositionChanged, this._drawers.changes).subscribe(() =>\n        first.call(this._ngZone.onMicrotaskEmpty).subscribe(() => this._validateDrawers()));\n  }\n/**\n * Toggles the 'mat-drawer-opened' class on the main 'md-drawer-container' element.\n * @param {?} isAdd\n * @return {?}\n */\nprivate _setContainerClass(isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(this._element.nativeElement, 'mat-drawer-opened');\n    } else {\n      this._renderer.removeClass(this._element.nativeElement, 'mat-drawer-opened');\n    }\n  }\n/**\n * Validate the state of the drawer children components.\n * @return {?}\n */\nprivate _validateDrawers() {\n    this._start = this._end = null;\n\n    // Ensure that we have at most one start and one end drawer.\n    this._drawers.forEach(drawer => {\n      if (drawer.position == 'end') {\n        if (this._end != null) {\n          throwMdDuplicatedDrawerError('end');\n        }\n        this._end = drawer;\n      } else {\n        if (this._start != null) {\n          throwMdDuplicatedDrawerError('start');\n        }\n        this._start = drawer;\n      }\n    });\n\n    this._right = this._left = null;\n\n    // Detect if we're LTR or RTL.\n    if (this._dir == null || this._dir.value == 'ltr') {\n      this._left = this._start;\n      this._right = this._end;\n    } else {\n      this._left = this._end;\n      this._right = this._start;\n    }\n  }\n/**\n * @return {?}\n */\n_onBackdropClicked() {\n    this.backdropClick.emit();\n    this._closeModalDrawer();\n  }\n/**\n * @return {?}\n */\n_closeModalDrawer() {\n    // Close all open drawers where closing is not disabled and the mode is not `side`.\n    [this._start, this._end]\n      .filter(drawer => drawer && !drawer.disableClose && drawer.mode !== 'side')\n      .forEach(drawer => /** @type {?} */(( drawer)).close());\n  }\n/**\n * @return {?}\n */\n_isShowingBackdrop(): boolean {\n    return (this._isDrawerOpen(this._start) && /** @type {?} */(( this._start)).mode != 'side')\n        || (this._isDrawerOpen(this._end) && /** @type {?} */(( this._end)).mode != 'side');\n  }\n/**\n * @param {?} drawer\n * @return {?}\n */\nprivate _isDrawerOpen(drawer: MdDrawer | null): boolean {\n    return drawer != null && drawer.opened;\n  }\n/**\n * Return the width of the drawer, if it's in the proper mode and opened.\n * This may relayout the view, so do not call this often.\n * @param {?} drawer\n * @param {?} mode\n * @return {?}\n */\nprivate _getDrawerEffectiveWidth(drawer: MdDrawer, mode: string): number {\n    return (this._isDrawerOpen(drawer) && drawer.mode == mode) ? drawer._width : 0;\n  }\n/**\n * Recalculates and updates the inline styles. Note that this\n * should be used sparingly, because it causes a reflow.\n * @return {?}\n */\nprivate _updateStyles() {\n    const /** @type {?} */ marginLeft = this._left ? this._getDrawerEffectiveWidth(this._left, 'side') : 0;\n    const /** @type {?} */ marginRight = this._right ? this._getDrawerEffectiveWidth(this._right, 'side') : 0;\n    const /** @type {?} */ leftWidth = this._left ? this._getDrawerEffectiveWidth(this._left, 'push') : 0;\n    const /** @type {?} */ rightWidth = this._right ? this._getDrawerEffectiveWidth(this._right, 'push') : 0;\n\n    this._styles = {\n      marginLeft: `${marginLeft}px`,\n      marginRight: `${marginRight}px`,\n      transform: `translate3d(${leftWidth - rightWidth}px, 0, 0)`\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-drawer-container, mat-drawer-container',\n  templateUrl: 'drawer-container.html',\n  styleUrls: [\n    'drawer.css',\n    'drawer-transitions.css',\n  ],\n  host: {\n    'class': 'mat-drawer-container',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: ElementRef, },\n{type: Renderer2, },\n{type: NgZone, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_drawers': [{ type: ContentChildren, args: [MdDrawer, ] },],\n'backdropClick': [{ type: Output },],\n};\n}\n\nfunction MdDrawerContainer_tsickle_Closure_declarations() {\n/** @type {?} */\nMdDrawerContainer.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdDrawerContainer.ctorParameters;\n/** @type {?} */\nMdDrawerContainer.propDecorators;\n/** @type {?} */\nMdDrawerContainer.prototype._drawers;\n/**\n * Event emitted when the drawer backdrop is clicked.\n * @type {?}\n */\nMdDrawerContainer.prototype.backdropClick;\n/**\n * The drawer at the start/end position, independent of direction.\n * @type {?}\n */\nMdDrawerContainer.prototype._start;\n/** @type {?} */\nMdDrawerContainer.prototype._end;\n/**\n * The drawer at the left/right. When direction changes, these will change as well.\n * They're used as aliases for the above to set the left/right style properly.\n * In LTR, _left == _start and _right == _end.\n * In RTL, _left == _end and _right == _start.\n * @type {?}\n */\nMdDrawerContainer.prototype._left;\n/** @type {?} */\nMdDrawerContainer.prototype._right;\n/**\n * Inline styles to be applied to the container.\n * @type {?}\n */\nMdDrawerContainer.prototype._styles;\n/** @type {?} */\nMdDrawerContainer.prototype._dir;\n/** @type {?} */\nMdDrawerContainer.prototype._element;\n/** @type {?} */\nMdDrawerContainer.prototype._renderer;\n/** @type {?} */\nMdDrawerContainer.prototype._ngZone;\n/** @type {?} */\nMdDrawerContainer.prototype._changeDetectorRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {CommonModule} from '@angular/common';\nimport {MdCommonModule, GestureConfig, StyleModule} from '../core';\nimport {MdSlider} from './slider';\nimport {BidiModule} from '../core/bidi/index';\nexport class MdSliderModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, MdCommonModule, StyleModule, BidiModule],\n  exports: [MdSlider, MdCommonModule],\n  declarations: [MdSlider],\n  providers: [{provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSliderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSliderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSliderModule.ctorParameters;\n}\n\n\n\nexport {MD_SLIDER_VALUE_ACCESSOR,MdSliderChange,MdSliderBase,_MdSliderMixinBase,MdSlider} from './slider';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  DOWN_ARROW,\n  END,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {HammerInput} from '../core';\nimport {FocusOrigin, FocusOriginMonitor} from '../core/style/focus-origin-monitor';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/**\n * The thumb gap size for a disabled slider.\n */\nconst DISABLED_THUMB_GAP = 7;\n/**\n * The thumb gap size for a non-active slider at its minimum value.\n */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/**\n * The thumb gap size for an active slider at its minimum value.\n */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows md-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n */\nexport const MD_SLIDER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdSlider),\n  multi: true\n};\n/**\n * A simple change event emitted by the MdSlider component.\n */\nexport class MdSliderChange {\n/**\n * The MdSlider that changed.\n */\nsource: MdSlider;\n/**\n * The new value of the source slider.\n */\nvalue: number | null;\n}\n\nfunction MdSliderChange_tsickle_Closure_declarations() {\n/**\n * The MdSlider that changed.\n * @type {?}\n */\nMdSliderChange.prototype.source;\n/**\n * The new value of the source slider.\n * @type {?}\n */\nMdSliderChange.prototype.value;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdSliderBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdSliderBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSliderBase.prototype._renderer;\n/** @type {?} */\nMdSliderBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdSliderMixinBase = mixinColor(mixinDisabled(MdSliderBase), 'accent');\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nexport class MdSlider extends _MdSliderMixinBase\n    implements ControlValueAccessor, OnDestroy, CanDisable, CanColor {\n/**\n * Whether the slider is inverted.\n * @return {?}\n */\nget invert() { return this._invert; }\n/**\n * @param {?} value\n * @return {?}\n */\nset invert(value: any) {\n    this._invert = coerceBooleanProperty(value);\n  }\nprivate _invert = false;\n/**\n * The maximum value that the slider can have.\n * @return {?}\n */\nget max() { return this._max; }\n/**\n * @param {?} v\n * @return {?}\n */\nset max(v: number) {\n    this._max = coerceNumberProperty(v, this._max);\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\nprivate _max: number = 100;\n/**\n * The minimum value that the slider can have.\n * @return {?}\n */\nget min() { return this._min; }\n/**\n * @param {?} v\n * @return {?}\n */\nset min(v: number) {\n    this._min = coerceNumberProperty(v, this._min);\n\n    // If the value wasn't explicitly set by the user, set it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    this._percent = this._calculatePercentage(this._value);\n\n    // Since this also modifies the percentage, we need to let the change detection know.\n    this._changeDetectorRef.markForCheck();\n  }\nprivate _min: number = 0;\n/**\n * The values at which the thumb will snap.\n * @return {?}\n */\nget step() { return this._step; }\n/**\n * @param {?} v\n * @return {?}\n */\nset step(v) {\n    this._step = coerceNumberProperty(v, this._step);\n\n    if (this._step % 1 !== 0) {\n      this._roundLabelTo = /** @type {?} */(( this._step.toString().split('.').pop())).length;\n    }\n\n    // Since this could modify the label, we need to notify the change detection.\n    this._changeDetectorRef.markForCheck();\n  }\nprivate _step: number = 1;\n/**\n * Whether or not to show the thumb label.\n * @return {?}\n */\nget thumbLabel(): boolean { return this._thumbLabel; }\n/**\n * @param {?} value\n * @return {?}\n */\nset thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\nprivate _thumbLabel: boolean = false;\n/**\n * @deprecated\n * @return {?}\n */\nget _thumbLabelDeprecated(): boolean { return this._thumbLabel; }\n/**\n * @param {?} value\n * @return {?}\n */\nset _thumbLabelDeprecated(value) { this._thumbLabel = value; }\n/**\n * How often to show ticks. Relative to the step so that a tick always appears on a step.\n * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n * @return {?}\n */\nget tickInterval() { return this._tickInterval; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tickInterval(value) {\n    if (value === 'auto') {\n      this._tickInterval = 'auto';\n    } else if (typeof value === 'number' || typeof value === 'string') {\n      this._tickInterval = coerceNumberProperty(value, /** @type {?} */(( this._tickInterval as number)));\n    } else {\n      this._tickInterval = 0;\n    }\n  }\nprivate _tickInterval: 'auto' | number = 0;\n/**\n * @deprecated\n * @return {?}\n */\nget _tickIntervalDeprecated() { return this.tickInterval; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _tickIntervalDeprecated(v) { this.tickInterval = v; }\n/**\n * Value of the slider.\n * @return {?}\n */\nget value() {\n    // If the value needs to be read and it is still uninitialized, initialize it to the min.\n    if (this._value === null) {\n      this.value = this._min;\n    }\n    return this._value;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: number | null) {\n    if (v !== this._value) {\n      this._value = coerceNumberProperty(v, this._value || 0);\n      this._percent = this._calculatePercentage(this._value);\n\n      // Since this also modifies the percentage, we need to let the change detection know.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\nprivate _value: number | null = null;\n/**\n * Whether the slider is vertical.\n * @return {?}\n */\nget vertical() { return this._vertical; }\n/**\n * @param {?} value\n * @return {?}\n */\nset vertical(value: any) {\n    this._vertical = coerceBooleanProperty(value);\n  }\nprivate _vertical = false;\n/**\n * Event emitted when the slider value has changed.\n */\nchange = new EventEmitter<MdSliderChange>();\n/**\n * Event emitted when the slider thumb moves.\n */\ninput = new EventEmitter<MdSliderChange>();\n/**\n * The value to be used for display purposes.\n * @return {?}\n */\nget displayValue(): string | number {\n    // Note that this could be improved further by rounding something like 0.999 to 1 or\n    // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n    // every change detection cycle.\n    if (this._roundLabelTo && this.value && this.value % 1 !== 0) {\n      return this.value.toFixed(this._roundLabelTo);\n    }\n\n    return this.value || 0;\n  }\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n */\nonTouched: () => any = () => {};\n/**\n * The percentage of the slider that coincides with the value.\n * @return {?}\n */\nget percent() { return this._clamp(this._percent); }\nprivate _percent: number = 0;\n/**\n * Whether or not the thumb is sliding.\n * Used to determine if there should be a transition for the thumb and fill track.\n */\n_isSliding: boolean = false;\n/**\n * Whether or not the slider is active (clicked or sliding).\n * Used to shrink and grow the thumb as according to the Material Design spec.\n */\n_isActive: boolean = false;\n/**\n * Whether the axis of the slider is inverted.\n * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n * @return {?}\n */\nget _invertAxis() {\n    // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n    // top. However from a y-axis standpoint this is inverted.\n    return this.vertical ? !this.invert : this.invert;\n  }\n/**\n * Whether the slider is at its minimum value.\n * @return {?}\n */\nget _isMinValue() {\n    return this.percent === 0;\n  }\n/**\n * The amount of space to leave between the slider thumb and the track fill & track background\n * elements.\n * @return {?}\n */\nget _thumbGap() {\n    if (this.disabled) {\n      return DISABLED_THUMB_GAP;\n    }\n    if (this._isMinValue && !this.thumbLabel) {\n      return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n    }\n    return 0;\n  }\n/**\n * CSS styles for the track background element.\n * @return {?}\n */\nget _trackBackgroundStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    let /** @type {?} */ sign = this._invertMouseCoords ? '-' : '';\n    return {\n      'transform': `translate${axis}(${sign}${this._thumbGap}px) scale${axis}(${1 - this.percent})`\n    };\n  }\n/**\n * CSS styles for the track fill element.\n * @return {?}\n */\nget _trackFillStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    let /** @type {?} */ sign = this._invertMouseCoords ? '' : '-';\n    return {\n      'transform': `translate${axis}(${sign}${this._thumbGap}px) scale${axis}(${this.percent})`\n    };\n  }\n/**\n * CSS styles for the ticks container element.\n * @return {?}\n */\nget _ticksContainerStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the ticks container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '' : '-';\n    let /** @type {?} */ offset = this._tickIntervalPercent / 2 * 100;\n    return {\n      'transform': `translate${axis}(${sign}${offset}%)`\n    };\n  }\n/**\n * CSS styles for the ticks element.\n * @return {?}\n */\nget _ticksStyles(): { [key: string]: string } {\n    let /** @type {?} */ tickSize = this._tickIntervalPercent * 100;\n    let /** @type {?} */ backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    // Depending on the direction we pushed the ticks container, push the ticks the opposite\n    // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n    // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n    let /** @type {?} */ sign = !this.vertical && this._direction == 'rtl' ? '-' : '';\n    let /** @type {?} */ rotate = !this.vertical && this._direction == 'rtl' ? ' rotate(180deg)' : '';\n    let /** @type {?} */ styles: { [key: string]: string } = {\n      'backgroundSize': backgroundSize,\n      // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n      'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n    };\n\n    if (this._isMinValue && this._thumbGap) {\n      let /** @type {?} */ side = this.vertical ?\n          (this._invertAxis ? 'Bottom' : 'Top') :\n          (this._invertAxis ? 'Right' : 'Left');\n      styles[`padding${side}`] = `${this._thumbGap}px`;\n    }\n\n    return styles;\n  }\n/**\n * @return {?}\n */\nget _thumbContainerStyles(): { [key: string]: string } {\n    let /** @type {?} */ axis = this.vertical ? 'Y' : 'X';\n    // For a horizontal slider in RTL languages we push the thumb container off the left edge\n    // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n    let /** @type {?} */ invertOffset =\n        (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n    let /** @type {?} */ offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n    return {\n      'transform': `translate${axis}(-${offset}%)`\n    };\n  }\n/**\n * The size of a tick interval as a percentage of the size of the track.\n */\nprivate _tickIntervalPercent: number = 0;\n/**\n * The dimensions of the slider.\n */\nprivate _sliderDimensions: ClientRect | null = null;\nprivate _controlValueAccessorChangeFn: (value: any) => void = () => {};\n/**\n * Decimal places to round to, based on the step amount.\n */\nprivate _roundLabelTo: number;\n/**\n * The value of the slider when the slide start event fires.\n */\nprivate _valueOnSlideStart: number | null;\n/**\n * Reference to the inner slider wrapper element.\n */\nprivate _sliderWrapper: ElementRef;\n/**\n * Whether mouse events should be converted to a slider position by calculating their distance\n * from the right or bottom edge of the slider as opposed to the top or left.\n * @return {?}\n */\nprivate get _invertMouseCoords() {\n    return (this._direction == 'rtl' && !this.vertical) ? !this._invertAxis : this._invertAxis;\n  }\n/**\n * The language direction for this slider element.\n * @return {?}\n */\nprivate get _direction() {\n    return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n  }\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _focusOriginMonitor\n * @param {?} _changeDetectorRef\n * @param {?} _dir\n */\nconstructor(renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _focusOriginMonitor: FocusOriginMonitor,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _dir: Directionality) {\n    super(renderer, elementRef);\n    this._focusOriginMonitor\n        .monitor(this._elementRef.nativeElement, renderer, true)\n        .subscribe((origin: FocusOrigin) => this._isActive = !!origin && origin !== 'keyboard');\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n/**\n * @return {?}\n */\n_onMouseenter() {\n    if (this.disabled) {\n      return;\n    }\n\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onClick(event: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n\n    let /** @type {?} */ oldValue = this.value;\n    this._isSliding = false;\n    this._focusHostElement();\n    this._updateValueFromPosition({x: event.clientX, y: event.clientY});\n\n    /* Emit a change and input event if the value changed. */\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onSlide(event: HammerInput) {\n    if (this.disabled) {\n      return;\n    }\n\n    // The slide start event sometimes fails to fire on iOS, so if we're not already in the sliding\n    // state, call the slide start handler manually.\n    if (!this._isSliding) {\n      this._onSlideStart(null);\n    }\n\n    // Prevent the slide from selecting anything else.\n    event.preventDefault();\n\n    let /** @type {?} */ oldValue = this.value;\n    this._updateValueFromPosition({x: event.center.x, y: event.center.y});\n\n    // Native range elements always emit `input` events when the value changed while sliding.\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onSlideStart(event: HammerInput | null) {\n    if (this.disabled) {\n      return;\n    }\n\n    // Simulate mouseenter in case this is a mobile device.\n    this._onMouseenter();\n\n    this._isSliding = true;\n    this._focusHostElement();\n    this._valueOnSlideStart = this.value;\n\n    if (event) {\n      this._updateValueFromPosition({x: event.center.x, y: event.center.y});\n      event.preventDefault();\n    }\n  }\n/**\n * @return {?}\n */\n_onSlideEnd() {\n    this._isSliding = false;\n\n    if (this._valueOnSlideStart != this.value) {\n      this._emitChangeEvent();\n    }\n    this._valueOnSlideStart = null;\n  }\n/**\n * @return {?}\n */\n_onFocus() {\n    // We save the dimensions of the slider here so we can use them to update the spacing of the\n    // ticks and determine where on the slider click and slide events happen.\n    this._sliderDimensions = this._getSliderDimensions();\n    this._updateTickIntervalPercent();\n  }\n/**\n * @return {?}\n */\n_onBlur() {\n    this.onTouched();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onKeydown(event: KeyboardEvent) {\n    if (this.disabled) { return; }\n\n    let /** @type {?} */ oldValue = this.value;\n\n    switch (event.keyCode) {\n      case PAGE_UP:\n        this._increment(10);\n        break;\n      case PAGE_DOWN:\n        this._increment(-10);\n        break;\n      case END:\n        this.value = this.max;\n        break;\n      case HOME:\n        this.value = this.min;\n        break;\n      case LEFT_ARROW:\n        // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n        // inverted slider the thumb moves in that direction. However for a blind user, nothing\n        // about the slider indicates that it is inverted. They will expect left to be decrement,\n        // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n        // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n        // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n        // sighted users, therefore we do not swap the meaning.\n        this._increment(this._direction == 'rtl' ? 1 : -1);\n        break;\n      case UP_ARROW:\n        this._increment(1);\n        break;\n      case RIGHT_ARROW:\n        // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n        this._increment(this._direction == 'rtl' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        this._increment(-1);\n        break;\n      default:\n        // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n        // it.\n        return;\n    }\n\n    if (oldValue != this.value) {\n      this._emitInputEvent();\n      this._emitChangeEvent();\n    }\n\n    this._isSliding = true;\n    event.preventDefault();\n  }\n/**\n * @return {?}\n */\n_onKeyup() {\n    this._isSliding = false;\n  }\n/**\n * Increments the slider by the given number of steps (negative number decrements).\n * @param {?} numSteps\n * @return {?}\n */\nprivate _increment(numSteps: number) {\n    this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n  }\n/**\n * Calculate the new value from the new physical location. The value will always be snapped.\n * @param {?} pos\n * @return {?}\n */\nprivate _updateValueFromPosition(pos: {x: number, y: number}) {\n    if (!this._sliderDimensions) {\n      return;\n    }\n\n    let /** @type {?} */ offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n    let /** @type {?} */ size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n    let /** @type {?} */ posComponent = this.vertical ? pos.y : pos.x;\n\n    // The exact value is calculated from the event and used to find the closest snap value.\n    let /** @type {?} */ percent = this._clamp((posComponent - offset) / size);\n    if (this._invertMouseCoords) {\n      percent = 1 - percent;\n    }\n    let /** @type {?} */ exactValue = this._calculateValue(percent);\n\n    // This calculation finds the closest step by finding the closest whole number divisible by the\n    // step relative to the min.\n    let /** @type {?} */ closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n    // The value needs to snap to the min and max.\n    this.value = this._clamp(closestValue, this.min, this.max);\n  }\n/**\n * Emits a change event if the current value is different from the last emitted value.\n * @return {?}\n */\nprivate _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.value);\n    this.change.emit(this._createChangeEvent());\n  }\n/**\n * Emits an input event when the current value is different from the last emitted value.\n * @return {?}\n */\nprivate _emitInputEvent() {\n    this.input.emit(this._createChangeEvent());\n  }\n/**\n * Updates the amount of space between ticks as a percentage of the width of the slider.\n * @return {?}\n */\nprivate _updateTickIntervalPercent() {\n    if (!this.tickInterval || !this._sliderDimensions) {\n      return;\n    }\n\n    if (this.tickInterval == 'auto') {\n      let /** @type {?} */ trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n      let /** @type {?} */ pixelsPerStep = trackSize * this.step / (this.max - this.min);\n      let /** @type {?} */ stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n      let /** @type {?} */ pixelsPerTick = stepsPerTick * this.step;\n      this._tickIntervalPercent = pixelsPerTick / trackSize;\n    } else {\n      this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n    }\n  }\n/**\n * Creates a slider change object from the specified value.\n * @param {?=} value\n * @return {?}\n */\nprivate _createChangeEvent(value = this.value): MdSliderChange {\n    let /** @type {?} */ event = new MdSliderChange();\n\n    event.source = this;\n    event.value = value;\n\n    return event;\n  }\n/**\n * Calculates the percentage of the slider that a value is.\n * @param {?} value\n * @return {?}\n */\nprivate _calculatePercentage(value: number | null) {\n    return ((value || 0) - this.min) / (this.max - this.min);\n  }\n/**\n * Calculates the value a percentage of the slider corresponds to.\n * @param {?} percentage\n * @return {?}\n */\nprivate _calculateValue(percentage: number) {\n    return this.min + percentage * (this.max - this.min);\n  }\n/**\n * Return a number between two numbers.\n * @param {?} value\n * @param {?=} min\n * @param {?=} max\n * @return {?}\n */\nprivate _clamp(value: number, min = 0, max = 1) {\n    return Math.max(min, Math.min(value, max));\n  }\n/**\n * Get the bounding client rect of the slider track element.\n * The track is used rather than the native element to ignore the extra space that the thumb can\n * take up.\n * @return {?}\n */\nprivate _getSliderDimensions() {\n    return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n  }\n/**\n * Focuses the native element.\n * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n * @return {?}\n */\nprivate _focusHostElement() {\n    this._elementRef.nativeElement.focus();\n  }\n/**\n * Sets the model value. Implemented as part of ControlValueAccessor.\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n    this.value = value;\n  }\n/**\n * Registers a callback to eb triggered when the value has changed.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Callback to be registered.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n/**\n * Registers a callback to be triggered when the component is touched.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Callback to be registered.\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n/**\n * Sets whether the component should be disabled.\n * Implemented as part of ControlValueAccessor.\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-slider, mat-slider',\n  providers: [MD_SLIDER_VALUE_ACCESSOR],\n  host: {\n    '(focus)': '_onFocus()',\n    '(blur)': '_onBlur()',\n    '(click)': '_onClick($event)',\n    '(keydown)': '_onKeydown($event)',\n    '(keyup)': '_onKeyup()',\n    '(mouseenter)': '_onMouseenter()',\n    '(slide)': '_onSlide($event)',\n    '(slideend)': '_onSlideEnd()',\n    '(slidestart)': '_onSlideStart($event)',\n    'class': 'mat-slider',\n    'role': 'slider',\n    'tabindex': '0',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-valuemax]': 'max',\n    '[attr.aria-valuemin]': 'min',\n    '[attr.aria-valuenow]': 'value',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-slider-disabled]': 'disabled',\n    '[class.mat-slider-has-ticks]': 'tickInterval',\n    '[class.mat-slider-horizontal]': '!vertical',\n    '[class.mat-slider-axis-inverted]': '_invertAxis',\n    '[class.mat-slider-sliding]': '_isSliding',\n    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n    '[class.mat-slider-vertical]': 'vertical',\n    '[class.mat-slider-min-value]': '_isMinValue',\n    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue && _thumbGap && _invertAxis',\n  },\n  templateUrl: 'slider.html',\n  styleUrls: ['slider.css'],\n  inputs: ['disabled', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: FocusOriginMonitor, },\n{type: ChangeDetectorRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'invert': [{ type: Input },],\n'max': [{ type: Input },],\n'min': [{ type: Input },],\n'step': [{ type: Input },],\n'thumbLabel': [{ type: Input },],\n'_thumbLabelDeprecated': [{ type: Input, args: ['thumb-label', ] },],\n'tickInterval': [{ type: Input },],\n'_tickIntervalDeprecated': [{ type: Input, args: ['tick-interval', ] },],\n'value': [{ type: Input },],\n'vertical': [{ type: Input },],\n'change': [{ type: Output },],\n'input': [{ type: Output },],\n'_sliderWrapper': [{ type: ViewChild, args: ['sliderWrapper', ] },],\n};\n}\n\nfunction MdSlider_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSlider.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSlider.ctorParameters;\n/** @type {?} */\nMdSlider.propDecorators;\n/** @type {?} */\nMdSlider.prototype._invert;\n/** @type {?} */\nMdSlider.prototype._max;\n/** @type {?} */\nMdSlider.prototype._min;\n/** @type {?} */\nMdSlider.prototype._step;\n/** @type {?} */\nMdSlider.prototype._thumbLabel;\n/** @type {?} */\nMdSlider.prototype._tickInterval;\n/** @type {?} */\nMdSlider.prototype._value;\n/** @type {?} */\nMdSlider.prototype._vertical;\n/**\n * Event emitted when the slider value has changed.\n * @type {?}\n */\nMdSlider.prototype.change;\n/**\n * Event emitted when the slider thumb moves.\n * @type {?}\n */\nMdSlider.prototype.input;\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n * @type {?}\n */\nMdSlider.prototype.onTouched;\n/** @type {?} */\nMdSlider.prototype._percent;\n/**\n * Whether or not the thumb is sliding.\n * Used to determine if there should be a transition for the thumb and fill track.\n * @type {?}\n */\nMdSlider.prototype._isSliding;\n/**\n * Whether or not the slider is active (clicked or sliding).\n * Used to shrink and grow the thumb as according to the Material Design spec.\n * @type {?}\n */\nMdSlider.prototype._isActive;\n/**\n * The size of a tick interval as a percentage of the size of the track.\n * @type {?}\n */\nMdSlider.prototype._tickIntervalPercent;\n/**\n * The dimensions of the slider.\n * @type {?}\n */\nMdSlider.prototype._sliderDimensions;\n/** @type {?} */\nMdSlider.prototype._controlValueAccessorChangeFn;\n/**\n * Decimal places to round to, based on the step amount.\n * @type {?}\n */\nMdSlider.prototype._roundLabelTo;\n/**\n * The value of the slider when the slide start event fires.\n * @type {?}\n */\nMdSlider.prototype._valueOnSlideStart;\n/**\n * Reference to the inner slider wrapper element.\n * @type {?}\n */\nMdSlider.prototype._sliderWrapper;\n/** @type {?} */\nMdSlider.prototype._focusOriginMonitor;\n/** @type {?} */\nMdSlider.prototype._changeDetectorRef;\n/** @type {?} */\nMdSlider.prototype._dir;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {HAMMER_GESTURE_CONFIG} from '@angular/platform-browser';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MdSlideToggle} from './slide-toggle';\nimport {\n  FOCUS_ORIGIN_MONITOR_PROVIDER,\n  GestureConfig,\n  MdCommonModule,\n  MdRippleModule,\n} from '../core';\nexport class MdSlideToggleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdRippleModule, MdCommonModule, PlatformModule],\n  exports: [MdSlideToggle, MdCommonModule],\n  declarations: [MdSlideToggle],\n  providers: [\n    FOCUS_ORIGIN_MONITOR_PROVIDER,\n    {provide: HAMMER_GESTURE_CONFIG, useClass: GestureConfig}\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSlideToggleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSlideToggleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSlideToggleModule.ctorParameters;\n}\n\n\n\nexport {MD_SLIDE_TOGGLE_VALUE_ACCESSOR,MdSlideToggleChange,MdSlideToggleBase,_MdSlideToggleMixinBase,MdSlideToggle} from './slide-toggle';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  applyCssTransform,\n  FocusOrigin,\n  FocusOriginMonitor,\n  HammerInput,\n  MdRipple,\n  RippleRef,\n} from '../core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {mixinDisabled, CanDisable} from '../core/common-behaviors/disabled';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nimport {CanDisableRipple, mixinDisableRipple} from '../core/common-behaviors/disable-ripple';\n\n// Increasing integer for generating unique ids for slide-toggle components.\nlet /** @type {?} */ nextUniqueId = 0;\n\nexport const /** @type {?} */ MD_SLIDE_TOGGLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdSlideToggle),\n  multi: true\n};\n/**\n * Change event object emitted by a MdSlideToggle.\n */\nexport class MdSlideToggleChange {\n  source: MdSlideToggle;\n  checked: boolean;\n}\n\nfunction MdSlideToggleChange_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSlideToggleChange.prototype.source;\n/** @type {?} */\nMdSlideToggleChange.prototype.checked;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdSlideToggleBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdSlideToggleBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSlideToggleBase.prototype._renderer;\n/** @type {?} */\nMdSlideToggleBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdSlideToggleMixinBase =\n  mixinColor(mixinDisableRipple(mixinDisabled(MdSlideToggleBase)), 'accent');\n/**\n * Represents a slidable \"switch\" toggle that can be moved between on and off.\n */\nexport class MdSlideToggle extends _MdSlideToggleMixinBase implements OnDestroy, AfterContentInit,\n    ControlValueAccessor, CanDisable, CanColor, CanDisableRipple {\nprivate onChange = (_: any) => {};\nprivate onTouched = () => {};\nprivate _uniqueId: string = `md-slide-toggle-${++nextUniqueId}`;\nprivate _slideRenderer: SlideToggleRenderer;\nprivate _required: boolean = false;\nprivate _checked: boolean = false;\n/**\n * Reference to the focus state ripple.\n */\nprivate _focusRipple: RippleRef | null;\n/**\n * Name value will be applied to the input element if present\n */\nname: string | null = null;\n/**\n * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n */\nid: string = this._uniqueId;\n/**\n * Used to specify the tabIndex value for the underlying input element.\n */\ntabIndex: number = 0;\n/**\n * Whether the label should appear after or before the slide-toggle. Defaults to 'after'\n */\nlabelPosition: 'before' | 'after' = 'after';\n/**\n * Used to set the aria-label attribute on the underlying input element.\n */\nariaLabel: string | null = null;\n/**\n * Used to set the aria-labelledby attribute on the underlying input element.\n */\nariaLabelledby: string | null = null;\n/**\n * Whether the slide-toggle is required.\n * @return {?}\n */\nget required(): boolean { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value) { this._required = coerceBooleanProperty(value); }\n/**\n * Whether the slide-toggle element is checked or not\n * @return {?}\n */\nget checked(): boolean { return this._checked; }\n/**\n * @param {?} value\n * @return {?}\n */\nset checked(value) {\n    this._checked = !!value;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * An event will be dispatched each time the slide-toggle changes its value.\n */\nchange: EventEmitter<MdSlideToggleChange> = new EventEmitter<MdSlideToggleChange>();\n/**\n * Returns the unique id for the visual hidden input.\n * @return {?}\n */\nget inputId(): string { return `${this.id || this._uniqueId}-input`; }\n/**\n * Reference to the underlying input element.\n */\n_inputElement: ElementRef;\n/**\n * Reference to the ripple directive on the thumb container.\n */\n_ripple: MdRipple;\n/**\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} _platform\n * @param {?} _focusOriginMonitor\n * @param {?} _changeDetectorRef\n */\nconstructor(elementRef: ElementRef,\n              renderer: Renderer2,\nprivate _platform: Platform,\nprivate _focusOriginMonitor: FocusOriginMonitor,\nprivate _changeDetectorRef: ChangeDetectorRef) {\n    super(renderer, elementRef);\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._slideRenderer = new SlideToggleRenderer(this._elementRef, this._platform);\n\n    this._focusOriginMonitor\n      .monitor(this._inputElement.nativeElement, this._renderer, false)\n      .subscribe(focusOrigin => this._onInputFocusChange(focusOrigin));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);\n  }\n/**\n * This function will called if the underlying input changed its value through user interaction.\n * @param {?} event\n * @return {?}\n */\n_onChangeEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the component's `change` output.\n    event.stopPropagation();\n\n    // Sync the value from the underlying input element with the slide-toggle component.\n    this.checked = this._inputElement.nativeElement.checked;\n\n    // Emit our custom change event if the native input emitted one.\n    // It is important to only emit it, if the native input triggered one, because we don't want\n    // to trigger a change event, when the `checked` variable changes programmatically.\n    this._emitChangeEvent();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onInputClick(event: Event) {\n    // In some situations the user will release the mouse on the label element. The label element\n    // redirects the click to the underlying input element and will result in a value change.\n    // Prevent the default behavior if dragging, because the value will be set after drag.\n    if (this._slideRenderer.dragging) {\n      event.preventDefault();\n    }\n\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `slide-toggle` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n/**\n * Implemented as part of ControlValueAccessor.\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any): void {\n    this.checked = !!value;\n  }\n/**\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn\n * @return {?}\n */\nregisterOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n/**\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn\n * @return {?}\n */\nregisterOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n/**\n * Implemented as a part of ControlValueAccessor.\n * @param {?} isDisabled\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Focuses the slide-toggle.\n * @return {?}\n */\nfocus() {\n    this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n  }\n/**\n * Toggles the checked state of the slide-toggle.\n * @return {?}\n */\ntoggle() {\n    this.checked = !this.checked;\n  }\n/**\n * Function is called whenever the focus changes for the input element.\n * @param {?} focusOrigin\n * @return {?}\n */\nprivate _onInputFocusChange(focusOrigin: FocusOrigin) {\n    if (!this._focusRipple && focusOrigin === 'keyboard') {\n      // For keyboard focus show a persistent ripple as focus indicator.\n      this._focusRipple = this._ripple.launch(0, 0, {persistent: true, centered: true});\n    } else if (!focusOrigin) {\n      this.onTouched();\n\n      // Fade out and clear the focus ripple if one is currently present.\n      if (this._focusRipple) {\n        this._focusRipple.fadeOut();\n        this._focusRipple = null;\n      }\n    }\n  }\n/**\n * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n * @return {?}\n */\nprivate _emitChangeEvent() {\n    let /** @type {?} */ event = new MdSlideToggleChange();\n    event.source = this;\n    event.checked = this.checked;\n    this.change.emit(event);\n    this.onChange(this.checked);\n  }\n/**\n * @return {?}\n */\n_onDragStart() {\n    if (!this.disabled) {\n      this._slideRenderer.startThumbDrag(this.checked);\n    }\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onDrag(event: HammerInput) {\n    if (this._slideRenderer.dragging) {\n      this._slideRenderer.updateThumbPosition(event.deltaX);\n    }\n  }\n/**\n * @return {?}\n */\n_onDragEnd() {\n    if (this._slideRenderer.dragging) {\n      let /** @type {?} */ _previousChecked = this.checked;\n      this.checked = this._slideRenderer.dragPercentage > 50;\n\n      if (_previousChecked !== this.checked) {\n        this._emitChangeEvent();\n      }\n\n      // The drag should be stopped outside of the current event handler, because otherwise the\n      // click event will be fired before and will revert the drag change.\n      setTimeout(() => this._slideRenderer.stopThumbDrag());\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-slide-toggle, mat-slide-toggle',\n  host: {\n    'class': 'mat-slide-toggle',\n    '[id]': 'id',\n    '[class.mat-checked]': 'checked',\n    '[class.mat-disabled]': 'disabled',\n    '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n  },\n  templateUrl: 'slide-toggle.html',\n  styleUrls: ['slide-toggle.css'],\n  providers: [MD_SLIDE_TOGGLE_VALUE_ACCESSOR],\n  inputs: ['disabled', 'disableRipple', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n{type: Platform, },\n{type: FocusOriginMonitor, },\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input },],\n'id': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'labelPosition': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'required': [{ type: Input },],\n'checked': [{ type: Input },],\n'change': [{ type: Output },],\n'_inputElement': [{ type: ViewChild, args: ['input', ] },],\n'_ripple': [{ type: ViewChild, args: [MdRipple, ] },],\n};\n}\n\nfunction MdSlideToggle_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSlideToggle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSlideToggle.ctorParameters;\n/** @type {?} */\nMdSlideToggle.propDecorators;\n/** @type {?} */\nMdSlideToggle.prototype.onChange;\n/** @type {?} */\nMdSlideToggle.prototype.onTouched;\n/** @type {?} */\nMdSlideToggle.prototype._uniqueId;\n/** @type {?} */\nMdSlideToggle.prototype._slideRenderer;\n/** @type {?} */\nMdSlideToggle.prototype._required;\n/** @type {?} */\nMdSlideToggle.prototype._checked;\n/**\n * Reference to the focus state ripple.\n * @type {?}\n */\nMdSlideToggle.prototype._focusRipple;\n/**\n * Name value will be applied to the input element if present\n * @type {?}\n */\nMdSlideToggle.prototype.name;\n/**\n * A unique id for the slide-toggle input. If none is supplied, it will be auto-generated.\n * @type {?}\n */\nMdSlideToggle.prototype.id;\n/**\n * Used to specify the tabIndex value for the underlying input element.\n * @type {?}\n */\nMdSlideToggle.prototype.tabIndex;\n/**\n * Whether the label should appear after or before the slide-toggle. Defaults to 'after'\n * @type {?}\n */\nMdSlideToggle.prototype.labelPosition;\n/**\n * Used to set the aria-label attribute on the underlying input element.\n * @type {?}\n */\nMdSlideToggle.prototype.ariaLabel;\n/**\n * Used to set the aria-labelledby attribute on the underlying input element.\n * @type {?}\n */\nMdSlideToggle.prototype.ariaLabelledby;\n/**\n * An event will be dispatched each time the slide-toggle changes its value.\n * @type {?}\n */\nMdSlideToggle.prototype.change;\n/**\n * Reference to the underlying input element.\n * @type {?}\n */\nMdSlideToggle.prototype._inputElement;\n/**\n * Reference to the ripple directive on the thumb container.\n * @type {?}\n */\nMdSlideToggle.prototype._ripple;\n/** @type {?} */\nMdSlideToggle.prototype._platform;\n/** @type {?} */\nMdSlideToggle.prototype._focusOriginMonitor;\n/** @type {?} */\nMdSlideToggle.prototype._changeDetectorRef;\n}\n\n/**\n * Renderer for the Slide Toggle component, which separates DOM modification in its own class\n */\nclass SlideToggleRenderer {\n/**\n * Reference to the thumb HTMLElement.\n */\nprivate _thumbEl: HTMLElement;\n/**\n * Reference to the thumb bar HTMLElement.\n */\nprivate _thumbBarEl: HTMLElement;\n/**\n * Width of the thumb bar of the slide-toggle.\n */\nprivate _thumbBarWidth: number;\n/**\n * Previous checked state before drag started.\n */\nprivate _previousChecked: boolean;\n/**\n * Percentage of the thumb while dragging. Percentage as fraction of 100.\n */\ndragPercentage: number;\n/**\n * Whether the thumb is currently being dragged.\n */\ndragging: boolean = false;\n/**\n * @param {?} _elementRef\n * @param {?} platform\n */\nconstructor(private _elementRef: ElementRef, platform: Platform) {\n    // We only need to interact with these elements when we're on the browser, so only grab\n    // the reference in that case.\n    if (platform.isBrowser) {\n      this._thumbEl = _elementRef.nativeElement.querySelector('.mat-slide-toggle-thumb-container');\n      this._thumbBarEl = _elementRef.nativeElement.querySelector('.mat-slide-toggle-bar');\n    }\n  }\n/**\n * Initializes the drag of the slide-toggle.\n * @param {?} checked\n * @return {?}\n */\nstartThumbDrag(checked: boolean) {\n    if (this.dragging) { return; }\n\n    this._thumbBarWidth = this._thumbBarEl.clientWidth - this._thumbEl.clientWidth;\n    this._thumbEl.classList.add('mat-dragging');\n\n    this._previousChecked = checked;\n    this.dragging = true;\n  }\n/**\n * Resets the current drag and returns the new checked value.\n * @return {?}\n */\nstopThumbDrag(): boolean {\n    if (!this.dragging) { return false; }\n\n    this.dragging = false;\n    this._thumbEl.classList.remove('mat-dragging');\n\n    // Reset the transform because the component will take care of the thumb position after drag.\n    applyCssTransform(this._thumbEl, '');\n\n    return this.dragPercentage > 50;\n  }\n/**\n * Updates the thumb containers position from the specified distance.\n * @param {?} distance\n * @return {?}\n */\nupdateThumbPosition(distance: number) {\n    this.dragPercentage = this._getDragPercentage(distance);\n    // Calculate the moved distance based on the thumb bar width.\n    let /** @type {?} */ dragX = (this.dragPercentage / 100) * this._thumbBarWidth;\n    applyCssTransform(this._thumbEl, `translate3d(${dragX}px, 0, 0)`);\n  }\n/**\n * Retrieves the percentage of thumb from the moved distance. Percentage as fraction of 100.\n * @param {?} distance\n * @return {?}\n */\nprivate _getDragPercentage(distance: number) {\n    let /** @type {?} */ percentage = (distance / this._thumbBarWidth) * 100;\n\n    // When the toggle was initially checked, then we have to start the drag at the end.\n    if (this._previousChecked) {\n      percentage += 100;\n    }\n\n    return Math.max(0, Math.min(percentage, 100));\n  }\n\n}\n\nfunction SlideToggleRenderer_tsickle_Closure_declarations() {\n/**\n * Reference to the thumb HTMLElement.\n * @type {?}\n */\nSlideToggleRenderer.prototype._thumbEl;\n/**\n * Reference to the thumb bar HTMLElement.\n * @type {?}\n */\nSlideToggleRenderer.prototype._thumbBarEl;\n/**\n * Width of the thumb bar of the slide-toggle.\n * @type {?}\n */\nSlideToggleRenderer.prototype._thumbBarWidth;\n/**\n * Previous checked state before drag started.\n * @type {?}\n */\nSlideToggleRenderer.prototype._previousChecked;\n/**\n * Percentage of the thumb while dragging. Percentage as fraction of 100.\n * @type {?}\n */\nSlideToggleRenderer.prototype.dragPercentage;\n/**\n * Whether the thumb is currently being dragged.\n * @type {?}\n */\nSlideToggleRenderer.prototype.dragging;\n/** @type {?} */\nSlideToggleRenderer.prototype._elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdSelect, MdSelectTrigger, MD_SELECT_SCROLL_STRATEGY_PROVIDER} from './select';\nimport {MdCommonModule, MdOptionModule} from '../core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nexport class MdSelectModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MdOptionModule,\n    MdCommonModule,\n  ],\n  exports: [MdSelect, MdSelectTrigger, MdOptionModule, MdCommonModule],\n  declarations: [MdSelect, MdSelectTrigger],\n  providers: [MD_SELECT_SCROLL_STRATEGY_PROVIDER]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSelectModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelectModule.ctorParameters;\n}\n\n\n\nexport {SELECT_ITEM_HEIGHT,SELECT_PANEL_MAX_HEIGHT,SELECT_MAX_OPTIONS_DISPLAYED,SELECT_TRIGGER_HEIGHT,SELECT_OPTION_HEIGHT_ADJUSTMENT,SELECT_PANEL_PADDING_X,SELECT_PANEL_INDENT_PADDING_X,SELECT_MULTIPLE_PANEL_PADDING_X,SELECT_PANEL_PADDING_Y,SELECT_PANEL_VIEWPORT_PADDING,MD_SELECT_SCROLL_STRATEGY,MD_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,MD_SELECT_SCROLL_STRATEGY_PROVIDER,MdSelectChange,MdSelectBase,_MdSelectMixinBase,MdSelectTrigger,MdSelect} from './select';\nexport {fadeInContent, transformPanel, transformPlaceholder} from './select-animations';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Renderer2,\n  Self,\n  ViewChild,\n  ViewEncapsulation,\n  Directive,\n  isDevMode,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {DOWN_ARROW, END, ENTER, HOME, SPACE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {filter, startWith} from '@angular/cdk/rxjs';\nimport {\n  ConnectedOverlayDirective,\n  Overlay,\n  RepositionScrollStrategy,\n  // This import is only used to define a generic type. The current TypeScript version incorrectly\n  // considers such imports as unused (https://github.com/Microsoft/TypeScript/issues/14953)\n  // tslint:disable-next-line:no-unused-variable\n  ScrollStrategy,\n  ViewportRuler\n} from '@angular/cdk/overlay';\nimport {merge} from 'rxjs/observable/merge';\nimport {Observable} from 'rxjs/Observable';\nimport {Subscription} from 'rxjs/Subscription';\nimport {fadeInContent, transformPanel, transformPlaceholder} from './select-animations';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {\n  getMdSelectDynamicMultipleError,\n  getMdSelectNonArrayValueError,\n  getMdSelectNonFunctionValueError\n} from './select-errors';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\nimport {MdOptgroup, MdOption, MdOptionSelectionChange} from '../core/option/index';\nimport {\n  FloatPlaceholderType,\n  MD_PLACEHOLDER_GLOBAL_OPTIONS,\n  PlaceholderOptions\n} from '../core/placeholder/placeholder-options';\nimport {Platform} from '@angular/cdk/platform';\n/**\n * The fixed height of every option element (option, group header etc.).\n */\nexport const SELECT_ITEM_HEIGHT = 48;\n/**\n * The max height of the select's overlay panel\n */\nexport const SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The max number of options visible at once in the select panel.\n */\nexport const SELECT_MAX_OPTIONS_DISPLAYED =\n    Math.floor(SELECT_PANEL_MAX_HEIGHT / SELECT_ITEM_HEIGHT);\n/**\n * The fixed height of the select's trigger element.\n */\nexport const SELECT_TRIGGER_HEIGHT = 30;\n/**\n * Must adjust for the difference in height between the option and the trigger,\n * so the text will align on the y axis.\n */\nexport const SELECT_OPTION_HEIGHT_ADJUSTMENT = (SELECT_ITEM_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2;\n/**\n * The panel's padding on the x-axis\n */\nexport const SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n * \n * (SELECT_PADDING * 1.75) + 20 = 48\n * The padding is multiplied by 1.75 because the checkbox's margin is half the padding, and\n * the browser adds ~4px, because we're using inline elements.\n * The checkbox width is 20px.\n */\nexport const SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.75 + 20;\n/**\n * The panel's padding on the y-axis. This padding indicates there are more\n * options available if you scroll.\n */\nexport const SELECT_PANEL_PADDING_Y = 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Default minimum width of the trigger based on the CSS.\n * Used as a fallback for server-side rendering.\n * \\@docs-private\n */\nconst SELECT_TRIGGER_MIN_WIDTH = 112;\n/**\n * Injection token that determines the scroll handling while a select is open.\n */\nexport const MD_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('md-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nexport function MD_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n/**\n * \\@docs-private\n */\nexport const MD_SELECT_SCROLL_STRATEGY_PROVIDER = {\n  provide: MD_SELECT_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MD_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nexport class MdSelectChange {\n/**\n * @param {?} source\n * @param {?} value\n */\nconstructor(public source: MdSelect,\npublic value: any) { }\n}\n\nfunction MdSelectChange_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectChange.prototype.source;\n/** @type {?} */\nMdSelectChange.prototype.value;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdSelectBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdSelectBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectBase.prototype._renderer;\n/** @type {?} */\nMdSelectBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdSelectMixinBase = mixinColor(mixinDisabled(MdSelectBase), 'primary');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nexport class MdSelectTrigger {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-select-trigger, mat-select-trigger'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdSelectTrigger_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelectTrigger.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelectTrigger.ctorParameters;\n}\n\nexport class MdSelect extends _MdSelectMixinBase implements AfterContentInit, OnDestroy, OnInit,\n    ControlValueAccessor, CanColor, CanDisable {\n/**\n * Whether or not the overlay panel is open.\n */\nprivate _panelOpen = false;\n/**\n * Subscriptions to option events.\n */\nprivate _optionSubscription: Subscription | null;\n/**\n * Subscription to changes in the option list.\n */\nprivate _changeSubscription: Subscription;\n/**\n * Subscription to tab events while overlay is focused.\n */\nprivate _tabSubscription: Subscription;\n/**\n * Whether filling out the select is required in the form.\n */\nprivate _required: boolean = false;\n/**\n * The scroll position of the overlay panel, calculated to center the selected option.\n */\nprivate _scrollTop = 0;\n/**\n * The placeholder displayed in the trigger of the select.\n */\nprivate _placeholder: string;\n/**\n * Whether the component is in multiple selection mode.\n */\nprivate _multiple: boolean = false;\n/**\n * Comparison function to specify which option is displayed. Defaults to object equality.\n */\nprivate _compareWith = (o1: any, o2: any) => o1 === o2;\n/**\n * Deals with the selection logic.\n */\n_selectionModel: SelectionModel<MdOption>;\n/**\n * The animation state of the placeholder.\n */\nprivate _placeholderState = '';\n/**\n * Tab index for the element.\n */\nprivate _tabIndex: number;\n/**\n * Deals with configuring placeholder options\n */\nprivate _placeholderOptions: PlaceholderOptions;\n/**\n * The width of the trigger. Must be saved to set the min width of the overlay panel\n * and the width of the selected value.\n */\n_triggerWidth: number;\n/**\n * Manages keyboard events for options in the panel.\n */\n_keyManager: FocusKeyManager<MdOption>;\n/**\n * The width of the selected option's value. Must be set programmatically\n * to ensure its overflow is clipped, as it's absolutely positioned.\n */\n_selectedValueWidth: number;\n/**\n * View -> model callback called when value changes\n */\n_onChange: (value: any) => void = () => {};\n/**\n * View -> model callback called when select has been touched\n */\n_onTouched = () => {};\n/**\n * The IDs of child options to be passed to the aria-owns attribute.\n */\n_optionIds: string = '';\n/**\n * The value of the select panel's transform-origin property.\n */\n_transformOrigin: string = 'top';\n/**\n * Whether the panel's animation is done.\n */\n_panelDoneAnimating: boolean = false;\n/**\n * Strategy that will be used to handle scrolling while the select panel is open.\n */\n_scrollStrategy = this._scrollStrategyFactory();\n/**\n * The y-offset of the overlay panel in relation to the trigger's top start corner.\n * This must be adjusted to align the selected option text over the trigger text.\n * when the panel opens. Will change based on the y-position of the selected option.\n */\n_offsetY = 0;\n/**\n * This position config ensures that the top \"start\" corner of the overlay\n * is aligned with with the top \"start\" of the origin by default (overlapping\n * the trigger completely). If the panel cannot fit below the trigger, it\n * will fall back to a position above the trigger.\n */\n_positions = [\n    {\n      originX: 'start',\n      originY: 'top',\n      overlayX: 'start',\n      overlayY: 'top',\n    },\n    {\n      originX: 'start',\n      originY: 'bottom',\n      overlayX: 'start',\n      overlayY: 'bottom',\n    },\n  ];\n/**\n * Trigger that opens the select.\n */\ntrigger: ElementRef;\n/**\n * Overlay pane containing the options.\n */\noverlayDir: ConnectedOverlayDirective;\n/**\n * All of the defined select options.\n */\noptions: QueryList<MdOption>;\n/**\n * All of the defined groups of options.\n */\noptionGroups: QueryList<MdOptgroup>;\n/**\n * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n */\npanelClass: string|string[]|Set<string>|{[key: string]: any};\n/**\n * User-supplied override of the trigger element.\n */\ncustomTrigger: MdSelectTrigger;\n/**\n * Placeholder to be shown if no value has been selected.\n * @return {?}\n */\nget placeholder() { return this._placeholder; }\n/**\n * @param {?} value\n * @return {?}\n */\nset placeholder(value: string) {\n    this._placeholder = value;\n\n    // Must wait to record the trigger width to ensure placeholder width is included.\n    Promise.resolve(null).then(() => this._setTriggerWidth());\n  }\n/**\n * Whether the component is required.\n * @return {?}\n */\nget required() { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: any) { this._required = coerceBooleanProperty(value); }\n/**\n * Whether the user should be allowed to select multiple options.\n * @return {?}\n */\nget multiple(): boolean { return this._multiple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset multiple(value: boolean) {\n    if (this._selectionModel) {\n      throw getMdSelectDynamicMultipleError();\n    }\n\n    this._multiple = coerceBooleanProperty(value);\n  }\n/**\n * A function to compare the option values with the selected values. The first argument\n * is a value from an option. The second is a value from the selection. A boolean\n * should be returned.\n * @return {?}\n */\nget compareWith() { return this._compareWith; }\n/**\n * @param {?} fn\n * @return {?}\n */\nset compareWith(fn: (o1: any, o2: any) => boolean) {\n    if (typeof fn !== 'function') {\n      throw getMdSelectNonFunctionValueError();\n    }\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n/**\n * Whether to float the placeholder text.\n * @return {?}\n */\nget floatPlaceholder(): FloatPlaceholderType { return this._floatPlaceholder; }\n/**\n * @param {?} value\n * @return {?}\n */\nset floatPlaceholder(value: FloatPlaceholderType) {\n    this._floatPlaceholder = value || this._placeholderOptions.float || 'auto';\n  }\nprivate _floatPlaceholder: FloatPlaceholderType;\n/**\n * Tab index for the select element.\n * @return {?}\n */\nget tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\n/**\n * @param {?} value\n * @return {?}\n */\nset tabIndex(value: number) {\n    if (typeof value !== 'undefined') {\n      this._tabIndex = value;\n    }\n  }\n/**\n * Value of the select control.\n * @return {?}\n */\nget value() { return this._value; }\n/**\n * @param {?} newValue\n * @return {?}\n */\nset value(newValue: any) {\n    this.writeValue(newValue);\n    this._value = newValue;\n  }\nprivate _value: any;\n/**\n * Whether ripples for all options in the select are disabled.\n * @return {?}\n */\nget disableRipple(): boolean { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\n    this._disableRipple = coerceBooleanProperty(value);\n    this._setOptionDisableRipple();\n  }\nprivate _disableRipple: boolean = false;\n/**\n * Aria label of the select. If not specified, the placeholder will be used as label.\n */\nariaLabel: string = '';\n/**\n * Input that can be used to specify the `aria-labelledby` attribute.\n */\nariaLabelledby: string = '';\n/**\n * Combined stream of all of the child options' change events.\n * @return {?}\n */\nget optionSelectionChanges(): Observable<MdOptionSelectionChange> {\n    return merge(...this.options.map(option => option.onSelectionChange));\n  }\n/**\n * Event emitted when the select has been opened.\n */\nonOpen: EventEmitter<void> = new EventEmitter<void>();\n/**\n * Event emitted when the select has been closed.\n */\nonClose: EventEmitter<void> = new EventEmitter<void>();\n/**\n * Event emitted when the selected value has been changed by the user.\n */\nchange: EventEmitter<MdSelectChange> = new EventEmitter<MdSelectChange>();\n/**\n * Event that emits whenever the raw value of the select changes. This is here primarily\n * to facilitate the two-way binding for the `value` input.\n * \\@docs-private\n */\nvalueChange = new EventEmitter<any>();\n/**\n * @param {?} _viewportRuler\n * @param {?} _changeDetectorRef\n * @param {?} _overlay\n * @param {?} _platform\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _dir\n * @param {?} _parentForm\n * @param {?} _parentFormGroup\n * @param {?} _control\n * @param {?} tabIndex\n * @param {?} placeholderOptions\n * @param {?} _scrollStrategyFactory\n */\nconstructor(\nprivate _viewportRuler: ViewportRuler,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _overlay: Overlay,\nprivate _platform: Platform,\n    renderer: Renderer2,\n    elementRef: ElementRef,\nprivate _dir: Directionality,\nprivate _parentForm: NgForm,\nprivate _parentFormGroup: FormGroupDirective,\npublic _control: NgControl,\n     tabIndex: string,\n      placeholderOptions: PlaceholderOptions,\nprivate _scrollStrategyFactory) {\n\n    super(renderer, elementRef);\n\n    if (this._control) {\n      this._control.valueAccessor = this;\n    }\n\n    this._tabIndex = parseInt(tabIndex) || 0;\n    this._placeholderOptions = placeholderOptions ? placeholderOptions : {};\n    this.floatPlaceholder = this._placeholderOptions.float || 'auto';\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this._selectionModel = new SelectionModel<MdOption>(this.multiple, undefined, false);\n  }\n/**\n * @return {?}\n */\nngAfterContentInit() {\n    this._initKeyManager();\n\n    this._changeSubscription = startWith.call(this.options.changes, null).subscribe(() => {\n      this._resetOptions();\n      this._initializeSelection();\n    });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._dropSubscriptions();\n\n    if (this._changeSubscription) {\n      this._changeSubscription.unsubscribe();\n    }\n\n    if (this._tabSubscription) {\n      this._tabSubscription.unsubscribe();\n    }\n  }\n/**\n * Toggles the overlay panel open or closed.\n * @return {?}\n */\ntoggle(): void {\n    this.panelOpen ? this.close() : this.open();\n  }\n/**\n * Opens the overlay panel.\n * @return {?}\n */\nopen(): void {\n    if (this.disabled || !this.options.length) {\n      return;\n    }\n\n    if (!this._triggerWidth) {\n      this._setTriggerWidth();\n    }\n\n    this._calculateOverlayPosition();\n    this._placeholderState = this._floatPlaceholderState();\n    this._panelOpen = true;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Closes the overlay panel and focuses the host element.\n * @return {?}\n */\nclose(): void {\n    if (this._panelOpen) {\n      this._panelOpen = false;\n\n      if (this._selectionModel.isEmpty()) {\n        this._placeholderState = '';\n      }\n\n      this._changeDetectorRef.markForCheck();\n      this.focus();\n    }\n  }\n/**\n * Sets the select's value. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} value New value to be written to the model.\n * @return {?}\n */\nwriteValue(value: any): void {\n    if (this.options) {\n      this._setSelectionByValue(value);\n    }\n  }\n/**\n * Saves a callback function to be invoked when the select's value\n * changes from user input. Part of the ControlValueAccessor interface\n * required to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the value changes.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n/**\n * Saves a callback function to be invoked when the select is blurred\n * by the user. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n * \n * @param {?} fn Callback to be triggered when the component has been touched.\n * @return {?}\n */\nregisterOnTouched(fn: () => {}): void {\n    this._onTouched = fn;\n  }\n/**\n * Disables the select. Part of the ControlValueAccessor interface required\n * to integrate with Angular's core forms API.\n * \n * @param {?} isDisabled Sets whether the component is disabled.\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Whether or not the overlay panel is open.\n * @return {?}\n */\nget panelOpen(): boolean {\n    return this._panelOpen;\n  }\n/**\n * The currently selected option.\n * @return {?}\n */\nget selected(): MdOption | MdOption[] {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n/**\n * The value displayed in the trigger.\n * @return {?}\n */\nget triggerValue(): string {\n    if (!this._selectionModel || this._selectionModel.isEmpty()) {\n      return '';\n    }\n\n    if (this._multiple) {\n      const /** @type {?} */ selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n\n      if (this._isRtl()) {\n        selectedOptions.reverse();\n      }\n\n      // TODO(crisbeto): delimiter should be configurable for proper localization.\n      return selectedOptions.join(', ');\n    }\n\n    return this._selectionModel.selected[0].viewValue;\n  }\n/**\n * Whether the element is in RTL mode.\n * @return {?}\n */\n_isRtl(): boolean {\n    return this._dir ? this._dir.value === 'rtl' : false;\n  }\n/**\n * Sets the width of the trigger element. This is necessary to match\n * the overlay width to the trigger width.\n * @return {?}\n */\nprivate _setTriggerWidth(): void {\n    this._triggerWidth = this._platform.isBrowser ? this._getTriggerRect().width :\n        SELECT_TRIGGER_MIN_WIDTH;\n\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Handles the keyboard interactions of a closed select.\n * @param {?} event\n * @return {?}\n */\n_handleClosedKeydown(event: KeyboardEvent): void {\n    if (!this.disabled) {\n      if (event.keyCode === ENTER || event.keyCode === SPACE) {\n        event.preventDefault(); // prevents the page from scrolling down when pressing space\n        this.open();\n      } else if (event.keyCode === UP_ARROW || event.keyCode === DOWN_ARROW) {\n        this._handleArrowKey(event);\n      }\n    }\n  }\n/**\n * Handles keypresses inside the panel.\n * @param {?} event\n * @return {?}\n */\n_handlePanelKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === HOME || event.keyCode === END) {\n      event.preventDefault();\n      event.keyCode === HOME ? this._keyManager.setFirstItemActive() :\n                               this._keyManager.setLastItemActive();\n    } else {\n      this._keyManager.onKeydown(event);\n    }\n  }\n/**\n * When the panel element is finished transforming in (though not fading in), it\n * emits an event and focuses an option if the panel is open.\n * @return {?}\n */\n_onPanelDone(): void {\n    if (this.panelOpen) {\n      this._focusCorrectOption();\n      this.onOpen.emit();\n    } else {\n      this.onClose.emit();\n      this._panelDoneAnimating = false;\n      this.overlayDir.offsetX = 0;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * When the panel content is done fading in, the _panelDoneAnimating property is\n * set so the proper class can be added to the panel.\n * @return {?}\n */\n_onFadeInDone(): void {\n    this._panelDoneAnimating = this.panelOpen;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n * \"blur\" to the panel when it opens, causing a false positive.\n * @return {?}\n */\n_onBlur() {\n    if (!this.disabled && !this.panelOpen) {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * Callback that is invoked when the overlay panel has been attached.\n * @return {?}\n */\n_onAttached(): void {\n    this._calculateOverlayOffsetX();\n    this._setScrollTop();\n  }\n/**\n * Whether the select has a value.\n * @return {?}\n */\n_hasValue(): boolean {\n    return this._selectionModel && this._selectionModel.hasValue();\n  }\n/**\n * Whether the select is in an error state.\n * @return {?}\n */\n_isErrorState(): boolean {\n    const /** @type {?} */ isInvalid = this._control && this._control.invalid;\n    const /** @type {?} */ isTouched = this._control && this._control.touched;\n    const /** @type {?} */ isSubmitted = (this._parentFormGroup && this._parentFormGroup.submitted) ||\n        (this._parentForm && this._parentForm.submitted);\n\n    return !!(isInvalid && (isTouched || isSubmitted));\n  }\n/**\n * Sets the scroll position of the scroll container. This must be called after\n * the overlay pane is attached or the scroll container element will not yet be\n * present in the DOM.\n * @return {?}\n */\nprivate _setScrollTop(): void {\n    const /** @type {?} */ scrollContainer =\n        this.overlayDir.overlayRef.overlayElement.querySelector('.mat-select-panel'); /** @type {?} */((\n    scrollContainer)).scrollTop = this._scrollTop;\n  }\n/**\n * @return {?}\n */\nprivate _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      this._setSelectionByValue(this._control ? this._control.value : this._value);\n    });\n  }\n/**\n * Sets the selected option based on a value. If no option can be\n * found with the designated value, the select trigger is cleared.\n * @param {?} value\n * @param {?=} isUserInput\n * @return {?}\n */\nprivate _setSelectionByValue(value: any | any[], isUserInput = false): void {\n    const /** @type {?} */ isArray = Array.isArray(value);\n\n    if (this.multiple && value && !isArray) {\n      throw getMdSelectNonArrayValueError();\n    }\n\n    this._clearSelection();\n\n    if (isArray) {\n      value.forEach((currentValue: any) => this._selectValue(currentValue, isUserInput));\n      this._sortValues();\n    } else {\n      const /** @type {?} */ correspondingOption = this._selectValue(value, isUserInput);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what option the user interacted with last.\n      if (correspondingOption) {\n        this._keyManager.setActiveItem(this.options.toArray().indexOf(correspondingOption));\n      }\n    }\n\n    this._setValueWidth();\n\n    if (this._selectionModel.isEmpty()) {\n      this._placeholderState = '';\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Finds and selects and option based on its value.\n * @param {?} value\n * @param {?=} isUserInput\n * @return {?} Option that has the corresponding value.\n */\nprivate _selectValue(value: any, isUserInput = false): MdOption | undefined {\n    const /** @type {?} */ correspondingOption = this.options.find((option: MdOption) => {\n      try {\n        // Treat null as a special reset value.\n        return option.value != null && this._compareWith(option.value,  value);\n      } catch ( /** @type {?} */error) {\n        if (isDevMode()) {\n          // Notify developers of errors in their comparator.\n          console.warn(error);\n        }\n        return false;\n      }\n    });\n\n    if (correspondingOption) {\n      isUserInput ? correspondingOption._selectViaInteraction() : correspondingOption.select();\n      this._selectionModel.select(correspondingOption);\n    }\n\n    return correspondingOption;\n  }\n/**\n * Clears the select trigger and deselects every option in the list.\n * @param {?=} skip Option that should not be deselected.\n * @return {?}\n */\nprivate _clearSelection(skip?: MdOption): void {\n    this._selectionModel.clear();\n    this.options.forEach(option => {\n      if (option !== skip) {\n        option.deselect();\n      }\n    });\n  }\n/**\n * @return {?}\n */\nprivate _getTriggerRect(): ClientRect {\n    return this.trigger.nativeElement.getBoundingClientRect();\n  }\n/**\n * Sets up a key manager to listen to keyboard events on the overlay panel.\n * @return {?}\n */\nprivate _initKeyManager() {\n    this._keyManager = new FocusKeyManager<MdOption>(this.options).withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.close());\n  }\n/**\n * Drops current option subscriptions and IDs and resets from scratch.\n * @return {?}\n */\nprivate _resetOptions(): void {\n    this._dropSubscriptions();\n    this._listenToOptions();\n    this._setOptionIds();\n    this._setOptionMultiple();\n    this._setOptionDisableRipple();\n  }\n/**\n * Listens to user-generated selection events on each option.\n * @return {?}\n */\nprivate _listenToOptions(): void {\n    this._optionSubscription = filter.call(this.optionSelectionChanges,\n      event => event.isUserInput).subscribe(event => {\n        this._onSelect(event.source);\n        this._setValueWidth();\n\n        if (!this.multiple) {\n          this.close();\n        }\n      });\n  }\n/**\n * Invoked when an option is clicked.\n * @param {?} option\n * @return {?}\n */\nprivate _onSelect(option: MdOption): void {\n    const /** @type {?} */ wasSelected = this._selectionModel.isSelected(option);\n\n    // TODO(crisbeto): handle blank/null options inside multi-select.\n    if (this.multiple) {\n      this._selectionModel.toggle(option);\n      wasSelected ? option.deselect() : option.select();\n      this._sortValues();\n    } else {\n      this._clearSelection(option.value == null ? undefined : option);\n\n      if (option.value == null) {\n        this._propagateChanges(option.value);\n      } else {\n        this._selectionModel.select(option);\n      }\n    }\n\n    if (wasSelected !== this._selectionModel.isSelected(option)) {\n      this._propagateChanges();\n    }\n  }\n/**\n * Sorts the model values, ensuring that they keep the same\n * order that they have in the panel.\n * @return {?}\n */\nprivate _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.options.forEach(option => {\n        if (option.selected) {\n          this._selectionModel.select(option);\n        }\n      });\n    }\n  }\n/**\n * Unsubscribes from all option subscriptions.\n * @return {?}\n */\nprivate _dropSubscriptions(): void {\n    if (this._optionSubscription) {\n      this._optionSubscription.unsubscribe();\n      this._optionSubscription = null;\n    }\n  }\n/**\n * Emits change event to set the model value.\n * @param {?=} fallbackValue\n * @return {?}\n */\nprivate _propagateChanges(fallbackValue?: any): void {\n    let /** @type {?} */ valueToEmit: any = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(option => option.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n\n    this._value = valueToEmit;\n    this._onChange(valueToEmit);\n    this.change.emit(new MdSelectChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n  }\n/**\n * Records option IDs to pass to the aria-owns property.\n * @return {?}\n */\nprivate _setOptionIds() {\n    this._optionIds = this.options.map(option => option.id).join(' ');\n  }\n/**\n * Sets the `multiple` property on each option. The promise is necessary\n * in order to avoid Angular errors when modifying the property after init.\n * @return {?}\n */\nprivate _setOptionMultiple() {\n    if (this.multiple) {\n      Promise.resolve(null).then(() => {\n        this.options.forEach(option => option.multiple = this.multiple);\n      });\n    }\n  }\n/**\n * Sets the `disableRipple` property on each option.\n * @return {?}\n */\nprivate _setOptionDisableRipple() {\n    if (this.options) {\n      this.options.forEach(option => option.disableRipple = this.disableRipple);\n    }\n  }\n/**\n * Must set the width of the selected option's value programmatically\n * because it is absolutely positioned and otherwise will not clip\n * overflow. The selection arrow is 9px wide, add 4px of padding = 13\n * @return {?}\n */\nprivate _setValueWidth() {\n    this._selectedValueWidth = this._triggerWidth - 13;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Focuses the selected item. If no option is selected, it will focus\n * the first item instead.\n * @return {?}\n */\nprivate _focusCorrectOption(): void {\n    if (this._selectionModel.isEmpty()) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._keyManager.setActiveItem( /** @type {?} */((this._getOptionIndex(this._selectionModel.selected[0]))));\n    }\n  }\n/**\n * Focuses the select element.\n * @return {?}\n */\nfocus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n/**\n * Gets the index of the provided option in the option list.\n * @param {?} option\n * @return {?}\n */\nprivate _getOptionIndex(option: MdOption): number | undefined {\n    return this.options.reduce((result: number, current: MdOption, index: number) => {\n      return result === undefined ? (option === current ? index : undefined) : result;\n    }, undefined);\n  }\n/**\n * Calculates the scroll position and x- and y-offsets of the overlay panel.\n * @return {?}\n */\nprivate _calculateOverlayPosition(): void {\n    const /** @type {?} */ items = this._getItemCount();\n    const /** @type {?} */ panelHeight = Math.min(items * SELECT_ITEM_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n    const /** @type {?} */ scrollContainerHeight = items * SELECT_ITEM_HEIGHT;\n\n    // The farthest the panel can be scrolled before it hits the bottom\n    const /** @type {?} */ maxScroll = scrollContainerHeight - panelHeight;\n\n    if (this._hasValue()) {\n      let /** @type {?} */ selectedOptionOffset = /** @type {?} */(( this._getOptionIndex(this._selectionModel.selected[0])));\n\n      selectedOptionOffset += MdOption.countGroupLabelsBeforeOption(selectedOptionOffset,\n          this.options, this.optionGroups);\n\n      // We must maintain a scroll buffer so the selected option will be scrolled to the\n      // center of the overlay panel rather than the top.\n      const /** @type {?} */ scrollBuffer = panelHeight / 2;\n      this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n      this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n    } else {\n      // If no option is selected, the panel centers on the first option. In this case,\n      // we must only adjust for the height difference between the option element\n      // and the trigger element, then multiply it by -1 to ensure the panel moves\n      // in the correct direction up the page.\n      let /** @type {?} */ groupLabels = MdOption.countGroupLabelsBeforeOption(0, this.options, this.optionGroups);\n\n      this._offsetY = (SELECT_ITEM_HEIGHT - SELECT_TRIGGER_HEIGHT) / 2 * -1 -\n          (groupLabels * SELECT_ITEM_HEIGHT);\n    }\n\n    this._checkOverlayWithinViewport(maxScroll);\n  }\n/**\n * Calculates the scroll position of the select's overlay panel.\n * \n * Attempts to center the selected option in the panel. If the option is\n * too high or too low in the panel to be scrolled to the center, it clamps the\n * scroll position to the min or max scroll positions respectively.\n * @param {?} selectedIndex\n * @param {?} scrollBuffer\n * @param {?} maxScroll\n * @return {?}\n */\n_calculateOverlayScroll(selectedIndex: number, scrollBuffer: number,\n                          maxScroll: number): number {\n    const /** @type {?} */ optionOffsetFromScrollTop = SELECT_ITEM_HEIGHT * selectedIndex;\n    const /** @type {?} */ halfOptionHeight = SELECT_ITEM_HEIGHT / 2;\n\n    // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n    // scroll container, then subtracts the scroll buffer to scroll the option down to\n    // the center of the overlay panel. Half the option height must be re-added to the\n    // scrollTop so the option is centered based on its middle, not its top edge.\n    const /** @type {?} */ optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n    return clampValue(0, optimalScrollPosition, maxScroll);\n  }\n/**\n * Figures out the appropriate animation state for the placeholder.\n * @return {?}\n */\n_getPlaceholderAnimationState(): string {\n    if (this.floatPlaceholder === 'never') {\n      return '';\n    }\n\n    if (this.floatPlaceholder === 'always') {\n      return this._floatPlaceholderState();\n    }\n\n    return this._placeholderState;\n  }\n/**\n * Determines the CSS `opacity` of the placeholder element.\n * @return {?}\n */\n_getPlaceholderOpacity(): string {\n    return (this.floatPlaceholder !== 'never' || this._selectionModel.isEmpty()) ? '1' : '0';\n  }\n/**\n * Returns the aria-label of the select component.\n * @return {?}\n */\nget _ariaLabel(): string | null {\n    // If an ariaLabelledby value has been set, the select should not overwrite the\n    // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n    return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n  }\n/**\n * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n * This must be adjusted to align the selected option text over the trigger text when\n * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n * can't be calculated until the panel has been attached, because we need to know the\n * content width in order to constrain the panel within the viewport.\n * @return {?}\n */\nprivate _calculateOverlayOffsetX(): void {\n    const /** @type {?} */ overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n    const /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n    const /** @type {?} */ isRtl = this._isRtl();\n    const /** @type {?} */ paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n                                         SELECT_PANEL_PADDING_X * 2;\n    let /** @type {?} */ offsetX: number;\n\n    // Adjust the offset, depending on the option padding.\n    if (this.multiple) {\n      offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n    } else {\n      let /** @type {?} */ selected = this._selectionModel.selected[0] || this.options.first;\n      offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n    }\n\n    // Invert the offset in LTR.\n    if (!isRtl) {\n      offsetX *= -1;\n    }\n\n    // Determine how much the select overflows on each side.\n    const /** @type {?} */ leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n    const /** @type {?} */ rightOverflow = overlayRect.right + offsetX - viewportRect.width\n                          + (isRtl ? 0 : paddingWidth);\n\n    // If the element overflows on either side, reduce the offset to allow it to fit.\n    if (leftOverflow > 0) {\n      offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    } else if (rightOverflow > 0) {\n      offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n    }\n\n    // Set the offset directly in order to avoid having to go through change detection and\n    // potentially triggering \"changed after it was checked\" errors.\n    this.overlayDir.offsetX = offsetX;\n    this.overlayDir.overlayRef.updatePosition();\n  }\n/**\n * Calculates the y-offset of the select's overlay panel in relation to the\n * top start corner of the trigger. It has to be adjusted in order for the\n * selected option to be aligned over the trigger when the panel opens.\n * @param {?} selectedIndex\n * @param {?} scrollBuffer\n * @param {?} maxScroll\n * @return {?}\n */\nprivate _calculateOverlayOffsetY(selectedIndex: number, scrollBuffer: number,\n                                  maxScroll: number): number {\n    let /** @type {?} */ optionOffsetFromPanelTop: number;\n\n    if (this._scrollTop === 0) {\n      optionOffsetFromPanelTop = selectedIndex * SELECT_ITEM_HEIGHT;\n    } else if (this._scrollTop === maxScroll) {\n      const /** @type {?} */ firstDisplayedIndex = this._getItemCount() - SELECT_MAX_OPTIONS_DISPLAYED;\n      const /** @type {?} */ selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n\n      // Because the panel height is longer than the height of the options alone,\n      // there is always extra padding at the top or bottom of the panel. When\n      // scrolled to the very bottom, this padding is at the top of the panel and\n      // must be added to the offset.\n      optionOffsetFromPanelTop =\n          selectedDisplayIndex * SELECT_ITEM_HEIGHT + SELECT_PANEL_PADDING_Y;\n    } else {\n      // If the option was scrolled to the middle of the panel using a scroll buffer,\n      // its offset will be the scroll buffer minus the half height that was added to\n      // center it.\n      optionOffsetFromPanelTop = scrollBuffer - SELECT_ITEM_HEIGHT / 2;\n    }\n\n    // The final offset is the option's offset from the top, adjusted for the height\n    // difference, multiplied by -1 to ensure that the overlay moves in the correct\n    // direction up the page.\n    return optionOffsetFromPanelTop * -1 - SELECT_OPTION_HEIGHT_ADJUSTMENT;\n  }\n/**\n * Checks that the attempted overlay position will fit within the viewport.\n * If it will not fit, tries to adjust the scroll position and the associated\n * y-offset so the panel can open fully on-screen. If it still won't fit,\n * sets the offset back to 0 to allow the fallback position to take over.\n * @param {?} maxScroll\n * @return {?}\n */\nprivate _checkOverlayWithinViewport(maxScroll: number): void {\n    const /** @type {?} */ viewportRect = this._viewportRuler.getViewportRect();\n    const /** @type {?} */ triggerRect = this._getTriggerRect();\n\n    const /** @type {?} */ topSpaceAvailable = triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n    const /** @type {?} */ bottomSpaceAvailable =\n        viewportRect.height - triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n    const /** @type {?} */ panelHeightTop = Math.abs(this._offsetY);\n    const /** @type {?} */ totalPanelHeight =\n        Math.min(this._getItemCount() * SELECT_ITEM_HEIGHT, SELECT_PANEL_MAX_HEIGHT);\n    const /** @type {?} */ panelHeightBottom = totalPanelHeight - panelHeightTop - triggerRect.height;\n\n    if (panelHeightBottom > bottomSpaceAvailable) {\n      this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n    } else if (panelHeightTop > topSpaceAvailable) {\n     this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n    } else {\n      this._transformOrigin = this._getOriginBasedOnOption();\n    }\n  }\n/**\n * Adjusts the overlay panel up to fit in the viewport.\n * @param {?} panelHeightBottom\n * @param {?} bottomSpaceAvailable\n * @return {?}\n */\nprivate _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n    const /** @type {?} */ distanceBelowViewport = panelHeightBottom - bottomSpaceAvailable;\n\n    // Scrolls the panel up by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel up into the viewport.\n    this._scrollTop -= distanceBelowViewport;\n    this._offsetY -= distanceBelowViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very top, it won't be able to fit the panel\n    // by scrolling, so set the offset to 0 to allow the fallback position to take\n    // effect.\n    if (this._scrollTop <= 0) {\n      this._scrollTop = 0;\n      this._offsetY = 0;\n      this._transformOrigin = `50% bottom 0px`;\n    }\n  }\n/**\n * Adjusts the overlay panel down to fit in the viewport.\n * @param {?} panelHeightTop\n * @param {?} topSpaceAvailable\n * @param {?} maxScroll\n * @return {?}\n */\nprivate _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number,\n                           maxScroll: number) {\n    const /** @type {?} */ distanceAboveViewport = panelHeightTop - topSpaceAvailable;\n\n    // Scrolls the panel down by the distance it was extending past the boundary, then\n    // adjusts the offset by that amount to move the panel down into the viewport.\n    this._scrollTop += distanceAboveViewport;\n    this._offsetY += distanceAboveViewport;\n    this._transformOrigin = this._getOriginBasedOnOption();\n\n    // If the panel is scrolled to the very bottom, it won't be able to fit the\n    // panel by scrolling, so set the offset to 0 to allow the fallback position\n    // to take effect.\n    if (this._scrollTop >= maxScroll) {\n      this._scrollTop = maxScroll;\n      this._offsetY = 0;\n      this._transformOrigin = `50% top 0px`;\n      return;\n    }\n  }\n/**\n * Sets the transform origin point based on the selected option.\n * @return {?}\n */\nprivate _getOriginBasedOnOption(): string {\n    const /** @type {?} */ originY =\n        Math.abs(this._offsetY) - SELECT_OPTION_HEIGHT_ADJUSTMENT + SELECT_ITEM_HEIGHT / 2;\n    return `50% ${originY}px 0px`;\n  }\n/**\n * Figures out the floating placeholder state value.\n * @return {?}\n */\nprivate _floatPlaceholderState(): string {\n    return this._isRtl() ? 'floating-rtl' : 'floating-ltr';\n  }\n/**\n * Handles the user pressing the arrow keys on a closed select.\n * @param {?} event\n * @return {?}\n */\nprivate _handleArrowKey(event: KeyboardEvent): void {\n    if (this._multiple) {\n      event.preventDefault();\n      this.open();\n    } else {\n      const /** @type {?} */ prevActiveItem = this._keyManager.activeItem;\n\n      // Cycle though the select options even when the select is closed,\n      // matching the behavior of the native select element.\n      // TODO(crisbeto): native selects also cycle through the options with left/right arrows,\n      // however the key manager only supports up/down at the moment.\n      this._keyManager.onKeydown(event);\n\n      const /** @type {?} */ currentActiveItem = /** @type {?} */(( this._keyManager.activeItem as MdOption));\n\n      if (currentActiveItem !== prevActiveItem) {\n        this._clearSelection();\n        this._setSelectionByValue(currentActiveItem.value, true);\n        this._propagateChanges();\n      }\n    }\n  }\n/**\n * Calculates the amount of items in the select. This includes options and group labels.\n * @return {?}\n */\nprivate _getItemCount(): number {\n    return this.options.length + this.optionGroups.length;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-select, mat-select',\n  templateUrl: 'select.html',\n  styleUrls: ['select.css'],\n  inputs: ['color', 'disabled'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'role': 'listbox',\n    '[attr.tabindex]': 'tabIndex',\n    '[attr.aria-label]': '_ariaLabel',\n    '[attr.aria-labelledby]': 'ariaLabelledby',\n    '[attr.aria-required]': 'required.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': '_isErrorState()',\n    '[attr.aria-owns]': '_optionIds',\n    '[attr.aria-multiselectable]': 'multiple',\n    '[class.mat-select-disabled]': 'disabled',\n    '[class.mat-select-invalid]': '_isErrorState()',\n    '[class.mat-select-required]': 'required',\n    'class': 'mat-select',\n    '(keydown)': '_handleClosedKeydown($event)',\n    '(blur)': '_onBlur()',\n  },\n  animations: [\n    transformPlaceholder,\n    transformPanel,\n    fadeInContent\n  ],\n  exportAs: 'mdSelect',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ViewportRuler, },\n{type: ChangeDetectorRef, },\n{type: Overlay, },\n{type: Platform, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Directionality, decorators: [{ type: Optional }, ]},\n{type: NgForm, decorators: [{ type: Optional }, ]},\n{type: FormGroupDirective, decorators: [{ type: Optional }, ]},\n{type: NgControl, decorators: [{ type: Self }, { type: Optional }, ]},\n{type: undefined, decorators: [{ type: Attribute, args: ['tabindex', ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_PLACEHOLDER_GLOBAL_OPTIONS, ] }, ]},\n{type: undefined, decorators: [{ type: Inject, args: [MD_SELECT_SCROLL_STRATEGY, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: ViewChild, args: ['trigger', ] },],\n'overlayDir': [{ type: ViewChild, args: [ConnectedOverlayDirective, ] },],\n'options': [{ type: ContentChildren, args: [MdOption, { descendants: true }, ] },],\n'optionGroups': [{ type: ContentChildren, args: [MdOptgroup, ] },],\n'panelClass': [{ type: Input },],\n'customTrigger': [{ type: ContentChild, args: [MdSelectTrigger, ] },],\n'placeholder': [{ type: Input },],\n'required': [{ type: Input },],\n'multiple': [{ type: Input },],\n'compareWith': [{ type: Input },],\n'floatPlaceholder': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'value': [{ type: Input },],\n'disableRipple': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'onOpen': [{ type: Output },],\n'onClose': [{ type: Output },],\n'change': [{ type: Output },],\n'valueChange': [{ type: Output },],\n};\n}\n\nfunction MdSelect_tsickle_Closure_declarations() {\n/** @type {?} */\nMdSelect.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdSelect.ctorParameters;\n/** @type {?} */\nMdSelect.propDecorators;\n/**\n * Whether or not the overlay panel is open.\n * @type {?}\n */\nMdSelect.prototype._panelOpen;\n/**\n * Subscriptions to option events.\n * @type {?}\n */\nMdSelect.prototype._optionSubscription;\n/**\n * Subscription to changes in the option list.\n * @type {?}\n */\nMdSelect.prototype._changeSubscription;\n/**\n * Subscription to tab events while overlay is focused.\n * @type {?}\n */\nMdSelect.prototype._tabSubscription;\n/**\n * Whether filling out the select is required in the form.\n * @type {?}\n */\nMdSelect.prototype._required;\n/**\n * The scroll position of the overlay panel, calculated to center the selected option.\n * @type {?}\n */\nMdSelect.prototype._scrollTop;\n/**\n * The placeholder displayed in the trigger of the select.\n * @type {?}\n */\nMdSelect.prototype._placeholder;\n/**\n * Whether the component is in multiple selection mode.\n * @type {?}\n */\nMdSelect.prototype._multiple;\n/**\n * Comparison function to specify which option is displayed. Defaults to object equality.\n * @type {?}\n */\nMdSelect.prototype._compareWith;\n/**\n * Deals with the selection logic.\n * @type {?}\n */\nMdSelect.prototype._selectionModel;\n/**\n * The animation state of the placeholder.\n * @type {?}\n */\nMdSelect.prototype._placeholderState;\n/**\n * Tab index for the element.\n * @type {?}\n */\nMdSelect.prototype._tabIndex;\n/**\n * Deals with configuring placeholder options\n * @type {?}\n */\nMdSelect.prototype._placeholderOptions;\n/**\n * The width of the trigger. Must be saved to set the min width of the overlay panel\n * and the width of the selected value.\n * @type {?}\n */\nMdSelect.prototype._triggerWidth;\n/**\n * Manages keyboard events for options in the panel.\n * @type {?}\n */\nMdSelect.prototype._keyManager;\n/**\n * The width of the selected option's value. Must be set programmatically\n * to ensure its overflow is clipped, as it's absolutely positioned.\n * @type {?}\n */\nMdSelect.prototype._selectedValueWidth;\n/**\n * View -> model callback called when value changes\n * @type {?}\n */\nMdSelect.prototype._onChange;\n/**\n * View -> model callback called when select has been touched\n * @type {?}\n */\nMdSelect.prototype._onTouched;\n/**\n * The IDs of child options to be passed to the aria-owns attribute.\n * @type {?}\n */\nMdSelect.prototype._optionIds;\n/**\n * The value of the select panel's transform-origin property.\n * @type {?}\n */\nMdSelect.prototype._transformOrigin;\n/**\n * Whether the panel's animation is done.\n * @type {?}\n */\nMdSelect.prototype._panelDoneAnimating;\n/**\n * Strategy that will be used to handle scrolling while the select panel is open.\n * @type {?}\n */\nMdSelect.prototype._scrollStrategy;\n/**\n * The y-offset of the overlay panel in relation to the trigger's top start corner.\n * This must be adjusted to align the selected option text over the trigger text.\n * when the panel opens. Will change based on the y-position of the selected option.\n * @type {?}\n */\nMdSelect.prototype._offsetY;\n/**\n * This position config ensures that the top \"start\" corner of the overlay\n * is aligned with with the top \"start\" of the origin by default (overlapping\n * the trigger completely). If the panel cannot fit below the trigger, it\n * will fall back to a position above the trigger.\n * @type {?}\n */\nMdSelect.prototype._positions;\n/**\n * Trigger that opens the select.\n * @type {?}\n */\nMdSelect.prototype.trigger;\n/**\n * Overlay pane containing the options.\n * @type {?}\n */\nMdSelect.prototype.overlayDir;\n/**\n * All of the defined select options.\n * @type {?}\n */\nMdSelect.prototype.options;\n/**\n * All of the defined groups of options.\n * @type {?}\n */\nMdSelect.prototype.optionGroups;\n/**\n * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n * @type {?}\n */\nMdSelect.prototype.panelClass;\n/**\n * User-supplied override of the trigger element.\n * @type {?}\n */\nMdSelect.prototype.customTrigger;\n/** @type {?} */\nMdSelect.prototype._floatPlaceholder;\n/** @type {?} */\nMdSelect.prototype._value;\n/** @type {?} */\nMdSelect.prototype._disableRipple;\n/**\n * Aria label of the select. If not specified, the placeholder will be used as label.\n * @type {?}\n */\nMdSelect.prototype.ariaLabel;\n/**\n * Input that can be used to specify the `aria-labelledby` attribute.\n * @type {?}\n */\nMdSelect.prototype.ariaLabelledby;\n/**\n * Event emitted when the select has been opened.\n * @type {?}\n */\nMdSelect.prototype.onOpen;\n/**\n * Event emitted when the select has been closed.\n * @type {?}\n */\nMdSelect.prototype.onClose;\n/**\n * Event emitted when the selected value has been changed by the user.\n * @type {?}\n */\nMdSelect.prototype.change;\n/**\n * Event that emits whenever the raw value of the select changes. This is here primarily\n * to facilitate the two-way binding for the `value` input.\n * \\@docs-private\n * @type {?}\n */\nMdSelect.prototype.valueChange;\n/** @type {?} */\nMdSelect.prototype._viewportRuler;\n/** @type {?} */\nMdSelect.prototype._changeDetectorRef;\n/** @type {?} */\nMdSelect.prototype._overlay;\n/** @type {?} */\nMdSelect.prototype._platform;\n/** @type {?} */\nMdSelect.prototype._dir;\n/** @type {?} */\nMdSelect.prototype._parentForm;\n/** @type {?} */\nMdSelect.prototype._parentFormGroup;\n/** @type {?} */\nMdSelect.prototype._control;\n/** @type {?} */\nMdSelect.prototype._scrollStrategyFactory;\n}\n\n/**\n * Clamps a value n between min and max values.\n * @param {?} min\n * @param {?} n\n * @param {?} max\n * @return {?}\n */\nfunction clampValue(min: number, n: number, max: number): number {\n  return Math.min(Math.max(min, n), max);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nexport function getMdSelectDynamicMultipleError(): Error {\n  return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nexport function getMdSelectNonArrayValueError(): Error {\n  return Error('Cannot assign truthy non-array value to select in `multiple` mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nexport function getMdSelectNonFunctionValueError(): Error {\n  return Error('Cannot assign a non-function value to `compareWith`.');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  animate,\n  AnimationTriggerMetadata,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n/**\n * This animation shrinks the placeholder text to 75% of its normal size and translates\n * it to either the top left corner (ltr) or top right corner (rtl) of the trigger,\n * depending on the text direction of the application.\n */\nexport const transformPlaceholder: AnimationTriggerMetadata = trigger('transformPlaceholder', [\n  state('floating-ltr', style({\n    top: '-22px',\n    left: '-2px',\n    transform: 'scale(0.75)'\n  })),\n  state('floating-rtl', style({\n    top: '-22px',\n    left: '2px',\n    transform: 'scale(0.75)'\n  })),\n  transition('* => *', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n]);\n/**\n * This animation transforms the select's overlay panel on and off the page.\n * \n * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n * side to ensure the option text correctly overlaps the trigger text.\n * \n * When the panel is removed from the DOM, it simply fades out linearly.\n */\nexport const transformPanel: AnimationTriggerMetadata = trigger('transformPanel', [\n  state('showing', style({\n    opacity: 1,\n    minWidth: 'calc(100% + 32px)', // 32px = 2 * 16px padding\n    transform: 'scaleY(1)'\n  })),\n  state('showing-multiple', style({\n    opacity: 1,\n    minWidth: 'calc(100% + 64px)', // 64px = 48px padding on the left + 16px padding on the right\n    transform: 'scaleY(1)'\n  })),\n  transition('void => *', [\n    style({\n      opacity: 0,\n      minWidth: '100%',\n      transform: 'scaleY(0)'\n    }),\n    animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n  ]),\n  transition('* => void', [\n    animate('250ms 100ms linear', style({opacity: 0}))\n  ])\n]);\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nexport const fadeInContent: AnimationTriggerMetadata = trigger('fadeInContent', [\n  state('showing', style({opacity: 1})),\n  transition('void => showing', [\n    style({opacity: 0}),\n    animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n  ])\n]);\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {VIEWPORT_RULER_PROVIDER} from '@angular/cdk/overlay';\nimport {\n  MdRippleModule,\n  MdCommonModule,\n  UNIQUE_SELECTION_DISPATCHER_PROVIDER,\n  FocusOriginMonitor,\n} from '../core';\nimport {MdRadioGroup, MdRadioButton} from './radio';\nexport class MdRadioModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, MdRippleModule, MdCommonModule],\n  exports: [MdRadioGroup, MdRadioButton, MdCommonModule],\n  providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER, VIEWPORT_RULER_PROVIDER, FocusOriginMonitor],\n  declarations: [MdRadioGroup, MdRadioButton],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRadioModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRadioModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRadioModule.ctorParameters;\n}\n\n\n\nexport {MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,MdRadioChange,MdRadioGroupBase,_MdRadioGroupMixinBase,MdRadioGroup,MdRadioButtonBase,_MdRadioButtonMixinBase,MdRadioButton} from './radio';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Renderer2,\n  EventEmitter,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  ViewEncapsulation,\n  forwardRef,\n  ViewChild,\n  OnDestroy,\n  AfterViewInit,\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {\n  RippleRef,\n  UniqueSelectionDispatcher,\n  MdRipple,\n  FocusOriginMonitor,\n  FocusOrigin,\n} from '../core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {mixinDisabled, CanDisable} from '../core/common-behaviors/disabled';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nimport {CanDisableRipple, mixinDisableRipple} from '../core/common-behaviors/disable-ripple';\n\n// Increasing integer for generating unique ids for radio components.\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Provider Expression that allows md-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * \\@docs-private\n */\nexport const MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdRadioGroup),\n  multi: true\n};\n/**\n * Change event object emitted by MdRadio and MdRadioGroup.\n */\nexport class MdRadioChange {\n/**\n * The MdRadioButton that emits the change event.\n */\nsource: MdRadioButton | null;\n/**\n * The value of the MdRadioButton.\n */\nvalue: any;\n}\n\nfunction MdRadioChange_tsickle_Closure_declarations() {\n/**\n * The MdRadioButton that emits the change event.\n * @type {?}\n */\nMdRadioChange.prototype.source;\n/**\n * The value of the MdRadioButton.\n * @type {?}\n */\nMdRadioChange.prototype.value;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdRadioGroupBase { }\nexport const /** @type {?} */ _MdRadioGroupMixinBase = mixinDisabled(MdRadioGroupBase);\n/**\n * A group of radio buttons. May contain one or more `<md-radio-button>` elements.\n */\nexport class MdRadioGroup extends _MdRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n/**\n * Selected value for group. Should equal the value of the selected radio button if there *is*\n * a corresponding radio button with a matching value. If there is *not* such a corresponding\n * radio button, this value persists to be applied in case a new radio button is added with a\n * matching value.\n */\nprivate _value: any = null;\n/**\n * The HTML name attribute applied to radio buttons in this group.\n */\nprivate _name: string = `md-radio-group-${nextUniqueId++}`;\n/**\n * The currently selected radio button. Should match value.\n */\nprivate _selected: MdRadioButton | null = null;\n/**\n * Whether the `value` has been set to its initial value.\n */\nprivate _isInitialized: boolean = false;\n/**\n * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n */\nprivate _labelPosition: 'before' | 'after' = 'after';\n/**\n * Whether the radio group is disabled.\n */\nprivate _disabled: boolean = false;\n/**\n * Whether the radio group is required.\n */\nprivate _required: boolean = false;\n/**\n * The method to be called in order to update ngModel\n */\n_controlValueAccessorChangeFn: (value: any) => void = () => {};\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n * \\@docs-private\n */\nonTouched: () => any = () => {};\n/**\n * Event emitted when the group value changes.\n * Change events are only emitted when the value changes due to user interaction with\n * a radio button (the same behavior as `<input type-\"radio\">`).\n */\nchange: EventEmitter<MdRadioChange> = new EventEmitter<MdRadioChange>();\n/**\n * Child radio buttons.\n */\n_radios: QueryList<MdRadioButton>;\n/**\n * Name of the radio button group. All radio buttons inside this group will use this name.\n * @return {?}\n */\nget name(): string { return this._name; }\n/**\n * @param {?} value\n * @return {?}\n */\nset name(value: string) {\n    this._name = value;\n    this._updateRadioButtonNames();\n  }\n/**\n * Alignment of the radio-buttons relative to their labels. Can be 'before' or 'after'.\n * @deprecated\n * @return {?}\n */\nget align(): 'start' | 'end' {\n    // align refers to the checkbox relative to the label, while labelPosition refers to the\n    // label relative to the checkbox. As such, they are inverted.\n    return this.labelPosition == 'after' ? 'start' : 'end';\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset align(v) {\n    this.labelPosition = (v == 'start') ? 'after' : 'before';\n  }\n/**\n * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n * @return {?}\n */\nget labelPosition() {\n    return this._labelPosition;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset labelPosition(v) {\n    this._labelPosition = (v == 'before') ? 'before' : 'after';\n    this._markRadiosForCheck();\n  }\n/**\n * Value of the radio button.\n * @return {?}\n */\nget value(): any { return this._value; }\n/**\n * @param {?} newValue\n * @return {?}\n */\nset value(newValue: any) {\n    if (this._value != newValue) {\n      // Set this before proceeding to ensure no circular loop occurs with selection.\n      this._value = newValue;\n\n      this._updateSelectedRadioFromValue();\n      this._checkSelectedRadioButton();\n    }\n  }\n/**\n * @return {?}\n */\n_checkSelectedRadioButton() {\n    if (this._selected && !this._selected.checked) {\n      this._selected.checked = true;\n    }\n  }\n/**\n * Whether the radio button is selected.\n * @return {?}\n */\nget selected() { return this._selected; }\n/**\n * @param {?} selected\n * @return {?}\n */\nset selected(selected: MdRadioButton | null) {\n    this._selected = selected;\n    this.value = selected ? selected.value : null;\n    this._checkSelectedRadioButton();\n  }\n/**\n * Whether the radio group is disabled\n * @return {?}\n */\nget disabled(): boolean { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    this._markRadiosForCheck();\n  }\n/**\n * Whether the radio group is required\n * @return {?}\n */\nget required(): boolean { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this._markRadiosForCheck();\n  }\n/**\n * @param {?} _changeDetector\n */\nconstructor(private _changeDetector: ChangeDetectorRef) {\n    super();\n  }\n/**\n * Initialize properties once content children are available.\n * This allows us to propagate relevant attributes to associated buttons.\n * @return {?}\n */\nngAfterContentInit() {\n    // Mark this component as initialized in AfterContentInit because the initial value can\n    // possibly be set by NgModel on MdRadioGroup, and it is possible that the OnInit of the\n    // NgModel occurs *after* the OnInit of the MdRadioGroup.\n    this._isInitialized = true;\n  }\n/**\n * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n * radio buttons upon their blur.\n * @return {?}\n */\n_touch() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n/**\n * @return {?}\n */\nprivate _updateRadioButtonNames(): void {\n    if (this._radios) {\n      this._radios.forEach(radio => {\n        radio.name = this.name;\n      });\n    }\n  }\n/**\n * Updates the `selected` radio button from the internal _value state.\n * @return {?}\n */\nprivate _updateSelectedRadioFromValue(): void {\n    // If the value already matches the selected radio, do nothing.\n    const /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;\n\n    if (this._radios != null && !isAlreadySelected) {\n      this._selected = null;\n      this._radios.forEach(radio => {\n        radio.checked = this.value == radio.value;\n        if (radio.checked) {\n          this._selected = radio;\n        }\n      });\n    }\n  }\n/**\n * Dispatch change event with current selection and group value.\n * @return {?}\n */\n_emitChangeEvent(): void {\n    if (this._isInitialized) {\n      const /** @type {?} */ event = new MdRadioChange();\n      event.source = this._selected;\n      event.value = this._value;\n      this.change.emit(event);\n    }\n  }\n/**\n * @return {?}\n */\n_markRadiosForCheck() {\n    if (this._radios) {\n      this._radios.forEach(radio => radio._markForCheck());\n    }\n  }\n/**\n * Sets the model value. Implemented as part of ControlValueAccessor.\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n    this.value = value;\n    this._changeDetector.markForCheck();\n  }\n/**\n * Registers a callback to be triggered when the model value changes.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Callback to be registered.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n/**\n * Registers a callback to be triggered when the control is touched.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Callback to be registered.\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n/**\n * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n * @param {?} isDisabled Whether the control should be disabled.\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this._changeDetector.markForCheck();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-radio-group, mat-radio-group',\n  providers: [MD_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n  host: {\n    'role': 'radiogroup',\n    'class': 'mat-radio-group',\n  },\n  inputs: ['disabled'],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'change': [{ type: Output },],\n'_radios': [{ type: ContentChildren, args: [forwardRef(() => MdRadioButton), ] },],\n'name': [{ type: Input },],\n'align': [{ type: Input },],\n'labelPosition': [{ type: Input },],\n'value': [{ type: Input },],\n'selected': [{ type: Input },],\n'disabled': [{ type: Input },],\n'required': [{ type: Input },],\n};\n}\n\nfunction MdRadioGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRadioGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRadioGroup.ctorParameters;\n/** @type {?} */\nMdRadioGroup.propDecorators;\n/**\n * Selected value for group. Should equal the value of the selected radio button if there *is*\n * a corresponding radio button with a matching value. If there is *not* such a corresponding\n * radio button, this value persists to be applied in case a new radio button is added with a\n * matching value.\n * @type {?}\n */\nMdRadioGroup.prototype._value;\n/**\n * The HTML name attribute applied to radio buttons in this group.\n * @type {?}\n */\nMdRadioGroup.prototype._name;\n/**\n * The currently selected radio button. Should match value.\n * @type {?}\n */\nMdRadioGroup.prototype._selected;\n/**\n * Whether the `value` has been set to its initial value.\n * @type {?}\n */\nMdRadioGroup.prototype._isInitialized;\n/**\n * Whether the labels should appear after or before the radio-buttons. Defaults to 'after'\n * @type {?}\n */\nMdRadioGroup.prototype._labelPosition;\n/**\n * Whether the radio group is disabled.\n * @type {?}\n */\nMdRadioGroup.prototype._disabled;\n/**\n * Whether the radio group is required.\n * @type {?}\n */\nMdRadioGroup.prototype._required;\n/**\n * The method to be called in order to update ngModel\n * @type {?}\n */\nMdRadioGroup.prototype._controlValueAccessorChangeFn;\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n * \\@docs-private\n * @type {?}\n */\nMdRadioGroup.prototype.onTouched;\n/**\n * Event emitted when the group value changes.\n * Change events are only emitted when the value changes due to user interaction with\n * a radio button (the same behavior as `<input type-\"radio\">`).\n * @type {?}\n */\nMdRadioGroup.prototype.change;\n/**\n * Child radio buttons.\n * @type {?}\n */\nMdRadioGroup.prototype._radios;\n/** @type {?} */\nMdRadioGroup.prototype._changeDetector;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdRadioButtonBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdRadioButtonBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRadioButtonBase.prototype._renderer;\n/** @type {?} */\nMdRadioButtonBase.prototype._elementRef;\n}\n\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nexport const /** @type {?} */ _MdRadioButtonMixinBase = mixinColor(mixinDisableRipple(MdRadioButtonBase), 'accent');\n/**\n * A radio-button. May be inside of\n */\nexport class MdRadioButton extends _MdRadioButtonMixinBase\n    implements OnInit, AfterViewInit, OnDestroy, CanColor, CanDisableRipple {\nprivate _uniqueId: string = `md-radio-${++nextUniqueId}`;\n/**\n * The unique ID for the radio button.\n */\nid: string = this._uniqueId;\n/**\n * Analog to HTML 'name' attribute used to group radios for unique selection.\n */\nname: string;\n/**\n * Used to set the 'aria-label' attribute on the underlying input element.\n */\nariaLabel: string;\n/**\n * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n */\nariaLabelledby: string;\n/**\n * Whether this radio button is checked.\n * @return {?}\n */\nget checked(): boolean {\n    return this._checked;\n  }\n/**\n * @param {?} newCheckedState\n * @return {?}\n */\nset checked(newCheckedState: boolean) {\n    if (this._checked != newCheckedState) {\n      this._checked = newCheckedState;\n\n      if (newCheckedState && this.radioGroup && this.radioGroup.value != this.value) {\n        this.radioGroup.selected = this;\n      } else if (!newCheckedState && this.radioGroup && this.radioGroup.value == this.value) {\n        // When unchecking the selected radio button, update the selected radio\n        // property on the group.\n        this.radioGroup.selected = null;\n      }\n\n      if (newCheckedState) {\n        // Notify all radio buttons with the same name to un-check.\n        this._radioDispatcher.notify(this.id, this.name);\n      }\n      this._changeDetector.markForCheck();\n    }\n  }\n/**\n * The value of this radio button.\n * @return {?}\n */\nget value(): any {\n    return this._value;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n    if (this._value != value) {\n      this._value = value;\n      if (this.radioGroup != null) {\n        if (!this.checked) {\n          // Update checked when the value changed to match the radio group's value\n          this.checked = this.radioGroup.value == value;\n        }\n        if (this.checked) {\n          this.radioGroup.selected = this;\n        }\n      }\n    }\n  }\n/**\n * Whether or not the radio-button should appear before or after the label.\n * @deprecated\n * @return {?}\n */\nget align(): 'start' | 'end' {\n    // align refers to the checkbox relative to the label, while labelPosition refers to the\n    // label relative to the checkbox. As such, they are inverted.\n    return this.labelPosition == 'after' ? 'start' : 'end';\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset align(v) {\n    this.labelPosition = (v == 'start') ? 'after' : 'before';\n  }\nprivate _labelPosition: 'before' | 'after';\n/**\n * Whether the label should appear after or before the radio button. Defaults to 'after'\n * @return {?}\n */\nget labelPosition(): 'before' | 'after' {\n    return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset labelPosition(value) {\n    this._labelPosition = value;\n  }\n/**\n * Whether the radio button is disabled.\n * @return {?}\n */\nget disabled(): boolean {\n    return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n/**\n * Whether the radio button is required.\n * @return {?}\n */\nget required(): boolean {\n    return this._required || (this.radioGroup && this.radioGroup.required);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n/**\n * Event emitted when the checked state of this radio button changes.\n * Change events are only emitted when the value changes due to user interaction with\n * the radio button (the same behavior as `<input type-\"radio\">`).\n */\nchange: EventEmitter<MdRadioChange> = new EventEmitter<MdRadioChange>();\n/**\n * The parent radio group. May or may not be present.\n */\nradioGroup: MdRadioGroup;\n/**\n * ID of the native input element inside `<md-radio-button>`\n * @return {?}\n */\nget inputId(): string { return `${this.id || this._uniqueId}-input`; }\n/**\n * Whether this radio is checked.\n */\nprivate _checked: boolean = false;\n/**\n * Whether this radio is disabled.\n */\nprivate _disabled: boolean;\n/**\n * Whether this radio is required.\n */\nprivate _required: boolean;\n/**\n * Value assigned to this radio.\n */\nprivate _value: any = null;\n/**\n * The child ripple instance.\n */\n_ripple: MdRipple;\n/**\n * Reference to the current focus ripple.\n */\nprivate _focusRipple: RippleRef | null;\n/**\n * Unregister function for _radioDispatcher *\n */\nprivate _removeUniqueSelectionListener: () => void = () => {};\n/**\n * The native `<input type=radio>` element\n */\n_inputElement: ElementRef;\n/**\n * @param {?} radioGroup\n * @param {?} elementRef\n * @param {?} renderer\n * @param {?} _changeDetector\n * @param {?} _focusOriginMonitor\n * @param {?} _radioDispatcher\n */\nconstructor( radioGroup: MdRadioGroup,\n              elementRef: ElementRef,\n              renderer: Renderer2,\nprivate _changeDetector: ChangeDetectorRef,\nprivate _focusOriginMonitor: FocusOriginMonitor,\nprivate _radioDispatcher: UniqueSelectionDispatcher) {\n    super(renderer, elementRef);\n\n    // Assertions. Ideally these should be stripped out by the compiler.\n    // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n    this.radioGroup = radioGroup;\n\n    this._removeUniqueSelectionListener =\n      _radioDispatcher.listen((id: string, name: string) => {\n        if (id != this.id && name == this.name) {\n          this.checked = false;\n        }\n      });\n  }\n/**\n * Focuses the radio button.\n * @return {?}\n */\nfocus(): void {\n    this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n  }\n/**\n * Marks the radio button as needing checking for change detection.\n * This method is exposed because the parent radio group will directly\n * update bound properties of the radio button.\n * @return {?}\n */\n_markForCheck() {\n    // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n    // update radio button's status\n    this._changeDetector.markForCheck();\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.radioGroup) {\n      // If the radio is inside a radio group, determine if it should be checked\n      this.checked = this.radioGroup.value === this._value;\n      // Copy name from parent radio group\n      this.name = this.radioGroup.name;\n    }\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this._focusOriginMonitor\n      .monitor(this._inputElement.nativeElement, this._renderer, false)\n      .subscribe(focusOrigin => this._onInputFocusChange(focusOrigin));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);\n    this._removeUniqueSelectionListener();\n  }\n/**\n * Dispatch change event with current value.\n * @return {?}\n */\nprivate _emitChangeEvent(): void {\n    const /** @type {?} */ event = new MdRadioChange();\n    event.source = this;\n    event.value = this._value;\n    this.change.emit(event);\n  }\n/**\n * @return {?}\n */\n_isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `radio-button` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n/**\n * Triggered when the radio button received a click or the input recognized any change.\n * Clicking on a label element, will trigger a change event on the associated input.\n * @param {?} event\n * @return {?}\n */\n_onInputChange(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n\n    const /** @type {?} */ groupValueChanged = this.radioGroup && this.value != this.radioGroup.value;\n    this.checked = true;\n    this._emitChangeEvent();\n\n    if (this.radioGroup) {\n      this.radioGroup._controlValueAccessorChangeFn(this.value);\n      this.radioGroup._touch();\n      if (groupValueChanged) {\n        this.radioGroup._emitChangeEvent();\n      }\n    }\n  }\n/**\n * Function is called whenever the focus changes for the input element.\n * @param {?} focusOrigin\n * @return {?}\n */\nprivate _onInputFocusChange(focusOrigin: FocusOrigin) {\n    if (!this._focusRipple && focusOrigin === 'keyboard') {\n      this._focusRipple = this._ripple.launch(0, 0, {persistent: true, centered: true});\n    } else if (!focusOrigin) {\n      if (this.radioGroup) {\n        this.radioGroup._touch();\n      }\n\n      if (this._focusRipple) {\n        this._focusRipple.fadeOut();\n        this._focusRipple = null;\n      }\n    }\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-radio-button, mat-radio-button',\n  templateUrl: 'radio.html',\n  styleUrls: ['radio.css'],\n  inputs: ['color', 'disableRipple'],\n  encapsulation: ViewEncapsulation.None,\n  host: {\n    'class': 'mat-radio-button',\n    '[class.mat-radio-checked]': 'checked',\n    '[class.mat-radio-disabled]': 'disabled',\n    '[attr.id]': 'id',\n    // Note: under normal conditions focus shouldn't land on this element, however it may be\n    // programmatically set, for example inside of a focus trap, in this case we want to forward\n    // the focus to the native element.\n    '(focus)': '_inputElement.nativeElement.focus()',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdRadioGroup, decorators: [{ type: Optional }, ]},\n{type: ElementRef, },\n{type: Renderer2, },\n{type: ChangeDetectorRef, },\n{type: FocusOriginMonitor, },\n{type: UniqueSelectionDispatcher, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'checked': [{ type: Input },],\n'value': [{ type: Input },],\n'align': [{ type: Input },],\n'labelPosition': [{ type: Input },],\n'disabled': [{ type: Input },],\n'required': [{ type: Input },],\n'change': [{ type: Output },],\n'_ripple': [{ type: ViewChild, args: [MdRipple, ] },],\n'_inputElement': [{ type: ViewChild, args: ['input', ] },],\n};\n}\n\nfunction MdRadioButton_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRadioButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRadioButton.ctorParameters;\n/** @type {?} */\nMdRadioButton.propDecorators;\n/** @type {?} */\nMdRadioButton.prototype._uniqueId;\n/**\n * The unique ID for the radio button.\n * @type {?}\n */\nMdRadioButton.prototype.id;\n/**\n * Analog to HTML 'name' attribute used to group radios for unique selection.\n * @type {?}\n */\nMdRadioButton.prototype.name;\n/**\n * Used to set the 'aria-label' attribute on the underlying input element.\n * @type {?}\n */\nMdRadioButton.prototype.ariaLabel;\n/**\n * The 'aria-labelledby' attribute takes precedence as the element's text alternative.\n * @type {?}\n */\nMdRadioButton.prototype.ariaLabelledby;\n/** @type {?} */\nMdRadioButton.prototype._labelPosition;\n/**\n * Event emitted when the checked state of this radio button changes.\n * Change events are only emitted when the value changes due to user interaction with\n * the radio button (the same behavior as `<input type-\"radio\">`).\n * @type {?}\n */\nMdRadioButton.prototype.change;\n/**\n * The parent radio group. May or may not be present.\n * @type {?}\n */\nMdRadioButton.prototype.radioGroup;\n/**\n * Whether this radio is checked.\n * @type {?}\n */\nMdRadioButton.prototype._checked;\n/**\n * Whether this radio is disabled.\n * @type {?}\n */\nMdRadioButton.prototype._disabled;\n/**\n * Whether this radio is required.\n * @type {?}\n */\nMdRadioButton.prototype._required;\n/**\n * Value assigned to this radio.\n * @type {?}\n */\nMdRadioButton.prototype._value;\n/**\n * The child ripple instance.\n * @type {?}\n */\nMdRadioButton.prototype._ripple;\n/**\n * Reference to the current focus ripple.\n * @type {?}\n */\nMdRadioButton.prototype._focusRipple;\n/**\n * Unregister function for _radioDispatcher *\n * @type {?}\n */\nMdRadioButton.prototype._removeUniqueSelectionListener;\n/**\n * The native `<input type=radio>` element\n * @type {?}\n */\nMdRadioButton.prototype._inputElement;\n/** @type {?} */\nMdRadioButton.prototype._changeDetector;\n/** @type {?} */\nMdRadioButton.prototype._focusOriginMonitor;\n/** @type {?} */\nMdRadioButton.prototype._radioDispatcher;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {MdRippleModule, MdCommonModule, FocusOriginMonitor} from '../core';\nimport {MdCheckbox} from './checkbox';\nimport {MdCheckboxRequiredValidator} from './checkbox-required-validator';\nexport class MdCheckboxModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, MdRippleModule, MdCommonModule, ObserversModule],\n  exports: [MdCheckbox, MdCheckboxRequiredValidator, MdCommonModule],\n  declarations: [MdCheckbox, MdCheckboxRequiredValidator],\n  providers: [FocusOriginMonitor]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCheckboxModule.ctorParameters;\n}\n\n\n\nexport {MD_CHECKBOX_CONTROL_VALUE_ACCESSOR,TransitionCheckState,MdCheckboxChange,MdCheckboxBase,_MdCheckboxMixinBase,MdCheckbox} from './checkbox';\nexport {_MdCheckboxRequiredValidator,MD_CHECKBOX_REQUIRED_VALIDATOR,MdCheckboxRequiredValidator} from './checkbox-required-validator';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  forwardRef,\n  Provider,\n} from '@angular/core';\nimport {\n  CheckboxRequiredValidator,\n  NG_VALIDATORS,\n} from '@angular/forms';\n\nexport const /** @type {?} */ _MdCheckboxRequiredValidator = CheckboxRequiredValidator;\n\nexport const /** @type {?} */ MD_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MdCheckboxRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `md-checkbox`.\n */\nexport class MdCheckboxRequiredValidator extends _MdCheckboxRequiredValidator {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: `md-checkbox[required][formControlName],\n             mat-checkbox[required][formControlName],\n             md-checkbox[required][formControl], md-checkbox[required][ngModel],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n  providers: [MD_CHECKBOX_REQUIRED_VALIDATOR],\n  host: {'[attr.required]': 'required ? \"\" : null'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCheckboxRequiredValidator_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCheckboxRequiredValidator.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCheckboxRequiredValidator.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  Output,\n  Renderer2,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FocusOrigin, FocusOriginMonitor, MdRipple, RippleRef} from '../core';\nimport {mixinDisabled, CanDisable} from '../core/common-behaviors/disabled';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nimport {CanDisableRipple, mixinDisableRipple} from '../core/common-behaviors/disable-ripple';\n\n// Increasing integer for generating unique ids for checkbox components.\nlet /** @type {?} */ nextUniqueId = 0;\n/**\n * Provider Expression that allows md-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n */\nexport const MD_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdCheckbox),\n  multi: true\n};\nexport type TransitionCheckState = number;\nexport let TransitionCheckState: any = {};\nTransitionCheckState.Init = 0;\nTransitionCheckState.Checked = 1;\nTransitionCheckState.Unchecked = 2;\nTransitionCheckState.Indeterminate = 3;\nTransitionCheckState[TransitionCheckState.Init] = \"Init\";\nTransitionCheckState[TransitionCheckState.Checked] = \"Checked\";\nTransitionCheckState[TransitionCheckState.Unchecked] = \"Unchecked\";\nTransitionCheckState[TransitionCheckState.Indeterminate] = \"Indeterminate\";\n\n/**\n * Change event object emitted by MdCheckbox.\n */\nexport class MdCheckboxChange {\n/**\n * The source MdCheckbox of the event.\n */\nsource: MdCheckbox;\n/**\n * The new `checked` value of the checkbox.\n */\nchecked: boolean;\n}\n\nfunction MdCheckboxChange_tsickle_Closure_declarations() {\n/**\n * The source MdCheckbox of the event.\n * @type {?}\n */\nMdCheckboxChange.prototype.source;\n/**\n * The new `checked` value of the checkbox.\n * @type {?}\n */\nMdCheckboxChange.prototype.checked;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdCheckboxBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdCheckboxBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCheckboxBase.prototype._renderer;\n/** @type {?} */\nMdCheckboxBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdCheckboxMixinBase =\n  mixinColor(mixinDisableRipple(mixinDisabled(MdCheckboxBase)), 'accent');\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MdCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://www.google.com/design/spec/components/selection-controls.html\n */\nexport class MdCheckbox extends _MdCheckboxMixinBase implements ControlValueAccessor, AfterViewInit,\n    OnDestroy, CanColor, CanDisable, CanDisableRipple {\n/**\n * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n * take precedence so this may be omitted.\n */\nariaLabel: string = '';\n/**\n * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n */\nariaLabelledby: string | null = null;\nprivate _uniqueId: string = `md-checkbox-${++nextUniqueId}`;\n/**\n * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n */\nid: string = this._uniqueId;\n/**\n * Returns the unique id for the visual hidden input.\n * @return {?}\n */\nget inputId(): string { return `${this.id || this._uniqueId}-input`; }\nprivate _required: boolean;\n/**\n * Whether the checkbox is required.\n * @return {?}\n */\nget required(): boolean { return this._required; }\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value) { this._required = coerceBooleanProperty(value); }\n/**\n * Whether or not the checkbox should appear before or after the label.\n * @deprecated\n * @return {?}\n */\nget align(): 'start' | 'end' {\n    // align refers to the checkbox relative to the label, while labelPosition refers to the\n    // label relative to the checkbox. As such, they are inverted.\n    return this.labelPosition == 'after' ? 'start' : 'end';\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset align(v) {\n    this.labelPosition = (v == 'start') ? 'after' : 'before';\n  }\n/**\n * Whether the label should appear after or before the checkbox. Defaults to 'after'\n */\nlabelPosition: 'before' | 'after' = 'after';\n/**\n * Tabindex value that is passed to the underlying input element.\n */\ntabIndex: number = 0;\n/**\n * Name value will be applied to the input element if present\n */\nname: string | null = null;\n/**\n * Event emitted when the checkbox's `checked` value changes.\n */\nchange: EventEmitter<MdCheckboxChange> = new EventEmitter<MdCheckboxChange>();\n/**\n * Event emitted when the checkbox's `indeterminate` value changes.\n */\nindeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n/**\n * The value attribute of the native input element\n */\nvalue: string ;\n/**\n * The native `<input type=\"checkbox\"> element\n */\n_inputElement: ElementRef;\n/**\n * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n */\n_ripple: MdRipple;\n/**\n * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n * \\@docs-private\n */\nonTouched: () => any = () => {};\nprivate _currentAnimationClass: string = '';\nprivate _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\nprivate _checked: boolean = false;\nprivate _indeterminate: boolean = false;\nprivate _controlValueAccessorChangeFn: (value: any) => void = () => {};\n/**\n * Reference to the focused state ripple.\n */\nprivate _focusRipple: RippleRef | null;\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _changeDetectorRef\n * @param {?} _focusOriginMonitor\n */\nconstructor(renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _focusOriginMonitor: FocusOriginMonitor) {\n    super(renderer, elementRef);\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this._focusOriginMonitor\n      .monitor(this._inputElement.nativeElement, this._renderer, false)\n      .subscribe(focusOrigin => this._onInputFocusChange(focusOrigin));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._inputElement.nativeElement);\n  }\n/**\n * Whether the checkbox is checked.\n * @return {?}\n */\nget checked() {\n    return this._checked;\n  }\n/**\n * @param {?} checked\n * @return {?}\n */\nset checked(checked: boolean) {\n    if (checked != this.checked) {\n      this._checked = checked;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n * set to false.\n * @return {?}\n */\nget indeterminate() {\n    return this._indeterminate;\n  }\n/**\n * @param {?} indeterminate\n * @return {?}\n */\nset indeterminate(indeterminate: boolean) {\n    let /** @type {?} */ changed =  indeterminate != this._indeterminate;\n    this._indeterminate = indeterminate;\n\n    if (changed) {\n      if (this._indeterminate) {\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\n      } else {\n        this._transitionCheckState(\n          this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      }\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n  }\n/**\n * @return {?}\n */\n_isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n/**\n * Method being called whenever the label text changes.\n * @return {?}\n */\n_onLabelTextChange() {\n    // This method is getting called whenever the label of the checkbox changes.\n    // Since the checkbox uses the OnPush strategy we need to notify it about the change\n    // that has been recognized by the cdkObserveContent directive.\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Sets the model value. Implemented as part of ControlValueAccessor.\n * @param {?} value Value to be set to the model.\n * @return {?}\n */\nwriteValue(value: any) {\n    this.checked = !!value;\n  }\n/**\n * Registers a callback to be triggered when the value has changed.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Function to be called on change.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n/**\n * Registers a callback to be triggered when the control has been touched.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn Callback to be triggered when the checkbox is touched.\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n/**\n * Sets the checkbox's disabled state. Implemented as a part of ControlValueAccessor.\n * @param {?} isDisabled Whether the checkbox should be disabled.\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * @param {?} newState\n * @return {?}\n */\nprivate _transitionCheckState(newState: TransitionCheckState) {\n    let /** @type {?} */ oldState = this._currentCheckState;\n    let /** @type {?} */ renderer = this._renderer;\n    let /** @type {?} */ elementRef = this._elementRef;\n\n    if (oldState === newState) {\n      return;\n    }\n    if (this._currentAnimationClass.length > 0) {\n      renderer.removeClass(elementRef.nativeElement, this._currentAnimationClass);\n    }\n\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(\n        oldState, newState);\n    this._currentCheckState = newState;\n\n    if (this._currentAnimationClass.length > 0) {\n      renderer.addClass(elementRef.nativeElement, this._currentAnimationClass);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _emitChangeEvent() {\n    let /** @type {?} */ event = new MdCheckboxChange();\n    event.source = this;\n    event.checked = this.checked;\n\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(event);\n  }\n/**\n * Function is called whenever the focus changes for the input element.\n * @param {?} focusOrigin\n * @return {?}\n */\nprivate _onInputFocusChange(focusOrigin: FocusOrigin) {\n    if (!this._focusRipple && focusOrigin === 'keyboard') {\n      this._focusRipple = this._ripple.launch(0, 0, {persistent: true, centered: true});\n    } else if (!focusOrigin) {\n      this._removeFocusRipple();\n      this.onTouched();\n    }\n  }\n/**\n * Toggles the `checked` state of the checkbox.\n * @return {?}\n */\ntoggle(): void {\n    this.checked = !this.checked;\n  }\n/**\n * Event handler for checkbox input element.\n * Toggles checked state if element is not disabled.\n * Do not toggle on (change) event since IE doesn't fire change event when\n *   indeterminate checkbox is clicked.\n * @param {?} event\n * @return {?}\n */\n_onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `checkbox` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n\n    this._removeFocusRipple();\n\n    if (!this.disabled) {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this._indeterminate) {\n        Promise.resolve().then(() => {\n          this._indeterminate = false;\n          this.indeterminateChange.emit(this._indeterminate);\n        });\n      }\n\n      this.toggle();\n      this._transitionCheckState(\n        this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    }\n  }\n/**\n * Focuses the checkbox.\n * @return {?}\n */\nfocus(): void {\n    this._focusOriginMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onInteractionEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n/**\n * @param {?} oldState\n * @param {?} newState\n * @return {?}\n */\nprivate _getAnimationClassForCheckStateTransition(\n      oldState: TransitionCheckState, newState: TransitionCheckState): string {\n    let /** @type {?} */ animSuffix: string = '';\n\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n        // [checked] bound to it.\n        if (newState === TransitionCheckState.Checked) {\n          animSuffix = 'unchecked-checked';\n        } else if (newState == TransitionCheckState.Indeterminate) {\n          animSuffix = 'unchecked-indeterminate';\n        } else {\n          return '';\n        }\n        break;\n      case TransitionCheckState.Unchecked:\n        animSuffix = newState === TransitionCheckState.Checked ?\n            'unchecked-checked' : 'unchecked-indeterminate';\n        break;\n      case TransitionCheckState.Checked:\n        animSuffix = newState === TransitionCheckState.Unchecked ?\n            'checked-unchecked' : 'checked-indeterminate';\n        break;\n      case TransitionCheckState.Indeterminate:\n        animSuffix = newState === TransitionCheckState.Checked ?\n            'indeterminate-checked' : 'indeterminate-unchecked';\n        break;\n    }\n\n    return `mat-checkbox-anim-${animSuffix}`;\n  }\n/**\n * Fades out the focus state ripple.\n * @return {?}\n */\nprivate _removeFocusRipple(): void {\n    if (this._focusRipple) {\n      this._focusRipple.fadeOut();\n      this._focusRipple = null;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-checkbox, mat-checkbox',\n  templateUrl: 'checkbox.html',\n  styleUrls: ['checkbox.css'],\n  host: {\n    'class': 'mat-checkbox',\n    '[id]': 'id',\n    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n    '[class.mat-checkbox-checked]': 'checked',\n    '[class.mat-checkbox-disabled]': 'disabled',\n    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n  },\n  providers: [MD_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  inputs: ['disabled', 'disableRipple', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: FocusOriginMonitor, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'id': [{ type: Input },],\n'required': [{ type: Input },],\n'align': [{ type: Input },],\n'labelPosition': [{ type: Input },],\n'tabIndex': [{ type: Input },],\n'name': [{ type: Input },],\n'change': [{ type: Output },],\n'indeterminateChange': [{ type: Output },],\n'value': [{ type: Input },],\n'_inputElement': [{ type: ViewChild, args: ['input', ] },],\n'_ripple': [{ type: ViewChild, args: [MdRipple, ] },],\n'checked': [{ type: Input },],\n'indeterminate': [{ type: Input },],\n};\n}\n\nfunction MdCheckbox_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCheckbox.ctorParameters;\n/** @type {?} */\nMdCheckbox.propDecorators;\n/**\n * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n * take precedence so this may be omitted.\n * @type {?}\n */\nMdCheckbox.prototype.ariaLabel;\n/**\n * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n * @type {?}\n */\nMdCheckbox.prototype.ariaLabelledby;\n/** @type {?} */\nMdCheckbox.prototype._uniqueId;\n/**\n * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n * @type {?}\n */\nMdCheckbox.prototype.id;\n/** @type {?} */\nMdCheckbox.prototype._required;\n/**\n * Whether the label should appear after or before the checkbox. Defaults to 'after'\n * @type {?}\n */\nMdCheckbox.prototype.labelPosition;\n/**\n * Tabindex value that is passed to the underlying input element.\n * @type {?}\n */\nMdCheckbox.prototype.tabIndex;\n/**\n * Name value will be applied to the input element if present\n * @type {?}\n */\nMdCheckbox.prototype.name;\n/**\n * Event emitted when the checkbox's `checked` value changes.\n * @type {?}\n */\nMdCheckbox.prototype.change;\n/**\n * Event emitted when the checkbox's `indeterminate` value changes.\n * @type {?}\n */\nMdCheckbox.prototype.indeterminateChange;\n/**\n * The value attribute of the native input element\n * @type {?}\n */\nMdCheckbox.prototype.value;\n/**\n * The native `<input type=\"checkbox\"> element\n * @type {?}\n */\nMdCheckbox.prototype._inputElement;\n/**\n * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n * @type {?}\n */\nMdCheckbox.prototype._ripple;\n/**\n * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n * \\@docs-private\n * @type {?}\n */\nMdCheckbox.prototype.onTouched;\n/** @type {?} */\nMdCheckbox.prototype._currentAnimationClass;\n/** @type {?} */\nMdCheckbox.prototype._currentCheckState;\n/** @type {?} */\nMdCheckbox.prototype._checked;\n/** @type {?} */\nMdCheckbox.prototype._indeterminate;\n/** @type {?} */\nMdCheckbox.prototype._controlValueAccessorChangeFn;\n/**\n * Reference to the focused state ripple.\n * @type {?}\n */\nMdCheckbox.prototype._focusRipple;\n/** @type {?} */\nMdCheckbox.prototype._changeDetectorRef;\n/** @type {?} */\nMdCheckbox.prototype._focusOriginMonitor;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdCommonModule, MdRippleModule, StyleModule} from '../core';\nimport {\n  MdAnchor,\n  MdButton,\n  MdMiniFab,\n  MdButtonCssMatStyler,\n  MdFab,\n  MdIconButtonCssMatStyler,\n  MdRaisedButtonCssMatStyler\n} from './button';\n\n\nexport {MdButtonCssMatStyler,MdRaisedButtonCssMatStyler,MdIconButtonCssMatStyler,MdFab,MdMiniFab,MdButtonBase,_MdButtonMixinBase,MdButton,MdAnchor} from './button';\nexport class MdButtonModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    MdRippleModule,\n    MdCommonModule,\n    StyleModule,\n  ],\n  exports: [\n    MdButton,\n    MdAnchor,\n    MdMiniFab,\n    MdFab,\n    MdCommonModule,\n    MdButtonCssMatStyler,\n    MdRaisedButtonCssMatStyler,\n    MdIconButtonCssMatStyler,\n  ],\n  declarations: [\n    MdButton,\n    MdAnchor,\n    MdMiniFab,\n    MdFab,\n    MdButtonCssMatStyler,\n    MdRaisedButtonCssMatStyler,\n    MdIconButtonCssMatStyler,\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdButtonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButtonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  ElementRef,\n  forwardRef,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  Self,\n  ViewEncapsulation,\n  Inject,\n} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\nimport {FocusOriginMonitor} from '../core';\nimport {mixinDisabled, CanDisable} from '../core/common-behaviors/disabled';\nimport {CanColor, mixinColor} from '../core/common-behaviors/color';\nimport {CanDisableRipple, mixinDisableRipple} from '../core/common-behaviors/disable-ripple';\n/**\n * Default color palette for round buttons (md-fab and md-mini-fab)\n */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdButtonCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'button[md-button], button[mat-button], a[md-button], a[mat-button]',\n  host: {'class': 'mat-button'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdButtonCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButtonCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdRaisedButtonCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'button[md-raised-button], button[mat-raised-button], ' +\n      'a[md-raised-button], a[mat-raised-button]',\n  host: {'class': 'mat-raised-button'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRaisedButtonCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRaisedButtonCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRaisedButtonCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdIconButtonCssMatStyler {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector:\n      'button[md-icon-button], button[mat-icon-button], a[md-icon-button], a[mat-icon-button]',\n  host: {'class': 'mat-icon-button'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdIconButtonCssMatStyler_tsickle_Closure_declarations() {\n/** @type {?} */\nMdIconButtonCssMatStyler.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdIconButtonCssMatStyler.ctorParameters;\n}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * \\@docs-private\n */\nexport class MdFab {\n/**\n * @param {?} button\n * @param {?} anchor\n */\nconstructor(   button: MdButton,\n                 anchor: MdAnchor) {\n    // Set the default color palette for the md-fab components.\n    (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'button[md-fab], button[mat-fab], a[md-fab], a[mat-fab]',\n  host: {'class': 'mat-fab'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdButton, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MdButton), ] }, ]},\n{type: MdAnchor, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MdAnchor), ] }, ]},\n];\n}\n\nfunction MdFab_tsickle_Closure_declarations() {\n/** @type {?} */\nMdFab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdFab.ctorParameters;\n}\n\n/**\n * Directive that targets mini-fab buttons and anchors. It's used to apply the `mat-` class\n * to all mini-fab buttons and also is responsible for setting the default color palette.\n * \\@docs-private\n */\nexport class MdMiniFab {\n/**\n * @param {?} button\n * @param {?} anchor\n */\nconstructor(   button: MdButton,\n                 anchor: MdAnchor) {\n    // Set the default color palette for the md-mini-fab components.\n    (button || anchor).color = DEFAULT_ROUND_BUTTON_COLOR;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'button[md-mini-fab], button[mat-mini-fab], a[md-mini-fab], a[mat-mini-fab]',\n  host: {'class': 'mat-mini-fab'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdButton, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MdButton), ] }, ]},\n{type: MdAnchor, decorators: [{ type: Self }, { type: Optional }, { type: Inject, args: [forwardRef(() => MdAnchor), ] }, ]},\n];\n}\n\nfunction MdMiniFab_tsickle_Closure_declarations() {\n/** @type {?} */\nMdMiniFab.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdMiniFab.ctorParameters;\n}\n\n/**\n * \\@docs-private\n */\nexport class MdButtonBase {\n/**\n * @param {?} _renderer\n * @param {?} _elementRef\n */\nconstructor(public _renderer: Renderer2,\npublic _elementRef: ElementRef) {}\n}\n\nfunction MdButtonBase_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonBase.prototype._renderer;\n/** @type {?} */\nMdButtonBase.prototype._elementRef;\n}\n\nexport const /** @type {?} */ _MdButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MdButtonBase)));\n/**\n * Material design button.\n */\nexport class MdButton extends _MdButtonMixinBase\n    implements OnDestroy, CanDisable, CanColor, CanDisableRipple {\n/**\n * Whether the button is round.\n */\n_isRoundButton: boolean = this._hasAttributeWithPrefix('fab', 'mini-fab');\n/**\n * Whether the button is icon button.\n */\n_isIconButton: boolean = this._hasAttributeWithPrefix('icon-button');\n/**\n * @param {?} renderer\n * @param {?} elementRef\n * @param {?} _platform\n * @param {?} _focusOriginMonitor\n */\nconstructor(renderer: Renderer2,\n              elementRef: ElementRef,\nprivate _platform: Platform,\nprivate _focusOriginMonitor: FocusOriginMonitor) {\n    super(renderer, elementRef);\n    this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n/**\n * Focuses the button.\n * @return {?}\n */\nfocus(): void {\n    this._getHostElement().focus();\n  }\n/**\n * @return {?}\n */\n_getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n/**\n * @return {?}\n */\n_isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n/**\n * Gets whether the button has one of the given attributes\n * with either an 'md-' or 'mat-' prefix.\n * @param {...?} unprefixedAttributeNames\n * @return {?}\n */\n_hasAttributeWithPrefix(...unprefixedAttributeNames: string[]) {\n    // If not on the browser, say that there are none of the attributes present.\n    // Since these only affect how the ripple displays (and ripples only happen on the client),\n    // detecting these attributes isn't necessary when not on the browser.\n    if (!this._platform.isBrowser) {\n      return false;\n    }\n\n    return unprefixedAttributeNames.some(suffix => {\n      const /** @type {?} */ el = this._getHostElement();\n\n      return el.hasAttribute('md-' + suffix) || el.hasAttribute('mat-' + suffix);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: `button[md-button], button[md-raised-button], button[md-icon-button],\n             button[md-fab], button[md-mini-fab],\n             button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab]`,\n  host: {\n    '[disabled]': 'disabled || null',\n  },\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  inputs: ['disabled', 'disableRipple', 'color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n{type: ElementRef, },\n{type: Platform, },\n{type: FocusOriginMonitor, },\n];\n}\n\nfunction MdButton_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButton.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButton.ctorParameters;\n/**\n * Whether the button is round.\n * @type {?}\n */\nMdButton.prototype._isRoundButton;\n/**\n * Whether the button is icon button.\n * @type {?}\n */\nMdButton.prototype._isIconButton;\n/** @type {?} */\nMdButton.prototype._platform;\n/** @type {?} */\nMdButton.prototype._focusOriginMonitor;\n}\n\n/**\n * Raised Material design button.\n */\nexport class MdAnchor extends MdButton {\n/**\n * @param {?} platform\n * @param {?} focusOriginMonitor\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(\n      platform: Platform,\n      focusOriginMonitor: FocusOriginMonitor,\n      elementRef: ElementRef,\n      renderer: Renderer2) {\n    super(renderer, elementRef, platform, focusOriginMonitor);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_haltDisabledEvents(event: Event) {\n    // A disabled button shouldn't apply any actions\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: `a[md-button], a[md-raised-button], a[md-icon-button], a[md-fab], a[md-mini-fab],\n             a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab], a[mat-mini-fab]`,\n  host: {\n    '[attr.tabindex]': 'disabled ? -1 : 0',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '(click)': '_haltDisabledEvents($event)',\n  },\n  inputs: ['disabled', 'disableRipple', 'color'],\n  templateUrl: 'button.html',\n  styleUrls: ['button.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Platform, },\n{type: FocusOriginMonitor, },\n{type: ElementRef, },\n{type: Renderer2, },\n];\n}\n\nfunction MdAnchor_tsickle_Closure_declarations() {\n/** @type {?} */\nMdAnchor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdAnchor.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisableRipple {\n  disableRipple: boolean;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T)\n    : Constructor<CanDisableRipple> & T {\n  return class extends base {\nprivate _disableRipple: boolean = false;\n/**\n * Whether the ripple effect is disabled or not.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Constructor} from './constructor';\nimport {ElementRef, Renderer2} from '@angular/core';\n\n/** @docs-private */\nexport interface CanColor {\n  color: ThemePalette;\n}\n\n/** @docs-private */\nexport interface HasRenderer {\n  _renderer: Renderer2;\n  _elementRef: ElementRef;\n}\n\n/** Possible color palette values.  */\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nexport function mixinColor<T extends Constructor<HasRenderer>>(base: T, defaultColor?: ThemePalette)\n    : Constructor<CanColor> & T {\n  return class extends base {\nprivate _color: ThemePalette;\n/**\n * @return {?}\n */\nget color(): ThemePalette { return this._color; }\n/**\n * @param {?} value\n * @return {?}\n */\nset color(value: ThemePalette) {\n      const /** @type {?} */ colorPalette = value || defaultColor;\n\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._renderer.removeClass(this._elementRef.nativeElement, `mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._renderer.addClass(this._elementRef.nativeElement, `mat-${colorPalette}`);\n        }\n\n        this._color = colorPalette;\n      }\n    }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) {\n      super(...args);\n\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle} from './button-toggle';\nimport {\n  UNIQUE_SELECTION_DISPATCHER_PROVIDER,\n  MdCommonModule,\n  StyleModule,\n} from '../core';\nexport class MdButtonToggleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule, StyleModule],\n  exports: [\n    MdButtonToggleGroup,\n    MdButtonToggleGroupMultiple,\n    MdButtonToggle,\n    MdCommonModule,\n  ],\n  declarations: [MdButtonToggleGroup, MdButtonToggleGroupMultiple, MdButtonToggle],\n  providers: [UNIQUE_SELECTION_DISPATCHER_PROVIDER]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdButtonToggleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonToggleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButtonToggleModule.ctorParameters;\n}\n\n\n\nexport {ToggleType,MdButtonToggleGroupBase,_MdButtonToggleGroupMixinBase,MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,MdButtonToggleChange,MdButtonToggleGroup,MdButtonToggleGroupMultiple,MdButtonToggle} from './button-toggle';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Renderer2,\n  EventEmitter,\n  Input,\n  OnInit,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  forwardRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {UniqueSelectionDispatcher, FocusOriginMonitor} from '../core';\nimport {CanDisable, mixinDisabled} from '../core/common-behaviors/disabled';\n\n/** Acceptable types for a button toggle. */\nexport type ToggleType = 'checkbox' | 'radio';\n/**\n * \\@docs-private\n */\nexport class MdButtonToggleGroupBase {}\nexport const /** @type {?} */ _MdButtonToggleGroupMixinBase = mixinDisabled(MdButtonToggleGroupBase);\n/**\n * Provider Expression that allows md-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n */\nexport const MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdButtonToggleGroup),\n  multi: true\n};\n\nlet /** @type {?} */ _uniqueIdCounter = 0;\n/**\n * Change event object emitted by MdButtonToggle.\n */\nexport class MdButtonToggleChange {\n/**\n * The MdButtonToggle that emits the event.\n */\nsource: MdButtonToggle | null;\n/**\n * The value assigned to the MdButtonToggle.\n */\nvalue: any;\n}\n\nfunction MdButtonToggleChange_tsickle_Closure_declarations() {\n/**\n * The MdButtonToggle that emits the event.\n * @type {?}\n */\nMdButtonToggleChange.prototype.source;\n/**\n * The value assigned to the MdButtonToggle.\n * @type {?}\n */\nMdButtonToggleChange.prototype.value;\n}\n\n/**\n * Exclusive selection button toggle group that behaves like a radio-button group.\n */\nexport class MdButtonToggleGroup extends _MdButtonToggleGroupMixinBase\n    implements ControlValueAccessor, CanDisable {\n/**\n * The value for the button toggle group. Should match currently selected button toggle.\n */\nprivate _value: any = null;\n/**\n * The HTML name attribute applied to toggles in this group.\n */\nprivate _name: string = `md-button-toggle-group-${_uniqueIdCounter++}`;\n/**\n * Whether the button toggle group should be vertical.\n */\nprivate _vertical: boolean = false;\n/**\n * The currently selected button toggle, should match the value.\n */\nprivate _selected: MdButtonToggle | null = null;\n/**\n * The method to be called in order to update ngModel.\n * Now `ngModel` binding is not supported in multiple selection mode.\n */\n_controlValueAccessorChangeFn: (value: any) => void = () => {};\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n */\nonTouched: () => any = () => {};\n/**\n * Child button toggle buttons.\n */\n_buttonToggles: QueryList<MdButtonToggle>;\n/**\n * `name` attribute for the underlying `input` element.\n * @return {?}\n */\nget name(): string {\n    return this._name;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset name(value: string) {\n    this._name = value;\n    this._updateButtonToggleNames();\n  }\n/**\n * Whether the toggle group is vertical.\n * @return {?}\n */\nget vertical(): boolean {\n    return this._vertical;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\n/**\n * Value of the toggle group.\n * @return {?}\n */\nget value(): any {\n    return this._value;\n  }\n/**\n * @param {?} newValue\n * @return {?}\n */\nset value(newValue: any) {\n    if (this._value != newValue) {\n      this._value = newValue;\n\n      this._updateSelectedButtonToggleFromValue();\n    }\n  }\n/**\n * Whether the toggle group is selected.\n * @return {?}\n */\nget selected() {\n    return this._selected;\n  }\n/**\n * @param {?} selected\n * @return {?}\n */\nset selected(selected: MdButtonToggle | null) {\n    this._selected = selected;\n    this.value = selected ? selected.value : null;\n\n    if (selected && !selected.checked) {\n      selected.checked = true;\n    }\n  }\n/**\n * Event emitted when the group's value changes.\n */\nchange: EventEmitter<MdButtonToggleChange> = new EventEmitter<MdButtonToggleChange>();\n/**\n * @param {?} _changeDetector\n */\nconstructor(private _changeDetector: ChangeDetectorRef) {\n    super();\n  }\n/**\n * @return {?}\n */\nprivate _updateButtonToggleNames(): void {\n    if (this._buttonToggles) {\n      this._buttonToggles.forEach((toggle) => {\n        toggle.name = this._name;\n      });\n    }\n  }\n/**\n * @return {?}\n */\nprivate _updateSelectedButtonToggleFromValue(): void {\n    let /** @type {?} */ isAlreadySelected = this._selected != null && this._selected.value == this._value;\n\n    if (this._buttonToggles != null && !isAlreadySelected) {\n      let /** @type {?} */ matchingButtonToggle = this._buttonToggles.filter(\n          buttonToggle => buttonToggle.value == this._value)[0];\n\n      if (matchingButtonToggle) {\n        this.selected = matchingButtonToggle;\n      } else if (this.value == null) {\n        this.selected = null;\n        this._buttonToggles.forEach(buttonToggle => {\n          buttonToggle.checked = false;\n        });\n      }\n    }\n  }\n/**\n * Dispatch change event with current selection and group value.\n * @return {?}\n */\n_emitChangeEvent(): void {\n    let /** @type {?} */ event = new MdButtonToggleChange();\n    event.source = this._selected;\n    event.value = this._value;\n    this._controlValueAccessorChangeFn(event.value);\n    this.change.emit(event);\n  }\n/**\n * Sets the model value. Implemented as part of ControlValueAccessor.\n * @param {?} value Value to be set to the model.\n * @return {?}\n */\nwriteValue(value: any) {\n    this.value = value;\n    this._changeDetector.markForCheck();\n  }\n/**\n * Registers a callback that will be triggered when the value has changed.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn On change callback function.\n * @return {?}\n */\nregisterOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n/**\n * Registers a callback that will be triggered when the control has been touched.\n * Implemented as part of ControlValueAccessor.\n * @param {?} fn On touch callback function.\n * @return {?}\n */\nregisterOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n/**\n * Toggles the disabled state of the component. Implemented as part of ControlValueAccessor.\n * @param {?} isDisabled Whether the component should be disabled.\n * @return {?}\n */\nsetDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-button-toggle-group:not([multiple]), mat-button-toggle-group:not([multiple])',\n  providers: [MD_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\n  inputs: ['disabled'],\n  host: {\n    'role': 'radiogroup',\n    'class': 'mat-button-toggle-group',\n    '[class.mat-button-toggle-vertical]': 'vertical'\n  },\n  exportAs: 'mdButtonToggleGroup',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'_buttonToggles': [{ type: ContentChildren, args: [forwardRef(() => MdButtonToggle), ] },],\n'name': [{ type: Input },],\n'vertical': [{ type: Input },],\n'value': [{ type: Input },],\n'selected': [{ type: Input },],\n'change': [{ type: Output },],\n};\n}\n\nfunction MdButtonToggleGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonToggleGroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButtonToggleGroup.ctorParameters;\n/** @type {?} */\nMdButtonToggleGroup.propDecorators;\n/**\n * The value for the button toggle group. Should match currently selected button toggle.\n * @type {?}\n */\nMdButtonToggleGroup.prototype._value;\n/**\n * The HTML name attribute applied to toggles in this group.\n * @type {?}\n */\nMdButtonToggleGroup.prototype._name;\n/**\n * Whether the button toggle group should be vertical.\n * @type {?}\n */\nMdButtonToggleGroup.prototype._vertical;\n/**\n * The currently selected button toggle, should match the value.\n * @type {?}\n */\nMdButtonToggleGroup.prototype._selected;\n/**\n * The method to be called in order to update ngModel.\n * Now `ngModel` binding is not supported in multiple selection mode.\n * @type {?}\n */\nMdButtonToggleGroup.prototype._controlValueAccessorChangeFn;\n/**\n * onTouch function registered via registerOnTouch (ControlValueAccessor).\n * @type {?}\n */\nMdButtonToggleGroup.prototype.onTouched;\n/**\n * Child button toggle buttons.\n * @type {?}\n */\nMdButtonToggleGroup.prototype._buttonToggles;\n/**\n * Event emitted when the group's value changes.\n * @type {?}\n */\nMdButtonToggleGroup.prototype.change;\n/** @type {?} */\nMdButtonToggleGroup.prototype._changeDetector;\n}\n\n/**\n * Multiple selection button-toggle group. `ngModel` is not supported in this mode.\n */\nexport class MdButtonToggleGroupMultiple extends _MdButtonToggleGroupMixinBase\n    implements CanDisable {\n/**\n * Whether the button toggle group should be vertical.\n */\nprivate _vertical: boolean = false;\n/**\n * Whether the toggle group is vertical.\n * @return {?}\n */\nget vertical(): boolean {\n    return this._vertical;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset vertical(value) {\n    this._vertical = coerceBooleanProperty(value);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'md-button-toggle-group[multiple], mat-button-toggle-group[multiple]',\n  exportAs: 'mdButtonToggleGroup',\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-button-toggle-group',\n    '[class.mat-button-toggle-vertical]': 'vertical',\n    'role': 'group'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'vertical': [{ type: Input },],\n};\n}\n\nfunction MdButtonToggleGroupMultiple_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonToggleGroupMultiple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButtonToggleGroupMultiple.ctorParameters;\n/** @type {?} */\nMdButtonToggleGroupMultiple.propDecorators;\n/**\n * Whether the button toggle group should be vertical.\n * @type {?}\n */\nMdButtonToggleGroupMultiple.prototype._vertical;\n}\n\n/**\n * Single button inside of a toggle group.\n */\nexport class MdButtonToggle implements OnInit, OnDestroy {\n/**\n * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n * take precedence so this may be omitted.\n */\nariaLabel: string = '';\n/**\n * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n */\nariaLabelledby: string | null = null;\n/**\n * Whether or not this button toggle is checked.\n */\nprivate _checked: boolean = false;\n/**\n * Type of the button toggle. Either 'radio' or 'checkbox'.\n */\n_type: ToggleType;\n/**\n * Whether or not this button toggle is disabled.\n */\nprivate _disabled: boolean = false;\n/**\n * Value assigned to this button toggle.\n */\nprivate _value: any = null;\n/**\n * Whether or not the button toggle is a single selection.\n */\nprivate _isSingleSelector: boolean = false;\n/**\n * Unregister function for _buttonToggleDispatcher *\n */\nprivate _removeUniqueSelectionListener: () => void = () => {};\n\n   _inputElement: ElementRef;\n/**\n * The parent button toggle group (exclusive selection). Optional.\n */\nbuttonToggleGroup: MdButtonToggleGroup;\n/**\n * The parent button toggle group (multiple selection). Optional.\n */\nbuttonToggleGroupMultiple: MdButtonToggleGroupMultiple;\n/**\n * Unique ID for the underlying `input` element.\n * @return {?}\n */\nget inputId(): string {\n    return `${this.id}-input`;\n  }\n/**\n * The unique ID for this button toggle.\n */\nid: string;\n/**\n * HTML's 'name' attribute used to group radios for unique selection.\n */\nname: string;\n/**\n * Whether the button is checked.\n * @return {?}\n */\nget checked(): boolean { return this._checked; }\n/**\n * @param {?} newCheckedState\n * @return {?}\n */\nset checked(newCheckedState: boolean) {\n    if (this._isSingleSelector && newCheckedState) {\n      // Notify all button toggles with the same name (in the same group) to un-check.\n      this._buttonToggleDispatcher.notify(this.id, this.name);\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._checked = newCheckedState;\n\n    if (newCheckedState && this._isSingleSelector && this.buttonToggleGroup.value != this.value) {\n      this.buttonToggleGroup.selected = this;\n    }\n  }\n/**\n * MdButtonToggleGroup reads this to assign its own value.\n * @return {?}\n */\nget value(): any {\n    return this._value;\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset value(value: any) {\n    if (this._value != value) {\n      if (this.buttonToggleGroup != null && this.checked) {\n        this.buttonToggleGroup.value = value;\n      }\n      this._value = value;\n    }\n  }\n/**\n * Whether the button is disabled.\n * @return {?}\n */\nget disabled(): boolean {\n    return this._disabled || (this.buttonToggleGroup != null && this.buttonToggleGroup.disabled) ||\n        (this.buttonToggleGroupMultiple != null && this.buttonToggleGroupMultiple.disabled);\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n/**\n * Event emitted when the group value changes.\n */\nchange: EventEmitter<MdButtonToggleChange> = new EventEmitter<MdButtonToggleChange>();\n/**\n * @param {?} toggleGroup\n * @param {?} toggleGroupMultiple\n * @param {?} _changeDetectorRef\n * @param {?} _buttonToggleDispatcher\n * @param {?} _renderer\n * @param {?} _elementRef\n * @param {?} _focusOriginMonitor\n */\nconstructor( toggleGroup: MdButtonToggleGroup,\n               toggleGroupMultiple: MdButtonToggleGroupMultiple,\nprivate _changeDetectorRef: ChangeDetectorRef,\nprivate _buttonToggleDispatcher: UniqueSelectionDispatcher,\nprivate _renderer: Renderer2,\nprivate _elementRef: ElementRef,\nprivate _focusOriginMonitor: FocusOriginMonitor) {\n\n    this.buttonToggleGroup = toggleGroup;\n    this.buttonToggleGroupMultiple = toggleGroupMultiple;\n\n    if (this.buttonToggleGroup) {\n      this._removeUniqueSelectionListener =\n        _buttonToggleDispatcher.listen((id: string, name: string) => {\n          if (id != this.id && name == this.name) {\n            this.checked = false;\n            this._changeDetectorRef.markForCheck();\n          }\n        });\n\n      this._type = 'radio';\n      this.name = this.buttonToggleGroup.name;\n      this._isSingleSelector = true;\n    } else {\n      // Even if there is no group at all, treat the button toggle as a checkbox so it can be\n      // toggled on or off.\n      this._type = 'checkbox';\n      this._isSingleSelector = false;\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    if (this.id == null) {\n      this.id = `md-button-toggle-${_uniqueIdCounter++}`;\n    }\n\n    if (this.buttonToggleGroup && this._value == this.buttonToggleGroup.value) {\n      this._checked = true;\n    }\n    this._focusOriginMonitor.monitor(this._elementRef.nativeElement, this._renderer, true);\n  }\n/**\n * Focuses the button.\n * @return {?}\n */\nfocus() {\n    this._inputElement.nativeElement.focus();\n  }\n/**\n * Toggle the state of the current button toggle.\n * @return {?}\n */\nprivate _toggle(): void {\n    this.checked = !this.checked;\n  }\n/**\n * Checks the button toggle due to an interaction with the underlying native input.\n * @param {?} event\n * @return {?}\n */\n_onInputChange(event: Event) {\n    event.stopPropagation();\n\n    if (this._isSingleSelector) {\n      // Propagate the change one-way via the group, which will in turn mark this\n      // button toggle as checked.\n      let /** @type {?} */ groupValueChanged = this.buttonToggleGroup.selected != this;\n      this.checked = true;\n      this.buttonToggleGroup.selected = this;\n      this.buttonToggleGroup.onTouched();\n      if (groupValueChanged) {\n        this.buttonToggleGroup._emitChangeEvent();\n      }\n    } else {\n      this._toggle();\n    }\n\n    // Emit a change event when the native input does.\n    this._emitChangeEvent();\n  }\n/**\n * @param {?} event\n * @return {?}\n */\n_onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `slide-toggle` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n/**\n * Dispatch change event with current value.\n * @return {?}\n */\nprivate _emitChangeEvent(): void {\n    let /** @type {?} */ event = new MdButtonToggleChange();\n    event.source = this;\n    event.value = this._value;\n    this.change.emit(event);\n  }\n/**\n * @return {?}\n */\nngOnDestroy(): void {\n    this._removeUniqueSelectionListener();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-button-toggle, mat-button-toggle',\n  templateUrl: 'button-toggle.html',\n  styleUrls: ['button-toggle.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    '[class.mat-button-toggle-standalone]': '!buttonToggleGroup && !buttonToggleGroupMultiple',\n    '[class.mat-button-toggle-checked]': 'checked',\n    '[class.mat-button-toggle-disabled]': 'disabled',\n    'class': 'mat-button-toggle',\n    '[attr.id]': 'id',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MdButtonToggleGroup, decorators: [{ type: Optional }, ]},\n{type: MdButtonToggleGroupMultiple, decorators: [{ type: Optional }, ]},\n{type: ChangeDetectorRef, },\n{type: UniqueSelectionDispatcher, },\n{type: Renderer2, },\n{type: ElementRef, },\n{type: FocusOriginMonitor, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ariaLabel': [{ type: Input, args: ['aria-label', ] },],\n'ariaLabelledby': [{ type: Input, args: ['aria-labelledby', ] },],\n'_inputElement': [{ type: ViewChild, args: ['input', ] },],\n'id': [{ type: Input },],\n'name': [{ type: Input },],\n'checked': [{ type: Input },],\n'value': [{ type: Input },],\n'disabled': [{ type: Input },],\n'change': [{ type: Output },],\n};\n}\n\nfunction MdButtonToggle_tsickle_Closure_declarations() {\n/** @type {?} */\nMdButtonToggle.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdButtonToggle.ctorParameters;\n/** @type {?} */\nMdButtonToggle.propDecorators;\n/**\n * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n * take precedence so this may be omitted.\n * @type {?}\n */\nMdButtonToggle.prototype.ariaLabel;\n/**\n * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n * @type {?}\n */\nMdButtonToggle.prototype.ariaLabelledby;\n/**\n * Whether or not this button toggle is checked.\n * @type {?}\n */\nMdButtonToggle.prototype._checked;\n/**\n * Type of the button toggle. Either 'radio' or 'checkbox'.\n * @type {?}\n */\nMdButtonToggle.prototype._type;\n/**\n * Whether or not this button toggle is disabled.\n * @type {?}\n */\nMdButtonToggle.prototype._disabled;\n/**\n * Value assigned to this button toggle.\n * @type {?}\n */\nMdButtonToggle.prototype._value;\n/**\n * Whether or not the button toggle is a single selection.\n * @type {?}\n */\nMdButtonToggle.prototype._isSingleSelector;\n/**\n * Unregister function for _buttonToggleDispatcher *\n * @type {?}\n */\nMdButtonToggle.prototype._removeUniqueSelectionListener;\n/** @type {?} */\nMdButtonToggle.prototype._inputElement;\n/**\n * The parent button toggle group (exclusive selection). Optional.\n * @type {?}\n */\nMdButtonToggle.prototype.buttonToggleGroup;\n/**\n * The parent button toggle group (multiple selection). Optional.\n * @type {?}\n */\nMdButtonToggle.prototype.buttonToggleGroupMultiple;\n/**\n * The unique ID for this button toggle.\n * @type {?}\n */\nMdButtonToggle.prototype.id;\n/**\n * HTML's 'name' attribute used to group radios for unique selection.\n * @type {?}\n */\nMdButtonToggle.prototype.name;\n/**\n * Event emitted when the group value changes.\n * @type {?}\n */\nMdButtonToggle.prototype.change;\n/** @type {?} */\nMdButtonToggle.prototype._changeDetectorRef;\n/** @type {?} */\nMdButtonToggle.prototype._buttonToggleDispatcher;\n/** @type {?} */\nMdButtonToggle.prototype._renderer;\n/** @type {?} */\nMdButtonToggle.prototype._elementRef;\n/** @type {?} */\nMdButtonToggle.prototype._focusOriginMonitor;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {MdLineModule} from './line/line';\nimport {MdOptionModule} from './option/index';\nimport {MdPseudoCheckboxModule} from './selection/index';\nimport {MdRippleModule} from './ripple/index';\n\n// Re-exports of the CDK to avoid breaking changes.\nexport {\n  coerceBooleanProperty,\n  coerceNumberProperty,\n} from '@angular/cdk/coercion';\n\nexport {\n  ObserversModule,\n  ObserveContent,\n} from '@angular/cdk/observers';\n\nexport {\n  SelectionModel\n} from '@angular/cdk/collections';\n\n// RTL\nexport {Dir, Direction, Directionality, BidiModule} from './bidi/index';\n\nexport {MdOptionModule,MdOptionSelectionChange,MdOption,MdOptgroupBase,_MdOptgroupMixinBase,MdOptgroup} from './option/index';\n\n// Portals\nexport {\n  Portal,\n  PortalHost,\n  BasePortalHost,\n  ComponentPortal,\n  TemplatePortal\n} from './portal/portal';\nexport {\n  PortalHostDirective,\n  TemplatePortalDirective,\n  PortalModule,\n} from './portal/portal-directives';\nexport {DomPortalHost} from './portal/dom-portal-host';\n\n// Platform\nexport {PlatformModule,Platform,getSupportedInputTypes} from '@angular/cdk/platform';\n\n// Overlay\nexport {OVERLAY_PROVIDERS,OverlayModule,Overlay,OverlayContainer,FullscreenOverlayContainer,OverlayRef,OverlayState,ConnectedOverlayDirective,OverlayOrigin,ViewportRuler,ComponentType,PositionStrategy,GlobalPositionStrategy,ConnectedPositionStrategy,VIEWPORT_RULER_PROVIDER,HorizontalConnectionPos,VerticalConnectionPos,OriginConnectionPosition,OverlayConnectionPosition,ConnectionPositionPair,ScrollingVisibility,ConnectedOverlayPositionChange,Scrollable,ScrollDispatcher,ScrollStrategy,ScrollStrategyOptions,RepositionScrollStrategy,CloseScrollStrategy,NoopScrollStrategy,BlockScrollStrategy} from '@angular/cdk/overlay';\n\n// Gestures\nexport {GestureConfig} from './gestures/gesture-config';\n// Explicitly specify the interfaces which should be re-exported, because if everything\n// is re-exported, module bundlers may run into issues with treeshaking.\nexport {HammerInput, HammerManager} from './gestures/gesture-annotations';\n\n// Ripple\nexport {MdRipple,RippleGlobalOptions,MD_RIPPLE_GLOBAL_OPTIONS,RippleRef,RippleState,RippleConfig,RIPPLE_FADE_IN_DURATION,RIPPLE_FADE_OUT_DURATION,MdRippleModule} from './ripple/index';\n\n// a11y\nexport {\n  AriaLivePoliteness,\n  LiveAnnouncer,\n  LIVE_ANNOUNCER_ELEMENT_TOKEN,\n  LIVE_ANNOUNCER_PROVIDER,\n  InteractivityChecker,\n  FocusTrap,\n  FocusTrapFactory,\n  FocusTrapDeprecatedDirective,\n  FocusTrapDirective,\n  isFakeMousedownFromScreenReader,\n  A11yModule,\n} from '@angular/cdk/a11y';\n\nexport {\n  UniqueSelectionDispatcher,\n  UniqueSelectionDispatcherListener,\n  UNIQUE_SELECTION_DISPATCHER_PROVIDER,\n} from './coordination/unique-selection-dispatcher';\n\nexport {MdLineModule, MdLine, MdLineSetter} from './line/line';\n\n// Style\nexport {StyleModule,TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER,applyCssTransform} from './style/index';\n\n// Keybindings\nexport {UP_ARROW,DOWN_ARROW,RIGHT_ARROW,LEFT_ARROW,PAGE_UP,PAGE_DOWN,HOME,END,ENTER,SPACE,TAB,ESCAPE,BACKSPACE,DELETE,A,Z} from './keyboard/keycodes';\n\nexport {MATERIAL_COMPATIBILITY_MODE,getMdCompatibilityInvalidPrefixError,MAT_ELEMENTS_SELECTOR,MD_ELEMENTS_SELECTOR,MatPrefixRejector,MdPrefixRejector} from './compatibility/compatibility';\n\n// Animation\nexport {AnimationCurves,AnimationDurations} from './animation/animation';\n\n// Selection\nexport {MdPseudoCheckboxModule,MdPseudoCheckboxState,MdPseudoCheckbox} from './selection/index';\n\n// Compatibility\nexport {CompatibilityModule, NoConflictStyleCompatibilityMode} from './compatibility/compatibility';\n\n// Common material module\nexport {MdCommonModule, MATERIAL_SANITY_CHECKS} from './common-behaviors/common-module';\n\n// Datetime\nexport {NativeDateModule,MdNativeDateModule,DateAdapter,MdDateFormats,MD_DATE_FORMATS,NativeDateAdapter,MD_NATIVE_DATE_FORMATS} from './datetime/index';\n\n// Placeholder\nexport {\n  FloatPlaceholderType,\n  PlaceholderOptions,\n  MD_PLACEHOLDER_GLOBAL_OPTIONS\n} from './placeholder/placeholder-options';\n\n// Error\nexport {\n  ErrorStateMatcher,\n  ErrorOptions,\n  MD_ERROR_GLOBAL_OPTIONS,\n  defaultErrorStateMatcher,\n  showOnDirtyErrorStateMatcher\n} from './error/error-options';\n/**\n * @deprecated\n */\nexport class MdCoreModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    MdLineModule,\n    BidiModule,\n    MdRippleModule,\n    ObserversModule,\n    PortalModule,\n    OverlayModule,\n    A11yModule,\n    MdOptionModule,\n    MdPseudoCheckboxModule,\n  ],\n  exports: [\n    MdLineModule,\n    BidiModule,\n    MdRippleModule,\n    ObserversModule,\n    PortalModule,\n    OverlayModule,\n    A11yModule,\n    MdOptionModule,\n    MdPseudoCheckboxModule,\n  ],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdCoreModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCoreModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCoreModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\n/**\n * Injection token that can be used to specify the global error options.\n */\nexport const MD_ERROR_GLOBAL_OPTIONS = new InjectionToken<ErrorOptions>('md-error-global-options');\n\nexport type ErrorStateMatcher =\n    (control: FormControl, form: FormGroupDirective | NgForm) => boolean;\n\nexport interface ErrorOptions {\n  errorStateMatcher?: ErrorStateMatcher;\n}\n/**\n * Returns whether control is invalid and is either touched or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function defaultErrorStateMatcher(control: FormControl, form: FormGroupDirective | NgForm) {\n  const /** @type {?} */ isSubmitted = form && form.submitted;\n  return !!(control.invalid && (control.touched || isSubmitted));\n}\n/**\n * Returns whether control is invalid and is either dirty or is a part of a submitted form.\n * @param {?} control\n * @param {?} form\n * @return {?}\n */\nexport function showOnDirtyErrorStateMatcher(control: FormControl,\n    form: FormGroupDirective | NgForm) {\n  const /** @type {?} */ isSubmitted = form && form.submitted;\n  return !!(control.invalid && (control.dirty || isSubmitted));\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport { InjectionToken } from '@angular/core';\n/**\n * InjectionToken that can be used to specify the global placeholder options.\n */\nexport const MD_PLACEHOLDER_GLOBAL_OPTIONS =\n  new InjectionToken<PlaceholderOptions>('md-placeholder-global-options');\n\n/** Type for the available floatPlaceholder values. */\nexport type FloatPlaceholderType = 'always' | 'never' | 'auto';\n\nexport interface PlaceholderOptions {\n  float?: FloatPlaceholderType;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {NativeDateAdapter} from './native-date-adapter';\nimport {MD_DATE_FORMATS} from './date-formats';\nimport {MD_NATIVE_DATE_FORMATS} from './native-date-formats';\n\n\nexport {DateAdapter} from './date-adapter';\nexport {MdDateFormats,MD_DATE_FORMATS} from './date-formats';\nexport {NativeDateAdapter} from './native-date-adapter';\nexport {MD_NATIVE_DATE_FORMATS} from './native-date-formats';\nexport class NativeDateModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [{provide: DateAdapter, useClass: NativeDateAdapter}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NativeDateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNativeDateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNativeDateModule.ctorParameters;\n}\n\nexport class MdNativeDateModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [NativeDateModule],\n  providers: [{provide: MD_DATE_FORMATS, useValue: MD_NATIVE_DATE_FORMATS}],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdNativeDateModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdNativeDateModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdNativeDateModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {MdDateFormats} from './date-formats';\n\n\nexport const /** @type {?} */ MD_NATIVE_DATE_FORMATS: MdDateFormats = {\n  parse: {\n    dateInput: null,\n  },\n  display: {\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\n    monthYearLabel: {year: 'numeric', month: 'short'},\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\n  }\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {InjectionToken} from '@angular/core';\n\n\nexport type MdDateFormats = {\n  parse: {\n    dateInput: any\n  },\n  display: {\n    dateInput: any,\n    monthYearLabel: any,\n    dateA11yLabel: any,\n    monthYearA11yLabel: any,\n  }\n};\n\n\nexport const /** @type {?} */ MD_DATE_FORMATS = new InjectionToken<MdDateFormats>('md-date-formats');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Inject, Injectable, Optional, LOCALE_ID} from '@angular/core';\nimport {DateAdapter} from './date-adapter';\nimport {extendObject} from '../util/object-extend';\n/**\n * Whether the browser supports the Intl API.\n */\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\n/**\n * The default month names to use if Intl API is not available.\n */\nconst DEFAULT_MONTH_NAMES = {\n  'long': [\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n    'October', 'November', 'December'\n  ],\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\n/**\n * The default date names to use if Intl API is not available.\n */\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\n/**\n * The default day of the week names to use if Intl API is not available.\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const /** @type {?} */ valuesArray = Array(length);\n  for (let /** @type {?} */ i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nexport class NativeDateAdapter extends DateAdapter<Date> {\n/**\n * @param {?} localeId\n */\nconstructor(  localeId: any) {\n    super();\n    super.setLocale(localeId);\n  }\n/**\n * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n * will produce `'8/13/1800'`.\n */\nuseUtcForDisplay = true;\n/**\n * @param {?} date\n * @return {?}\n */\ngetYear(date: Date): number {\n    return date.getFullYear();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetMonth(date: Date): number {\n    return date.getMonth();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetDate(date: Date): number {\n    return date.getDate();\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n/**\n * @param {?} style\n * @return {?}\n */\ngetMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {month: style});\n      return range(12, i => this._stripDirectionalityCharacters(dtf.format(new Date(2017, i, 1))));\n    }\n    return DEFAULT_MONTH_NAMES[style];\n  }\n/**\n * @return {?}\n */\ngetDateNames(): string[] {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric'});\n      return range(31, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DATE_NAMES;\n  }\n/**\n * @param {?} style\n * @return {?}\n */\ngetDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {weekday: style});\n      return range(7, i => this._stripDirectionalityCharacters(\n          dtf.format(new Date(2017, 0, i + 1))));\n    }\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetYearName(date: Date): string {\n    if (SUPPORTS_INTL_API) {\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric'});\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return String(this.getYear(date));\n  }\n/**\n * @return {?}\n */\ngetFirstDayOfWeek(): number {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetNumDaysInMonth(date: Date): number {\n    return this.getDate(this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nclone(date: Date): Date {\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\n  }\n/**\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @return {?}\n */\ncreateDate(year: number, month: number, date: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    let /** @type {?} */ result = this._createDateWithOverflow(year, month, date);\n\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n/**\n * @return {?}\n */\ntoday(): Date {\n    return new Date();\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nparse(value: any): Date | null {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n/**\n * @param {?} date\n * @param {?} displayFormat\n * @return {?}\n */\nformat(date: Date, displayFormat: Object): string {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    if (SUPPORTS_INTL_API) {\n      if (this.useUtcForDisplay) {\n        date = new Date(Date.UTC(\n            date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\n            date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        displayFormat = extendObject({}, displayFormat, {timeZone: 'utc'});\n      }\n      let /** @type {?} */ dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n      return this._stripDirectionalityCharacters(dtf.format(date));\n    }\n    return this._stripDirectionalityCharacters(date.toDateString());\n  }\n/**\n * @param {?} date\n * @param {?} years\n * @return {?}\n */\naddCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n/**\n * @param {?} date\n * @param {?} months\n * @return {?}\n */\naddCalendarMonths(date: Date, months: number): Date {\n    let /** @type {?} */ newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n\n    return newDate;\n  }\n/**\n * @param {?} date\n * @param {?} days\n * @return {?}\n */\naddCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n/**\n * @param {?} date\n * @return {?}\n */\ngetISODateString(date: Date): string {\n    return [\n      date.getUTCFullYear(),\n      this._2digit(date.getUTCMonth() + 1),\n      this._2digit(date.getUTCDate())\n    ].join('-');\n  }\n/**\n * @param {?} obj\n * @return {?}\n */\nisDateInstance(obj: any) {\n    return obj instanceof Date;\n  }\n/**\n * @param {?} date\n * @return {?}\n */\nisValid(date: Date) {\n    return !isNaN(date.getTime());\n  }\n/**\n * Creates a date but allows the month and date to overflow.\n * @param {?} year\n * @param {?} month\n * @param {?} date\n * @return {?}\n */\nprivate _createDateWithOverflow(year: number, month: number, date: number) {\n    let /** @type {?} */ result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n/**\n * Pads a number to make it two digits.\n * @param {?} n The number to pad.\n * @return {?} The padded number.\n */\nprivate _2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n/**\n * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n * other browsers do not. We remove them to make output consistent and because they interfere with\n * date parsing.\n * @param {?} str The string to strip direction characters from.\n * @return {?} The stripped string.\n */\nprivate _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, '');\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LOCALE_ID, ] }, ]},\n];\n}\n\nfunction NativeDateAdapter_tsickle_Closure_declarations() {\n/** @type {?} */\nNativeDateAdapter.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNativeDateAdapter.ctorParameters;\n/**\n * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n * will produce `'8/13/1800'`.\n * @type {?}\n */\nNativeDateAdapter.prototype.useUtcForDisplay;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n * \n * @param {?} dest The object which will have properties copied to it.\n * @param {...?} sources The source objects from which properties will be copied.\n * @return {?}\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let /** @type {?} */ source of sources) {\n    if (source != null) {\n      for (let /** @type {?} */ key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n */\nexport abstract class DateAdapter<D> {\n/**\n * The locale to use for all dates.\n */\nprotected locale: any;\n/**\n * Gets the year component of the given date.\n * @abstract\n * @param {?} date The date to extract the year from.\n * @return {?} The year component.\n */\ngetYear(date: D) {}\n/**\n * Gets the month component of the given date.\n * @abstract\n * @param {?} date The date to extract the month from.\n * @return {?} The month component (0-indexed, 0 = January).\n */\ngetMonth(date: D) {}\n/**\n * Gets the date of the month component of the given date.\n * @abstract\n * @param {?} date The date to extract the date of the month from.\n * @return {?} The month component (1-indexed, 1 = first of month).\n */\ngetDate(date: D) {}\n/**\n * Gets the day of the week component of the given date.\n * @abstract\n * @param {?} date The date to extract the day of the week from.\n * @return {?} The month component (0-indexed, 0 = Sunday).\n */\ngetDayOfWeek(date: D) {}\n/**\n * Gets a list of names for the months.\n * @abstract\n * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n * @return {?} An ordered list of all month names, starting with January.\n */\ngetMonthNames(style: 'long' | 'short' | 'narrow') {}\n/**\n * Gets a list of names for the dates of the month.\n * @abstract\n * @return {?} An ordered list of all date of the month names, starting with '1'.\n */\ngetDateNames() {}\n/**\n * Gets a list of names for the days of the week.\n * @abstract\n * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n * @return {?} An ordered list of all weekday names, starting with Sunday.\n */\ngetDayOfWeekNames(style: 'long' | 'short' | 'narrow') {}\n/**\n * Gets the name for the year of the given date.\n * @abstract\n * @param {?} date The date to get the year name for.\n * @return {?} The name of the given year (e.g. '2017').\n */\ngetYearName(date: D) {}\n/**\n * Gets the first day of the week.\n * @abstract\n * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n */\ngetFirstDayOfWeek() {}\n/**\n * Gets the number of days in the month of the given date.\n * @abstract\n * @param {?} date The date whose month should be checked.\n * @return {?} The number of days in the month of the given date.\n */\ngetNumDaysInMonth(date: D) {}\n/**\n * Clones the given date.\n * @abstract\n * @param {?} date The date to clone\n * @return {?} A new date equal to the given date.\n */\nclone(date: D) {}\n/**\n * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n * month and date.\n * @abstract\n * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n * @return {?} The new date, or null if invalid.\n */\ncreateDate(year: number, month: number, date: number) {}\n/**\n * Gets today's date.\n * @abstract\n * @return {?} Today's date.\n */\ntoday() {}\n/**\n * Parses a date from a value.\n * @abstract\n * @param {?} value The value to parse.\n * @param {?} parseFormat The expected format of the value being parsed\n *     (type is implementation-dependent).\n * @return {?} The parsed date.\n */\nparse(value: any, parseFormat: any) {}\n/**\n * Formats a date as a string.\n * @abstract\n * @param {?} date The value to format.\n * @param {?} displayFormat The format to use to display the date as a string.\n * @return {?} The formatted date string.\n */\nformat(date: D, displayFormat: any) {}\n/**\n * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n * calendar for each year and then finding the closest date in the new month. For example when\n * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n * @abstract\n * @param {?} date The date to add years to.\n * @param {?} years The number of years to add (may be negative).\n * @return {?} A new date equal to the given one with the specified number of years added.\n */\naddCalendarYears(date: D, years: number) {}\n/**\n * Adds the given number of months to the date. Months are counted as if flipping a page on the\n * calendar for each month and then finding the closest date in the new month. For example when\n * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n * @abstract\n * @param {?} date The date to add months to.\n * @param {?} months The number of months to add (may be negative).\n * @return {?} A new date equal to the given one with the specified number of months added.\n */\naddCalendarMonths(date: D, months: number) {}\n/**\n * Adds the given number of days to the date. Days are counted as if moving one cell on the\n * calendar for each day.\n * @abstract\n * @param {?} date The date to add days to.\n * @param {?} days The number of days to add (may be negative).\n * @return {?} A new date equal to the given one with the specified number of days added.\n */\naddCalendarDays(date: D, days: number) {}\n/**\n * Gets the RFC 3339 compatible date string (https://tools.ietf.org/html/rfc3339)  for the given\n * date.\n * @abstract\n * @param {?} date The date to get the ISO date string for.\n * @return {?} The ISO date string date string.\n */\ngetISODateString(date: D) {}\n/**\n * Checks whether the given object is considered a date instance by this DateAdapter.\n * @abstract\n * @param {?} obj The object to check\n * @return {?} Whether the object is a date instance.\n */\nisDateInstance(obj: any) {}\n/**\n * Checks whether the given date is valid.\n * @abstract\n * @param {?} date The date to check.\n * @return {?} Whether the date is valid.\n */\nisValid(date: D) {}\n/**\n * Sets the locale used for all dates.\n * @param {?} locale The new locale.\n * @return {?}\n */\nsetLocale(locale: any) {\n    this.locale = locale;\n  }\n/**\n * Compares two dates.\n * @param {?} first The first date to compare.\n * @param {?} second The second date to compare.\n * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n *     a number greater than 0 if the first date is later.\n */\ncompareDate(first: D, second: D): number {\n    return this.getYear(first) - this.getYear(second) ||\n        this.getMonth(first) - this.getMonth(second) ||\n        this.getDate(first) - this.getDate(second);\n  }\n/**\n * Checks if two dates are equal.\n * @param {?} first The first date to check.\n * @param {?} second The second date to check.\n *     Null dates are considered equal to other null dates.\n * @return {?}\n */\nsameDate(first: D | null, second: D | null): boolean {\n    return first && second ? !this.compareDate(first, second) : first == second;\n  }\n/**\n * Clamp the given date between min and max dates.\n * @param {?} date The date to clamp.\n * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n *     otherwise `date`.\n */\nclampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n\nfunction DateAdapter_tsickle_Closure_declarations() {\n/**\n * The locale to use for all dates.\n * @type {?}\n */\nDateAdapter.prototype.locale;\n}\n\n","\n/**\n * \\@docs-private\n */\nexport class AnimationCurves {\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n}\n\nfunction AnimationCurves_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationCurves.STANDARD_CURVE;\n/** @type {?} */\nAnimationCurves.DECELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.ACCELERATION_CURVE;\n/** @type {?} */\nAnimationCurves.SHARP_CURVE;\n}\n\n/**\n * \\@docs-private\n */\nexport class AnimationDurations {\n  static COMPLEX = '375ms';\n  static ENTERING = '225ms';\n  static EXITING = '195ms';\n}\n\nfunction AnimationDurations_tsickle_Closure_declarations() {\n/** @type {?} */\nAnimationDurations.COMPLEX;\n/** @type {?} */\nAnimationDurations.ENTERING;\n/** @type {?} */\nAnimationDurations.EXITING;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CdkMonitorFocus, FOCUS_ORIGIN_MONITOR_PROVIDER} from './focus-origin-monitor';\nimport {PlatformModule} from '../platform/index';\nexport class StyleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [PlatformModule],\n  declarations: [CdkMonitorFocus],\n  exports: [CdkMonitorFocus],\n  providers: [FOCUS_ORIGIN_MONITOR_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction StyleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nStyleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nStyleModule.ctorParameters;\n}\n\n\n\nexport {TOUCH_BUFFER_MS,FocusOrigin,FocusOriginMonitor,CdkMonitorFocus,FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY,FOCUS_ORIGIN_MONITOR_PROVIDER} from './focus-origin-monitor';\nexport {applyCssTransform} from './apply-transform';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Applies a CSS transform to an element, including browser-prefixed properties.\n * @param {?} element\n * @param {?} transformValue\n * @return {?}\n */\nexport function applyCssTransform(element: HTMLElement, transformValue: string) {\n  // It's important to trim the result, because the browser will ignore the set operation\n  // if the string contains only whitespace.\n  let /** @type {?} */ value = transformValue.trim();\n\n  element.style.transform = value;\n  element.style.webkitTransform = value;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  Renderer2,\n  SkipSelf,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Platform} from '../platform/platform';\nimport {of as observableOf} from 'rxjs/observable/of';\n\n\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\nexport const /** @type {?} */ TOUCH_BUFFER_MS = 650;\n\n\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program' | null;\n\n\ntype MonitoredElementInfo = {\n  unlisten: Function,\n  checkChildren: boolean,\n  renderer: Renderer2,\n  subject: Subject<FocusOrigin>\n};\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nexport class FocusOriginMonitor {\n/**\n * The focus origin that the next focus event is a result of.\n */\nprivate _origin: FocusOrigin = null;\n/**\n * The FocusOrigin of the last focus event tracked by the FocusOriginMonitor.\n */\nprivate _lastFocusOrigin: FocusOrigin;\n/**\n * Whether the window has just been focused.\n */\nprivate _windowFocused = false;\n/**\n * The target of the last touch event.\n */\nprivate _lastTouchTarget: EventTarget | null;\n/**\n * The timeout id of the touch timeout, used to cancel timeout later.\n */\nprivate _touchTimeout: number;\n/**\n * Weak map of elements being monitored to their info.\n */\nprivate _elementInfo = new WeakMap<Element, MonitoredElementInfo>();\n/**\n * @param {?} _ngZone\n * @param {?} _platform\n */\nconstructor(private _ngZone: NgZone,\nprivate _platform: Platform) {\n    this._ngZone.runOutsideAngular(() => this._registerDocumentEvents());\n  }\n/**\n * Monitors focus on an element and applies appropriate CSS classes.\n * @param {?} element The element to monitor\n * @param {?} renderer The renderer to use to apply CSS classes to the element.\n * @param {?} checkChildren Whether to count the element as focused when its children are focused.\n * @return {?} An observable that emits when the focus state of the element changes.\n *     When the element is blurred, null will be emitted.\n */\nmonitor(\n      element: HTMLElement,\n      renderer: Renderer2,\n      checkChildren: boolean): Observable<FocusOrigin> {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return observableOf(null);\n    }\n    // Check if we're already monitoring this element.\n    if (this._elementInfo.has(element)) {\n      let /** @type {?} */ cachedInfo = this._elementInfo.get(element); /** @type {?} */((\n      cachedInfo)).checkChildren = checkChildren;\n      return /** @type {?} */(( cachedInfo)).subject.asObservable();\n    }\n\n    // Create monitored element info.\n    let /** @type {?} */ info: MonitoredElementInfo = {\n      unlisten: () => {},\n      checkChildren: checkChildren,\n      renderer: renderer,\n      subject: new Subject<FocusOrigin>()\n    };\n    this._elementInfo.set(element, info);\n\n    // Start listening. We need to listen in capture phase since focus events don't bubble.\n    let /** @type {?} */ focusListener = (event: FocusEvent) => this._onFocus(event, element);\n    let /** @type {?} */ blurListener = (event: FocusEvent) => this._onBlur(event, element);\n    this._ngZone.runOutsideAngular(() => {\n      element.addEventListener('focus', focusListener, true);\n      element.addEventListener('blur', blurListener, true);\n    });\n\n    // Create an unlisten function for later.\n    info.unlisten = () => {\n      element.removeEventListener('focus', focusListener, true);\n      element.removeEventListener('blur', blurListener, true);\n    };\n\n    return info.subject.asObservable();\n  }\n/**\n * Stops monitoring an element and removes all focus classes.\n * @param {?} element The element to stop monitoring.\n * @return {?}\n */\nstopMonitoring(element: HTMLElement): void {\n    let /** @type {?} */ elementInfo = this._elementInfo.get(element);\n\n    if (elementInfo) {\n      elementInfo.unlisten();\n      elementInfo.subject.complete();\n\n      this._setClasses(element);\n      this._elementInfo.delete(element);\n    }\n  }\n/**\n * Focuses the element via the specified focus origin.\n * @param {?} element The element to focus.\n * @param {?} origin The focus origin.\n * @return {?}\n */\nfocusVia(element: HTMLElement, origin: FocusOrigin): void {\n    this._setOriginForCurrentEventQueue(origin);\n    element.focus();\n  }\n/**\n * Register necessary event listeners on the document and window.\n * @return {?}\n */\nprivate _registerDocumentEvents() {\n    // Do nothing if we're not on the browser platform.\n    if (!this._platform.isBrowser) {\n      return;\n    }\n\n    // Note: we listen to events in the capture phase so we can detect them even if the user stops\n    // propagation.\n\n    // On keydown record the origin and clear any touch event that may be in progress.\n    document.addEventListener('keydown', () => {\n      this._lastTouchTarget = null;\n      this._setOriginForCurrentEventQueue('keyboard');\n    }, true);\n\n    // On mousedown record the origin only if there is not touch target, since a mousedown can\n    // happen as a result of a touch event.\n    document.addEventListener('mousedown', () => {\n      if (!this._lastTouchTarget) {\n        this._setOriginForCurrentEventQueue('mouse');\n      }\n    }, true);\n\n    // When the touchstart event fires the focus event is not yet in the event queue. This means\n    // we can't rely on the trick used above (setting timeout of 0ms). Instead we wait 650ms to\n    // see if a focus happens.\n    document.addEventListener('touchstart', (event: Event) => {\n      if (this._touchTimeout != null) {\n        clearTimeout(this._touchTimeout);\n      }\n      this._lastTouchTarget = event.target;\n      this._touchTimeout = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\n    }, true);\n\n    // Make a note of when the window regains focus, so we can restore the origin info for the\n    // focused element.\n    window.addEventListener('focus', () => {\n      this._windowFocused = true;\n      setTimeout(() => this._windowFocused = false, 0);\n    });\n  }\n/**\n * Sets the focus classes on the element based on the given focus origin.\n * @param {?} element The element to update the classes on.\n * @param {?=} origin The focus origin.\n * @return {?}\n */\nprivate _setClasses(element: HTMLElement, origin?: FocusOrigin): void {\n    const /** @type {?} */ elementInfo = this._elementInfo.get(element);\n\n    if (elementInfo) {\n      const /** @type {?} */ toggleClass = (className: string, shouldSet: boolean) => {\n        shouldSet ? elementInfo.renderer.addClass(element, className) :\n                    elementInfo.renderer.removeClass(element, className);\n      };\n\n      toggleClass('cdk-focused', !!origin);\n      toggleClass('cdk-touch-focused', origin === 'touch');\n      toggleClass('cdk-keyboard-focused', origin === 'keyboard');\n      toggleClass('cdk-mouse-focused', origin === 'mouse');\n      toggleClass('cdk-program-focused', origin === 'program');\n    }\n  }\n/**\n * Sets the origin and schedules an async function to clear it at the end of the event queue.\n * @param {?} origin The origin to set.\n * @return {?}\n */\nprivate _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\n    this._origin = origin;\n    setTimeout(() => this._origin = null, 0);\n  }\n/**\n * Checks whether the given focus event was caused by a touchstart event.\n * @param {?} event The focus event to check.\n * @return {?} Whether the event was caused by a touch.\n */\nprivate _wasCausedByTouch(event: FocusEvent): boolean {\n    // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n    // Consider the following dom structure:\n    //\n    // <div #parent tabindex=\"0\" cdkFocusClasses>\n    //   <div #child (click)=\"#parent.focus()\"></div>\n    // </div>\n    //\n    // If the user touches the #child element and the #parent is programmatically focused as a\n    // result, this code will still consider it to have been caused by the touch event and will\n    // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n    // relatively small edge-case that can be worked around by using\n    // focusVia(parentEl, renderer,  'program') to focus the parent element.\n    //\n    // If we decide that we absolutely must handle this case correctly, we can do so by listening\n    // for the first focus event after the touchstart, and then the first blur event after that\n    // focus event. When that blur event fires we know that whatever follows is not a result of the\n    // touchstart.\n    let /** @type {?} */ focusTarget = event.target;\n    return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n        (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n  }\n/**\n * Handles focus events on a registered element.\n * @param {?} event The focus event.\n * @param {?} element The monitored element.\n * @return {?}\n */\nprivate _onFocus(event: FocusEvent, element: HTMLElement) {\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n    // focus event affecting the monitored element. If we want to use the origin of the first event\n    // instead we should check for the cdk-focused class here and return if the element already has\n    // it. (This only matters for elements that have includesChildren = true).\n\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\n    // monitored element itself.\n    const /** @type {?} */ elementInfo = this._elementInfo.get(element);\n    if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n      return;\n    }\n\n    // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n    // 1) The window has just regained focus, in which case we want to restore the focused state of\n    //    the element from before the window blurred.\n    // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n    // 3) The element was programmatically focused, in which case we should mark the origin as\n    //    'program'.\n    if (!this._origin) {\n      if (this._windowFocused && this._lastFocusOrigin) {\n        this._origin = this._lastFocusOrigin;\n      } else if (this._wasCausedByTouch(event)) {\n        this._origin = 'touch';\n      } else {\n        this._origin = 'program';\n      }\n    }\n\n    this._setClasses(element, this._origin);\n    elementInfo.subject.next(this._origin);\n    this._lastFocusOrigin = this._origin;\n    this._origin = null;\n  }\n/**\n * Handles blur events on a registered element.\n * @param {?} event The blur event.\n * @param {?} element The monitored element.\n * @return {?}\n */\n_onBlur(event: FocusEvent, element: HTMLElement) {\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n    // order to focus another child of the monitored element.\n    const /** @type {?} */ elementInfo = this._elementInfo.get(element);\n\n    if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n        element.contains(event.relatedTarget))) {\n      return;\n    }\n\n    this._setClasses(element);\n    elementInfo.subject.next(null);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NgZone, },\n{type: Platform, },\n];\n}\n\nfunction FocusOriginMonitor_tsickle_Closure_declarations() {\n/** @type {?} */\nFocusOriginMonitor.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nFocusOriginMonitor.ctorParameters;\n/**\n * The focus origin that the next focus event is a result of.\n * @type {?}\n */\nFocusOriginMonitor.prototype._origin;\n/**\n * The FocusOrigin of the last focus event tracked by the FocusOriginMonitor.\n * @type {?}\n */\nFocusOriginMonitor.prototype._lastFocusOrigin;\n/**\n * Whether the window has just been focused.\n * @type {?}\n */\nFocusOriginMonitor.prototype._windowFocused;\n/**\n * The target of the last touch event.\n * @type {?}\n */\nFocusOriginMonitor.prototype._lastTouchTarget;\n/**\n * The timeout id of the touch timeout, used to cancel timeout later.\n * @type {?}\n */\nFocusOriginMonitor.prototype._touchTimeout;\n/**\n * Weak map of elements being monitored to their info.\n * @type {?}\n */\nFocusOriginMonitor.prototype._elementInfo;\n/** @type {?} */\nFocusOriginMonitor.prototype._ngZone;\n/** @type {?} */\nFocusOriginMonitor.prototype._platform;\n}\n\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n * \n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nexport class CdkMonitorFocus implements OnDestroy {\nprivate _monitorSubscription: Subscription;\n   cdkFocusChange = new EventEmitter<FocusOrigin>();\n/**\n * @param {?} _elementRef\n * @param {?} _focusOriginMonitor\n * @param {?} renderer\n */\nconstructor(private _elementRef: ElementRef,\nprivate _focusOriginMonitor: FocusOriginMonitor,\n              renderer: Renderer2) {\n    this._monitorSubscription = this._focusOriginMonitor.monitor(\n        this._elementRef.nativeElement, renderer,\n        this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n        .subscribe(origin => this.cdkFocusChange.emit(origin));\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this._focusOriginMonitor.stopMonitoring(this._elementRef.nativeElement);\n    this._monitorSubscription.unsubscribe();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: FocusOriginMonitor, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'cdkFocusChange': [{ type: Output },],\n};\n}\n\nfunction CdkMonitorFocus_tsickle_Closure_declarations() {\n/** @type {?} */\nCdkMonitorFocus.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCdkMonitorFocus.ctorParameters;\n/** @type {?} */\nCdkMonitorFocus.propDecorators;\n/** @type {?} */\nCdkMonitorFocus.prototype._monitorSubscription;\n/** @type {?} */\nCdkMonitorFocus.prototype.cdkFocusChange;\n/** @type {?} */\nCdkMonitorFocus.prototype._elementRef;\n/** @type {?} */\nCdkMonitorFocus.prototype._focusOriginMonitor;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @param {?} ngZone\n * @param {?} platform\n * @return {?}\n */\nexport function FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY(\n    parentDispatcher: FocusOriginMonitor, ngZone: NgZone, platform: Platform) {\n  return parentDispatcher || new FocusOriginMonitor(ngZone, platform);\n}\n/**\n * \\@docs-private\n */\nexport const FOCUS_ORIGIN_MONITOR_PROVIDER = {\n  // If there is already a FocusOriginMonitor available, use that. Otherwise, provide a new one.\n  provide: FocusOriginMonitor,\n  deps: [[new Optional(), new SkipSelf(), FocusOriginMonitor], NgZone, Platform],\n  useFactory: FOCUS_ORIGIN_MONITOR_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, Optional, SkipSelf} from '@angular/core';\n\n\n// Users of the Dispatcher never need to see this type, but TypeScript requires it to be exported.\nexport type UniqueSelectionDispatcherListener = (id: string, name: string) => void;\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n * \n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nexport class UniqueSelectionDispatcher {\nprivate _listeners: UniqueSelectionDispatcherListener[] = [];\n/**\n * Notify other items that selection for the given name has been set.\n * @param {?} id ID of the item.\n * @param {?} name Name of the item.\n * @return {?}\n */\nnotify(id: string, name: string) {\n    for (let /** @type {?} */ listener of this._listeners) {\n      listener(id, name);\n    }\n  }\n/**\n * Listen for future changes to item selection.\n * @param {?} listener\n * @return {?} Function used to deregister listener\n * \n */\nlisten(listener: UniqueSelectionDispatcherListener): () => void {\n    this._listeners.push(listener);\n    return () => {\n      this._listeners = this._listeners.filter((registered: UniqueSelectionDispatcherListener) => {\n        return listener !== registered;\n      });\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction UniqueSelectionDispatcher_tsickle_Closure_declarations() {\n/** @type {?} */\nUniqueSelectionDispatcher.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nUniqueSelectionDispatcher.ctorParameters;\n/** @type {?} */\nUniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * \\@docs-private\n * @param {?} parentDispatcher\n * @return {?}\n */\nexport function UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY(\n    parentDispatcher: UniqueSelectionDispatcher) {\n  return parentDispatcher || new UniqueSelectionDispatcher();\n}\n/**\n * \\@docs-private\n */\nexport const UNIQUE_SELECTION_DISPATCHER_PROVIDER = {\n  // If there is already a dispatcher available, use that. Otherwise, provide a new one.\n  provide: UniqueSelectionDispatcher,\n  deps: [[new Optional(), new SkipSelf(), UniqueSelectionDispatcher]],\n  useFactory: UNIQUE_SELECTION_DISPATCHER_PROVIDER_FACTORY\n};\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Injectable, isDevMode} from '@angular/core';\nimport {HammerGestureConfig} from '@angular/platform-browser';\nimport {HammerStatic, HammerInstance, Recognizer, RecognizerStatic} from './gesture-annotations';\nexport class GestureConfig extends HammerGestureConfig {\nprivate _hammer: HammerStatic = typeof window !== 'undefined' ? ( /** @type {?} */((window as any))).Hammer : null;\n\n  /* List of new event names to add to the gesture support list */\n  events: string[] = this._hammer ? [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n  ] : [];\nconstructor() {\n    super();\n\n    if (!this._hammer && isDevMode()) {\n      console.warn(\n        'Could not find HammerJS. Certain Angular Material ' +\n        'components may not work correctly.'\n      );\n    }\n  }\n/**\n * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n * \n * Our gesture names come from the Material Design gestures spec:\n * https://www.google.com/design/spec/patterns/gestures.html#gestures-touch-mechanics\n * \n * More information on default recognizers can be found in Hammer docs:\n * http://hammerjs.github.io/recognizer-pan/\n * http://hammerjs.github.io/recognizer-press/\n * \n * @param {?} element Element to which to assign the new HammerJS gestures.\n * @return {?} Newly-created HammerJS instance.\n */\nbuildHammer(element: HTMLElement): HammerInstance {\n    const /** @type {?} */ mc = new this._hammer(element);\n\n    // Default Hammer Recognizers.\n    let /** @type {?} */ pan = new this._hammer.Pan();\n    let /** @type {?} */ swipe = new this._hammer.Swipe();\n    let /** @type {?} */ press = new this._hammer.Press();\n\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n    // Otherwise the previous `recognizeWith` will be dropped.\n    // TODO: Confirm threshold numbers with Material Design UX Team\n    let /** @type {?} */ slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\n    let /** @type {?} */ longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\n\n    // Overwrite the default `pan` event to use the swipe event.\n    pan.recognizeWith(swipe);\n\n    // Add customized gestures to Hammer manager\n    mc.add([swipe, press, pan, slide, longpress]);\n\n    return /** @type {?} */(( mc as HammerInstance));\n  }\n/**\n * Creates a new recognizer, without affecting the default recognizers of HammerJS\n * @param {?} base\n * @param {?} options\n * @param {...?} inheritances\n * @return {?}\n */\nprivate _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\n    let /** @type {?} */ recognizer = new ( /** @type {?} */((base.constructor as RecognizerStatic)))(options);\n\n    inheritances.push(base);\n    inheritances.forEach(item => recognizer.recognizeWith(item));\n\n    return recognizer;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction GestureConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nGestureConfig.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nGestureConfig.ctorParameters;\n/** @type {?} */\nGestureConfig.prototype._hammer;\n/** @type {?} */\nGestureConfig.prototype.events;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdRippleModule} from '../ripple/index';\nimport {MdPseudoCheckboxModule} from '../selection/index';\nimport {MdOption} from './option';\nimport {MdOptgroup} from './optgroup';\nexport class MdOptionModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdRippleModule, CommonModule, MdPseudoCheckboxModule],\n  exports: [MdOption, MdOptgroup],\n  declarations: [MdOption, MdOptgroup]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdOptionModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptionModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOptionModule.ctorParameters;\n}\n\n\n\nexport {MdOptionSelectionChange,MdOption} from './option';\nexport {MdOptgroupBase,_MdOptgroupMixinBase,MdOptgroup} from './optgroup';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  Inject,\n  Optional,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  QueryList,\n} from '@angular/core';\nimport {ENTER, SPACE} from '../keyboard/keycodes';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MATERIAL_COMPATIBILITY_MODE} from '../../core/compatibility/compatibility';\nimport {MdOptgroup} from './optgroup';\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MdOption when selected or deselected.\n */\nexport class MdOptionSelectionChange {\n/**\n * @param {?} source\n * @param {?=} isUserInput\n */\nconstructor(public source: MdOption,\npublic isUserInput = false) { }\n}\n\nfunction MdOptionSelectionChange_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptionSelectionChange.prototype.source;\n/** @type {?} */\nMdOptionSelectionChange.prototype.isUserInput;\n}\n\n/**\n * Single option inside of a `<md-select>` element.\n */\nexport class MdOption {\nprivate _selected: boolean = false;\nprivate _active: boolean = false;\nprivate _multiple: boolean = false;\nprivate _disableRipple: boolean = false;\n/**\n * Whether the option is disabled.\n */\nprivate _disabled: boolean = false;\nprivate _id: string = `md-option-${_uniqueIdCounter++}`;\n/**\n * Whether the wrapping component is in multiple selection mode.\n * @return {?}\n */\nget multiple() { return this._multiple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset multiple(value: boolean) {\n    if (value !== this._multiple) {\n      this._multiple = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * The unique ID of the option.\n * @return {?}\n */\nget id() { return this._id; }\n/**\n * Whether or not the option is currently selected.\n * @return {?}\n */\nget selected(): boolean { return this._selected; }\n/**\n * The form value of the option.\n */\nvalue: any;\n/**\n * Whether the option is disabled.\n * @return {?}\n */\nget disabled() { return (this.group && this.group.disabled) || this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * Whether ripples for the option are disabled.\n * @return {?}\n */\nget disableRipple() { return this._disableRipple; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disableRipple(value: boolean) {\n    this._disableRipple = value;\n    this._changeDetectorRef.markForCheck();\n  }\n/**\n * Event emitted when the option is selected or deselected.\n */\nonSelectionChange = new EventEmitter<MdOptionSelectionChange>();\n/**\n * @param {?} _element\n * @param {?} _changeDetectorRef\n * @param {?} group\n * @param {?} _isCompatibilityMode\n */\nconstructor(\nprivate _element: ElementRef,\nprivate _changeDetectorRef: ChangeDetectorRef,\npublic readonly group: MdOptgroup,\npublic _isCompatibilityMode: boolean) {}\n/**\n * Whether or not the option is currently active and ready to be selected.\n * An active option displays styles as if it is focused, but the\n * focus is actually retained somewhere else. This comes in handy\n * for components like autocomplete where focus must remain on the input.\n * @return {?}\n */\nget active(): boolean {\n    return this._active;\n  }\n/**\n * The displayed value of the option. It is necessary to show the selected option in the\n * select's trigger.\n * @return {?}\n */\nget viewValue(): string {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n/**\n * Selects the option.\n * @return {?}\n */\nselect(): void {\n    this._selected = true;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n/**\n * Deselects the option.\n * @return {?}\n */\ndeselect(): void {\n    this._selected = false;\n    this._changeDetectorRef.markForCheck();\n    this._emitSelectionChangeEvent();\n  }\n/**\n * Sets focus onto this option.\n * @return {?}\n */\nfocus(): void {\n    const /** @type {?} */ element = this._getHostElement();\n\n    if (typeof element.focus === 'function') {\n      element.focus();\n    }\n  }\n/**\n * This method sets display styles on the option to make it appear\n * active. This is used by the ActiveDescendantKeyManager so key\n * events will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetActiveStyles(): void {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * This method removes display styles on the option that made it appear\n * active. This is used by the ActiveDescendantKeyManager so key\n * events will display the proper options as active on arrow key events.\n * @return {?}\n */\nsetInactiveStyles(): void {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n/**\n * Gets the label to be used when determining whether the option should be focused.\n * @return {?}\n */\ngetLabel(): string {\n    return this.viewValue;\n  }\n/**\n * Ensures the option is selected when activated from the keyboard.\n * @param {?} event\n * @return {?}\n */\n_handleKeydown(event: KeyboardEvent): void {\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\n      this._selectViaInteraction();\n\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n/**\n * Selects the option while indicating the selection came from the user. Used to\n * determine if the select's view -> model callback should be invoked.\n * @return {?}\n */\n_selectViaInteraction(): void {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n/**\n * Returns the correct tabindex for the option depending on disabled state.\n * @return {?}\n */\n_getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n/**\n * Gets the host DOM element.\n * @return {?}\n */\n_getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n/**\n * Emits the selection change event.\n * @param {?=} isUserInput\n * @return {?}\n */\nprivate _emitSelectionChangeEvent(isUserInput = false): void {\n    this.onSelectionChange.emit(new MdOptionSelectionChange(this, isUserInput));\n  }\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nstatic countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MdOption>,\n    optionGroups: QueryList<MdOptgroup>): number {\n\n    if (optionGroups.length) {\n      let /** @type {?} */ optionsArray = options.toArray();\n      let /** @type {?} */ groups = optionGroups.toArray();\n      let /** @type {?} */ groupCounter = 0;\n\n      for (let /** @type {?} */ i = 0; i < optionIndex + 1; i++) {\n        if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n          groupCounter++;\n        }\n      }\n\n      return groupCounter;\n    }\n\n    return 0;\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-option, mat-option',\n  host: {\n    'role': 'option',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[class.mat-selected]': 'selected',\n    '[class.mat-option-multiple]': 'multiple',\n    '[class.mat-active]': 'active',\n    '[id]': 'id',\n    '[attr.aria-selected]': 'selected.toString()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[class.mat-option-disabled]': 'disabled',\n    '(click)': '_selectViaInteraction()',\n    '(keydown)': '_handleKeydown($event)',\n    'class': 'mat-option',\n  },\n  templateUrl: 'option.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ChangeDetectorRef, },\n{type: MdOptgroup, decorators: [{ type: Optional }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'disabled': [{ type: Input },],\n'onSelectionChange': [{ type: Output },],\n};\n}\n\nfunction MdOption_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOption.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOption.ctorParameters;\n/** @type {?} */\nMdOption.propDecorators;\n/** @type {?} */\nMdOption.prototype._selected;\n/** @type {?} */\nMdOption.prototype._active;\n/** @type {?} */\nMdOption.prototype._multiple;\n/** @type {?} */\nMdOption.prototype._disableRipple;\n/**\n * Whether the option is disabled.\n * @type {?}\n */\nMdOption.prototype._disabled;\n/** @type {?} */\nMdOption.prototype._id;\n/**\n * The form value of the option.\n * @type {?}\n */\nMdOption.prototype.value;\n/**\n * Event emitted when the option is selected or deselected.\n * @type {?}\n */\nMdOption.prototype.onSelectionChange;\n/** @type {?} */\nMdOption.prototype._element;\n/** @type {?} */\nMdOption.prototype._changeDetectorRef;\n/** @type {?} */\nMdOption.prototype.group;\n/** @type {?} */\nMdOption.prototype._isCompatibilityMode;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\n/**\n * \\@docs-private\n */\nexport class MdOptgroupBase { }\nexport const /** @type {?} */ _MdOptgroupMixinBase = mixinDisabled(MdOptgroupBase);\n\n// Counter for unique group ids.\nlet /** @type {?} */ _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `md-option`.\n */\nexport class MdOptgroup extends _MdOptgroupMixinBase implements CanDisable {\n/**\n * Label for the option group.\n */\nlabel: string;\n/**\n * Unique id for the underlying label.\n */\n_labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  selector: 'md-optgroup, mat-optgroup',\n  templateUrl: 'optgroup.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  host: {\n    'class': 'mat-optgroup',\n    'role': 'group',\n    '[class.mat-optgroup-disabled]': 'disabled',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-labelledby]': '_labelId',\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'label': [{ type: Input },],\n};\n}\n\nfunction MdOptgroup_tsickle_Closure_declarations() {\n/** @type {?} */\nMdOptgroup.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdOptgroup.ctorParameters;\n/** @type {?} */\nMdOptgroup.propDecorators;\n/**\n * Label for the option group.\n * @type {?}\n */\nMdOptgroup.prototype.label;\n/**\n * Unique id for the underlying label.\n * @type {?}\n */\nMdOptgroup.prototype._labelId;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {Constructor} from './constructor';\n\n/** @docs-private */\nexport interface CanDisable {\n  disabled: boolean;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\n  return class extends base {\nprivate _disabled: boolean = false;\n/**\n * @return {?}\n */\nget disabled() { return this._disabled; }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\n/**\n * @param {...?} args\n */\nconstructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {MdPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\nexport class MdPseudoCheckboxModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [MdPseudoCheckbox],\n  declarations: [MdPseudoCheckbox]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdPseudoCheckboxModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPseudoCheckboxModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPseudoCheckboxModule.ctorParameters;\n}\n\n\n\nexport {MdPseudoCheckboxState,MdPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\n\nexport type MdPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n * \n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with <md-checkbox> and should *not* be used if the user would directly interact\n * with the checkbox. The pseudo-checkbox should only be used as an implementation detail of\n * more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nexport class MdPseudoCheckbox {\n/**\n * Display state of the checkbox.\n */\nstate: MdPseudoCheckboxState = 'unchecked';\n/**\n * Whether the checkbox is disabled.\n */\ndisabled: boolean = false;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  moduleId: module.id,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'md-pseudo-checkbox, mat-pseudo-checkbox',\n  styleUrls: ['pseudo-checkbox.css'],\n  template: '',\n  host: {\n    'class': 'mat-pseudo-checkbox',\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n  },\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'state': [{ type: Input },],\n'disabled': [{ type: Input },],\n};\n}\n\nfunction MdPseudoCheckbox_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPseudoCheckbox.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPseudoCheckbox.ctorParameters;\n/** @type {?} */\nMdPseudoCheckbox.propDecorators;\n/**\n * Display state of the checkbox.\n * @type {?}\n */\nMdPseudoCheckbox.prototype.state;\n/**\n * Whether the checkbox is disabled.\n * @type {?}\n */\nMdPseudoCheckbox.prototype.disabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule} from '@angular/core';\nimport {ScrollDispatchModule, VIEWPORT_RULER_PROVIDER} from '@angular/cdk/scrolling';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {MdCommonModule} from '../common-behaviors/common-module';\nimport {MdRipple} from './ripple';\n\nexport {MdRipple, RippleGlobalOptions, MD_RIPPLE_GLOBAL_OPTIONS} from './ripple';\nexport {RippleRef, RippleState} from './ripple-ref';\nexport {RippleConfig, RIPPLE_FADE_IN_DURATION, RIPPLE_FADE_OUT_DURATION} from './ripple-renderer';\nexport class MdRippleModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule, PlatformModule, ScrollDispatchModule],\n  exports: [MdRipple, MdCommonModule],\n  declarations: [MdRipple],\n  providers: [VIEWPORT_RULER_PROVIDER],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdRippleModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRippleModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRippleModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  Inject,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  InjectionToken,\n  Optional,\n} from '@angular/core';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {Platform} from '@angular/cdk/platform';\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nimport {RippleRef} from './ripple-ref';\n\nexport interface RippleGlobalOptions {\n  disabled?: boolean;\n  baseSpeedFactor?: number;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n */\nexport const MD_RIPPLE_GLOBAL_OPTIONS =\n    new InjectionToken<RippleGlobalOptions>('md-ripple-global-options');\nexport class MdRipple implements OnChanges, OnDestroy {\n\n  /**\n   * The element that triggers the ripple when click events are received. Defaults to the\n   * directive's host element.\n   */\n  // Prevent TS metadata emit from referencing HTMLElement in ripple.js\n  // Otherwise running this code in a Node environment (e.g Universal) will not work.\n   trigger: HTMLElement|HTMLElement;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n */\ncentered: boolean;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\n * by using the `launch()` method.\n */\ndisabled: boolean;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n */\nradius: number = 0;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n */\nspeedFactor: number = 1;\n/**\n * Custom color for ripples.\n */\ncolor: string;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n */\nunbounded: boolean;\n/**\n * @return {?}\n */\nget _matRippleTrigger() { return this.trigger; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleTrigger(v) { this.trigger = v; }\n/**\n * @return {?}\n */\nget _matRippleCentered() { return this.centered; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleCentered(v) { this.centered = v; }\n/**\n * @return {?}\n */\nget _matRippleDisabled() { return this.disabled; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleDisabled(v) { this.disabled = v; }\n/**\n * @return {?}\n */\nget _matRippleRadius() { return this.radius; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleRadius(v) { this.radius = v; }\n/**\n * @return {?}\n */\nget _matRippleSpeedFactor() { return this.speedFactor; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleSpeedFactor(v) { this.speedFactor = v; }\n/**\n * @return {?}\n */\nget _matRippleColor() { return this.color; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleColor(v) { this.color = v; }\n/**\n * @return {?}\n */\nget _matRippleUnbounded() { return this.unbounded; }\n/**\n * @param {?} v\n * @return {?}\n */\nset _matRippleUnbounded(v) { this.unbounded = v; }\n/**\n * Renderer for the ripple DOM manipulations.\n */\nprivate _rippleRenderer: RippleRenderer;\n/**\n * Options that are set globally for all ripples.\n */\nprivate _globalOptions: RippleGlobalOptions;\n/**\n * @param {?} elementRef\n * @param {?} ngZone\n * @param {?} ruler\n * @param {?} platform\n * @param {?} globalOptions\n */\nconstructor(\n    elementRef: ElementRef,\n    ngZone: NgZone,\n    ruler: ViewportRuler,\n    platform: Platform,\n      globalOptions: RippleGlobalOptions\n  ) {\n    this._rippleRenderer = new RippleRenderer(elementRef, ngZone, ruler, platform);\n    this._globalOptions = globalOptions ? globalOptions : {};\n\n    this._updateRippleRenderer();\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\nngOnChanges(changes: SimpleChanges) {\n    if (changes['trigger'] && this.trigger) {\n      this._rippleRenderer.setTriggerElement(this.trigger);\n    }\n\n    this._updateRippleRenderer();\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    // Set the trigger element to null to cleanup all listeners.\n    this._rippleRenderer.setTriggerElement(null);\n  }\n/**\n * Launches a manual ripple at the specified position.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nlaunch(pageX: number, pageY: number, config = this.rippleConfig): RippleRef {\n    return this._rippleRenderer.fadeInRipple(pageX, pageY, config);\n  }\n/**\n * Fades out all currently showing ripple elements.\n * @return {?}\n */\nfadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n/**\n * Ripple configuration from the directive's input values.\n * @return {?}\n */\nget rippleConfig(): RippleConfig {\n    return {\n      centered: this.centered,\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\n      radius: this.radius,\n      color: this.color\n    };\n  }\n/**\n * Updates the ripple renderer with the latest ripple configuration.\n * @return {?}\n */\n_updateRippleRenderer() {\n    this._rippleRenderer.rippleDisabled = this._globalOptions.disabled || this.disabled;\n    this._rippleRenderer.rippleConfig = this.rippleConfig;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-ripple], [mat-ripple], [mdRipple], [matRipple]',\n  exportAs: 'mdRipple',\n  host: {\n    'class': 'mat-ripple',\n    '[class.mat-ripple-unbounded]': 'unbounded'\n  }\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: NgZone, },\n{type: ViewportRuler, },\n{type: Platform, },\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MD_RIPPLE_GLOBAL_OPTIONS, ] }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'trigger': [{ type: Input, args: ['mdRippleTrigger', ] },],\n'centered': [{ type: Input, args: ['mdRippleCentered', ] },],\n'disabled': [{ type: Input, args: ['mdRippleDisabled', ] },],\n'radius': [{ type: Input, args: ['mdRippleRadius', ] },],\n'speedFactor': [{ type: Input, args: ['mdRippleSpeedFactor', ] },],\n'color': [{ type: Input, args: ['mdRippleColor', ] },],\n'unbounded': [{ type: Input, args: ['mdRippleUnbounded', ] },],\n'_matRippleTrigger': [{ type: Input, args: ['matRippleTrigger', ] },],\n'_matRippleCentered': [{ type: Input, args: ['matRippleCentered', ] },],\n'_matRippleDisabled': [{ type: Input, args: ['matRippleDisabled', ] },],\n'_matRippleRadius': [{ type: Input, args: ['matRippleRadius', ] },],\n'_matRippleSpeedFactor': [{ type: Input, args: ['matRippleSpeedFactor', ] },],\n'_matRippleColor': [{ type: Input, args: ['matRippleColor', ] },],\n'_matRippleUnbounded': [{ type: Input, args: ['matRippleUnbounded', ] },],\n};\n}\n\nfunction MdRipple_tsickle_Closure_declarations() {\n/** @type {?} */\nMdRipple.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdRipple.ctorParameters;\n/** @type {?} */\nMdRipple.propDecorators;\n/** @type {?} */\nMdRipple.prototype.trigger;\n/**\n * Whether the ripple always originates from the center of the host element's bounds, rather\n * than originating from the location of the click event.\n * @type {?}\n */\nMdRipple.prototype.centered;\n/**\n * Whether click events will not trigger the ripple. Ripples can be still launched manually\n * by using the `launch()` method.\n * @type {?}\n */\nMdRipple.prototype.disabled;\n/**\n * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n * will be the distance from the center of the ripple to the furthest corner of the host element's\n * bounding rectangle.\n * @type {?}\n */\nMdRipple.prototype.radius;\n/**\n * If set, the normal duration of ripple animations is divided by this value. For example,\n * setting it to 0.5 will cause the animations to take twice as long.\n * A changed speedFactor will not modify the fade-out duration of the ripples.\n * @type {?}\n */\nMdRipple.prototype.speedFactor;\n/**\n * Custom color for ripples.\n * @type {?}\n */\nMdRipple.prototype.color;\n/**\n * Whether foreground ripples should be visible outside the component's bounds.\n * @type {?}\n */\nMdRipple.prototype.unbounded;\n/**\n * Renderer for the ripple DOM manipulations.\n * @type {?}\n */\nMdRipple.prototype._rippleRenderer;\n/**\n * Options that are set globally for all ripples.\n * @type {?}\n */\nMdRipple.prototype._globalOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {ElementRef, NgZone} from '@angular/core';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {RippleRef, RippleState} from './ripple-ref';\n/**\n * Fade-in duration for the ripples. Can be modified with the speedFactor option.\n */\nexport const RIPPLE_FADE_IN_DURATION = 450;\n/**\n * Fade-out duration for the ripples in milliseconds. This can't be modified by the speedFactor.\n */\nexport const RIPPLE_FADE_OUT_DURATION = 400;\n\nexport type RippleConfig = {\n  color?: string;\n  centered?: boolean;\n  radius?: number;\n  speedFactor?: number;\n  persistent?: boolean;\n};\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nexport class RippleRenderer {\n/**\n * Element where the ripples are being added to.\n */\nprivate _containerElement: HTMLElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n */\nprivate _triggerElement: HTMLElement | null;\n/**\n * Whether the mouse is currently down or not.\n */\nprivate _isMousedown: boolean = false;\n/**\n * Events to be registered on the trigger element.\n */\nprivate _triggerEvents = new Map<string, any>();\n/**\n * Set of currently active ripple references.\n */\nprivate _activeRipples = new Set<RippleRef>();\n/**\n * Ripple config for all ripples created by events.\n */\nrippleConfig: RippleConfig = {};\n/**\n * Whether mouse ripples should be created or not.\n */\nrippleDisabled: boolean = false;\n/**\n * @param {?} elementRef\n * @param {?} _ngZone\n * @param {?} _ruler\n * @param {?} platform\n */\nconstructor(\n      elementRef: ElementRef,\nprivate _ngZone: NgZone,\nprivate _ruler: ViewportRuler,\n      platform: Platform) {\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = elementRef.nativeElement;\n\n      // Specify events which need to be registered on the trigger.\n      this._triggerEvents.set('mousedown', this.onMousedown.bind(this));\n      this._triggerEvents.set('mouseup', this.onMouseup.bind(this));\n      this._triggerEvents.set('mouseleave', this.onMouseLeave.bind(this));\n\n      // By default use the host element as trigger element.\n      this.setTriggerElement(this._containerElement);\n    }\n  }\n/**\n * Fades in a ripple at the given coordinates.\n * @param {?} pageX\n * @param {?} pageY\n * @param {?=} config\n * @return {?}\n */\nfadeInRipple(pageX: number, pageY: number, config: RippleConfig = {}): RippleRef {\n    let /** @type {?} */ containerRect = this._containerElement.getBoundingClientRect();\n\n    if (config.centered) {\n      pageX = containerRect.left + containerRect.width / 2;\n      pageY = containerRect.top + containerRect.height / 2;\n    } else {\n      // Subtract scroll values from the coordinates because calculations below\n      // are always relative to the viewport rectangle.\n      let /** @type {?} */ scrollPosition = this._ruler.getViewportScrollPosition();\n      pageX -= scrollPosition.left;\n      pageY -= scrollPosition.top;\n    }\n\n    let /** @type {?} */ radius = config.radius || distanceToFurthestCorner(pageX, pageY, containerRect);\n    let /** @type {?} */ duration = RIPPLE_FADE_IN_DURATION * (1 / (config.speedFactor || 1));\n    let /** @type {?} */ offsetX = pageX - containerRect.left;\n    let /** @type {?} */ offsetY = pageY - containerRect.top;\n\n    let /** @type {?} */ ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n\n    // If the color is not set, the default CSS color will be used.\n    ripple.style.backgroundColor = config.color || null;\n    ripple.style.transitionDuration = `${duration}ms`;\n\n    this._containerElement.appendChild(ripple);\n\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n\n    ripple.style.transform = 'scale(1)';\n\n    // Exposed reference to the ripple that will be returned.\n    let /** @type {?} */ rippleRef = new RippleRef(this, ripple, config);\n\n    rippleRef.state = RippleState.FADING_IN;\n\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.VISIBLE;\n\n      if (!config.persistent && !this._isMousedown) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n\n    return rippleRef;\n  }\n/**\n * Fades out a ripple reference.\n * @param {?} rippleRef\n * @return {?}\n */\nfadeOutRipple(rippleRef: RippleRef) {\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\n    if (!this._activeRipples.delete(rippleRef)) {\n      return;\n    }\n\n    let /** @type {?} */ rippleEl = rippleRef.element;\n\n    rippleEl.style.transitionDuration = `${RIPPLE_FADE_OUT_DURATION}ms`;\n    rippleEl.style.opacity = '0';\n\n    rippleRef.state = RippleState.FADING_OUT;\n\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this.runTimeoutOutsideZone(() => {\n      rippleRef.state = RippleState.HIDDEN; /** @type {?} */((\n      rippleEl.parentNode)).removeChild(rippleEl);\n    }, RIPPLE_FADE_OUT_DURATION);\n  }\n/**\n * Fades out all currently active ripples.\n * @return {?}\n */\nfadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n/**\n * Sets the trigger element and registers the mouse events.\n * @param {?} element\n * @return {?}\n */\nsetTriggerElement(element: HTMLElement | null) {\n    // Remove all previously register event listeners from the trigger element.\n    if (this._triggerElement) {\n      this._triggerEvents.forEach((fn, type) => { /** @type {?} */((\n        this._triggerElement)).removeEventListener(type, fn);\n      });\n    }\n\n    if (element) {\n      // If the element is not null, register all event listeners on the trigger element.\n      this._ngZone.runOutsideAngular(() => {\n        this._triggerEvents.forEach((fn, type) => element.addEventListener(type, fn));\n      });\n    }\n\n    this._triggerElement = element;\n  }\n/**\n * Listener being called on mousedown event.\n * @param {?} event\n * @return {?}\n */\nprivate onMousedown(event: MouseEvent) {\n    if (!this.rippleDisabled) {\n      this._isMousedown = true;\n      this.fadeInRipple(event.pageX, event.pageY, this.rippleConfig);\n    }\n  }\n/**\n * Listener being called on mouseup event.\n * @return {?}\n */\nprivate onMouseup() {\n    this._isMousedown = false;\n\n    // Fade-out all ripples that are completely visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent && ripple.state === RippleState.VISIBLE) {\n        ripple.fadeOut();\n      }\n    });\n  }\n/**\n * Listener being called on mouseleave event.\n * @return {?}\n */\nprivate onMouseLeave() {\n    if (this._isMousedown) {\n      this.onMouseup();\n    }\n  }\n/**\n * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n * @param {?} fn\n * @param {?=} delay\n * @return {?}\n */\nprivate runTimeoutOutsideZone(fn: Function, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n\n}\n\nfunction RippleRenderer_tsickle_Closure_declarations() {\n/**\n * Element where the ripples are being added to.\n * @type {?}\n */\nRippleRenderer.prototype._containerElement;\n/**\n * Element which triggers the ripple elements on mouse events.\n * @type {?}\n */\nRippleRenderer.prototype._triggerElement;\n/**\n * Whether the mouse is currently down or not.\n * @type {?}\n */\nRippleRenderer.prototype._isMousedown;\n/**\n * Events to be registered on the trigger element.\n * @type {?}\n */\nRippleRenderer.prototype._triggerEvents;\n/**\n * Set of currently active ripple references.\n * @type {?}\n */\nRippleRenderer.prototype._activeRipples;\n/**\n * Ripple config for all ripples created by events.\n * @type {?}\n */\nRippleRenderer.prototype.rippleConfig;\n/**\n * Whether mouse ripples should be created or not.\n * @type {?}\n */\nRippleRenderer.prototype.rippleDisabled;\n/** @type {?} */\nRippleRenderer.prototype._ngZone;\n/** @type {?} */\nRippleRenderer.prototype._ruler;\n}\n\n/**\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element: HTMLElement) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\n  const /** @type {?} */ distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const /** @type {?} */ distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\nexport type RippleState = number;\nexport let RippleState: any = {};\nRippleState.FADING_IN = 0;\nRippleState.VISIBLE = 1;\nRippleState.FADING_OUT = 2;\nRippleState.HIDDEN = 3;\nRippleState[RippleState.FADING_IN] = \"FADING_IN\";\nRippleState[RippleState.VISIBLE] = \"VISIBLE\";\nRippleState[RippleState.FADING_OUT] = \"FADING_OUT\";\nRippleState[RippleState.HIDDEN] = \"HIDDEN\";\n\n/**\n * Reference to a previously launched ripple element.\n */\nexport class RippleRef {\n/**\n * Current state of the ripple reference.\n */\nstate: RippleState = RippleState.HIDDEN;\n/**\n * @param {?} _renderer\n * @param {?} element\n * @param {?} config\n */\nconstructor(\nprivate _renderer: RippleRenderer,\npublic element: HTMLElement,\npublic config: RippleConfig) {\n  }\n/**\n * Fades out the ripple element.\n * @return {?}\n */\nfadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\nfunction RippleRef_tsickle_Closure_declarations() {\n/**\n * Current state of the ripple reference.\n * @type {?}\n */\nRippleRef.prototype.state;\n/** @type {?} */\nRippleRef.prototype._renderer;\n/** @type {?} */\nRippleRef.prototype.element;\n/** @type {?} */\nRippleRef.prototype.config;\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {\n  NgModule,\n  Directive,\n  Renderer2,\n  ElementRef,\n  QueryList,\n} from '@angular/core';\nimport {MdCommonModule} from '../common-behaviors/common-module';\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MdLine) query, then\n * counted by checking the query list's length.\n */\nexport class MdLine {static decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[md-line], [mat-line], [mdLine], [matLine]',\n  host: {'class': 'mat-line'}\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdLine_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLine.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdLine.ctorParameters;\n}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n */\nexport class MdLineSetter {\n/**\n * @param {?} _lines\n * @param {?} _renderer\n * @param {?} _element\n */\nconstructor(private _lines: QueryList<MdLine>,\nprivate _renderer: Renderer2,\nprivate _element: ElementRef) {\n    this._setLineClass(this._lines.length);\n\n    this._lines.changes.subscribe(() => {\n      this._setLineClass(this._lines.length);\n    });\n  }\n/**\n * @param {?} count\n * @return {?}\n */\nprivate _setLineClass(count: number): void {\n    this._resetClasses();\n    if (count === 2 || count === 3) {\n      this._setClass(`mat-${count}-line`, true);\n    } else if (count > 3) {\n      this._setClass(`mat-multi-line`, true);\n    }\n  }\n/**\n * @return {?}\n */\nprivate _resetClasses(): void {\n    this._setClass('mat-2-line', false);\n    this._setClass('mat-3-line', false);\n    this._setClass('mat-multi-line', false);\n  }\n/**\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nprivate _setClass(className: string, isAdd: boolean): void {\n    if (isAdd) {\n      this._renderer.addClass(this._element.nativeElement, className);\n    } else {\n      this._renderer.removeClass(this._element.nativeElement, className);\n    }\n  }\n\n}\n\nfunction MdLineSetter_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLineSetter.prototype._lines;\n/** @type {?} */\nMdLineSetter.prototype._renderer;\n/** @type {?} */\nMdLineSetter.prototype._element;\n}\n\nexport class MdLineModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [MdCommonModule],\n  exports: [MdLine, MdCommonModule],\n  declarations: [MdLine],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction MdLineModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdLineModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdLineModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\nimport {DOCUMENT} from '@angular/platform-browser';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {CompatibilityModule} from '../compatibility/compatibility';\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n */\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('md-sanity-checks');\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, compatibility mode, etc.\n * \n * This module should be imported to each top-level component module (e.g., MdTabsModule).\n */\nexport class MdCommonModule {\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n */\nprivate _hasDoneGlobalChecks = false;\n/**\n * @param {?} _document\n * @param {?} _sanityChecksEnabled\n */\nconstructor(\nprivate _document: any,\n      _sanityChecksEnabled: boolean) {\n\n    if (_sanityChecksEnabled && !this._hasDoneGlobalChecks && _document && isDevMode()) {\n      this._checkDoctype();\n      this._checkTheme();\n      this._hasDoneGlobalChecks = true;\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkDoctype(): void {\n    if (!this._document.doctype) {\n      console.warn(\n        'Current document does not have a doctype. This may cause ' +\n        'some Angular Material components not to behave as expected.'\n      );\n    }\n  }\n/**\n * @return {?}\n */\nprivate _checkTheme(): void {\n    if (typeof getComputedStyle === 'function') {\n      const /** @type {?} */ testElement = this._document.createElement('div');\n\n      testElement.classList.add('mat-theme-loaded-marker');\n      this._document.body.appendChild(testElement);\n\n      if (getComputedStyle(testElement).display !== 'none') {\n        console.warn(\n          'Could not find Angular Material core theme. Most Material ' +\n          'components may not work as expected. For more info refer ' +\n          'to the theming guide: https://material.angular.io/guide/theming'\n        );\n      }\n\n      this._document.body.removeChild(testElement);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CompatibilityModule, BidiModule],\n  exports: [CompatibilityModule, BidiModule],\n  providers: [{\n    provide: MATERIAL_SANITY_CHECKS, useValue: true,\n  }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT, ] }, ]},\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS, ] }, ]},\n];\n}\n\nfunction MdCommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMdCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdCommonModule.ctorParameters;\n/**\n * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n * @type {?}\n */\nMdCommonModule.prototype._hasDoneGlobalChecks;\n/** @type {?} */\nMdCommonModule.prototype._document;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {NgModule, Directive, Inject, Optional, ElementRef, InjectionToken} from '@angular/core';\n\nexport const /** @type {?} */ MATERIAL_COMPATIBILITY_MODE = new InjectionToken<boolean>('md-compatibility-mode');\n/**\n * Returns an exception to be thrown if the consumer has used\n * an invalid Material prefix on a component.\n * \\@docs-private\n * @param {?} prefix\n * @param {?} nodeName\n * @return {?}\n */\nexport function getMdCompatibilityInvalidPrefixError(prefix: string, nodeName: string) {\n  return Error(`The \"${prefix}-\" prefix cannot be used in ng-material v1 compatibility mode. ` +\n                   `It was used on an \"${nodeName.toLowerCase()}\" element.`);\n}\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MAT_ELEMENTS_SELECTOR = `\n  [mat-button],\n  [mat-fab],\n  [mat-icon-button],\n  [mat-mini-fab],\n  [mat-raised-button],\n  [matCardSubtitle],\n  [matCardTitle],\n  [matCellDef],\n  [matColumnDef],\n  [matDialogActions],\n  [matDialogClose],\n  [matDialogContent],\n  [matDialogTitle],\n  [matHeaderCellDef],\n  [matHeaderRowDef],\n  [matLine],\n  [matRowDef],\n  [matTabLabel],\n  [matTabLink],\n  [matTabNav],\n  [matTooltip],\n  [matInput],\n  [matPrefix],\n  [matSuffix],\n  mat-autocomplete,\n  mat-button-toggle,\n  mat-button-toggle,\n  mat-button-toggle-group,\n  mat-card,\n  mat-card-actions,\n  mat-card-content,\n  mat-card-footer,\n  mat-card-header,\n  mat-card-subtitle,\n  mat-card-title,\n  mat-card-title-group,\n  mat-cell,\n  mat-checkbox,\n  mat-chip,\n  mat-dialog-actions,\n  mat-dialog-container,\n  mat-dialog-content,\n  mat-divider,\n  mat-error,\n  mat-grid-list,\n  mat-grid-tile,\n  mat-grid-tile-footer,\n  mat-grid-tile-header,\n  mat-header-cell,\n  mat-header-row,\n  mat-hint,\n  mat-icon,\n  mat-input-container,\n  mat-form-field,\n  mat-list,\n  mat-list-item,\n  mat-menu,\n  mat-nav-list,\n  mat-option,\n  mat-placeholder,\n  mat-progress-bar,\n  mat-pseudo-checkbox,\n  mat-radio-button,\n  mat-radio-group,\n  mat-row,\n  mat-select,\n  mat-sidenav,\n  mat-sidenav-container,\n  mat-slider,\n  mat-spinner,\n  mat-tab,\n  mat-table,\n  mat-tab-group,\n  mat-toolbar`;\n/**\n * Selector that matches all elements that may have style collisions with AngularJS Material.\n */\nexport const MD_ELEMENTS_SELECTOR = `\n  [md-button],\n  [md-fab],\n  [md-icon-button],\n  [md-mini-fab],\n  [md-raised-button],\n  [mdCardSubtitle],\n  [mdCardTitle],\n  [mdCellDef],\n  [mdColumnDef],\n  [mdDialogActions],\n  [mdDialogClose],\n  [mdDialogContent],\n  [mdDialogTitle],\n  [mdHeaderCellDef],\n  [mdHeaderRowDef],\n  [mdLine],\n  [mdRowDef],\n  [mdTabLabel],\n  [mdTabLink],\n  [mdTabNav],\n  [mdTooltip],\n  [mdInput],\n  [mdPrefix],\n  [mdSuffix],\n  md-autocomplete,\n  md-button-toggle,\n  md-button-toggle,\n  md-button-toggle-group,\n  md-card,\n  md-card-actions,\n  md-card-content,\n  md-card-footer,\n  md-card-header,\n  md-card-subtitle,\n  md-card-title,\n  md-card-title-group,\n  md-cell,\n  md-checkbox,\n  md-chip,\n  md-dialog-actions,\n  md-dialog-container,\n  md-dialog-content,\n  md-divider,\n  md-error,\n  md-grid-list,\n  md-grid-tile,\n  md-grid-tile-footer,\n  md-grid-tile-header,\n  md-header-cell,\n  md-header-row,\n  md-hint,\n  md-icon,\n  md-input-container,\n  md-form-field,\n  md-list,\n  md-list-item,\n  md-menu,\n  md-nav-list,\n  md-option,\n  md-placeholder,\n  md-progress-bar,\n  md-pseudo-checkbox,\n  md-radio-button,\n  md-radio-group,\n  md-row,\n  md-select,\n  md-sidenav,\n  md-sidenav-container,\n  md-slider,\n  md-spinner,\n  md-tab,\n  md-table,\n  md-tab-group,\n  md-toolbar`;\n/**\n * Directive that enforces that the `mat-` prefix cannot be used.\n */\nexport class MatPrefixRejector {\n/**\n * @param {?} isCompatibilityMode\n * @param {?} elementRef\n */\nconstructor(\n      isCompatibilityMode: boolean,\n    elementRef: ElementRef) {\n\n    if (!isCompatibilityMode) {\n      throw getMdCompatibilityInvalidPrefixError('mat', elementRef.nativeElement.nodeName);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MAT_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction MatPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMatPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMatPrefixRejector.ctorParameters;\n}\n\n/**\n * Directive that enforces that the `md-` prefix cannot be used.\n */\nexport class MdPrefixRejector {\n/**\n * @param {?} isCompatibilityMode\n * @param {?} elementRef\n */\nconstructor(\n      isCompatibilityMode: boolean,\n    elementRef: ElementRef) {\n\n    if (isCompatibilityMode) {\n      throw getMdCompatibilityInvalidPrefixError('md', elementRef.nativeElement.nodeName);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: MD_ELEMENTS_SELECTOR}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_COMPATIBILITY_MODE, ] }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction MdPrefixRejector_tsickle_Closure_declarations() {\n/** @type {?} */\nMdPrefixRejector.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMdPrefixRejector.ctorParameters;\n}\n\n/**\n * Module that enforces the default compatibility mode settings. When this module is loaded\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\n * there are any uses of the `mat-` prefix.\n */\nexport class CompatibilityModule {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [MatPrefixRejector, MdPrefixRejector],\n  exports: [MatPrefixRejector, MdPrefixRejector],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CompatibilityModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCompatibilityModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCompatibilityModule.ctorParameters;\n}\n\n/**\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\n * it will throw an error if there are any uses of the `md-` prefix.\n */\nexport class NoConflictStyleCompatibilityMode {static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [{\n    provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\n  }],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NoConflictStyleCompatibilityMode_tsickle_Closure_declarations() {\n/** @type {?} */\nNoConflictStyleCompatibilityMode.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNoConflictStyleCompatibilityMode.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nimport {Version} from '@angular/core';\n/**\n * Current version of Angular Material.\n */\nexport const VERSION = new Version('2.0.0-beta.10');\n"],"names":["nextId","filter","observableOf","_applyConfigDefaults","ScrollDispatcher","VIEWPORT_RULER_PROVIDER","ViewportRuler","state","nextUniqueId","clamp","animate","observableThrow","style","_uniqueIdCounter","first"],"mappings":"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"}