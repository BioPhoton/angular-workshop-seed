import { ApolloQueryResult, ObservableQuery, ApolloError, FetchMoreQueryOptions, FetchMoreOptions, SubscribeToMoreOptions, UpdateQueryOptions } from 'apollo-client';
import { ApolloCurrentResult } from 'apollo-client/core/ObservableQuery';
import { Observable } from 'rxjs/Observable';
export declare class QueryRef<T> {
    private obsQuery;
    valueChanges: Observable<ApolloQueryResult<T>>;
    constructor(obsQuery: ObservableQuery<T>);
    result(): Promise<ApolloQueryResult<T>>;
    currentResult(): ApolloCurrentResult<T>;
    getLastResult(): ApolloQueryResult<T>;
    getLastError(): ApolloError;
    resetLastResults(): void;
    refetch(variables?: any): Promise<ApolloQueryResult<T>>;
    fetchMore(fetchMoreOptions: FetchMoreQueryOptions & FetchMoreOptions): Promise<ApolloQueryResult<T>>;
    subscribeToMore(options: SubscribeToMoreOptions): () => void;
    updateQuery(mapFn: (previousQueryResult: any, options: UpdateQueryOptions) => any): void;
    stopPolling(): void;
    startPolling(pollInterval: number): void;
    setOptions(opts: any): Promise<ApolloQueryResult<T>>;
    setVariables(variables: any, tryFetch?: boolean, fetchResults?: boolean): Promise<ApolloQueryResult<T>>;
}
